%!PS-Adobe-3.0 EPSF-3.0
%%Title: (<4D6963726F736F667420576F7264202D20BBF9D3DA53564DB5C4D6D0CEC4CEC4B1BEB7D6C0E0C6)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 22:28:14 04/28/08
%%For: (tony)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 216 108 397 482
%%HiResBoundingBox: 216.0 108.0 397.22 482.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource ArialMT
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N15/ArialMT -1 TZ
%%IncludeResource Arial-BoldMT
[ 0 /space/dotlessi/caron/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/space/space/space
/space/space/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/Euro/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/zcaron/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N18/Arial-BoldMT -1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3751 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2008-04-28T22:28:14+08:00</xap:CreateDate>
         <xap:ModifyDate>2008-04-28T22:28:14+08:00</xap:ModifyDate>
         <xap:MetadataDate>2008-04-28T22:28:14+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:0F99415B2E15DD1192F8F2982F4D75D6</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:0F99415B2E15DD1192F8F2982F4D75D6</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:1e060589-3398-43fe-996a-42c6d58121f7</stRef:instanceID>
            <stRef:documentID>uuid:44729d8b-6965-4784-ad8d-a0c12a4fdd17</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:creator>
            <rdf:Seq>
               <rdf:li>tony</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">&lt;4D6963726F736F667420576F7264202D20BBF9D3DA53564DB5C4D6D0CEC4CEC4B1BEB7D6C0E0C6F72E646F63&gt;</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
216.0 108.0 181.22 374.0 rectclip
/N20 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

q
216.0 108.0 m
397.22 108.0 l
397.22 482.0 l
216.0 482.0 l
h
W
n
0.21 w
1.0 M
n
271.92 439.64 m
324.6 439.64 l
334.32 439.64 342.18 447.5 342.18 457.22 c
342.18 466.88 334.32 474.74 324.6 474.74 c
271.92 474.74 l
262.2 474.74 254.34 466.88 254.34 457.22 c
254.34 447.5 262.2 439.64 271.92 439.64 c
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/E2 exch /ColorSpace defineRes

cs 0.9098 0.93333 0.96863 sc
eofill
1 J
1 j
0.297 w
10.0 M
n
271.92 439.64 m
324.6 439.64 l
334.32 439.64 342.18 447.5 342.18 457.22 c
342.18 466.88 334.32 474.74 324.6 474.74 c
271.92 474.74 l
262.2 474.74 254.34 466.88 254.34 457.22 c
254.34 447.5 262.2 439.64 271.92 439.64 c
h
0.0 0.0 0.0 sc
S
q
42.24 0.0 0.0 -11.16 268.98 462.08 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 704
/Height 186
/ImageMatrix [704.0 0.0 0.0 -186.0 0.0 186.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 704 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!b2mdTm4'kGafbpRFrOkX,KSIN%N9<54G@$U%:Ou21'kHdS2MAVJ*\lIa<o'S
ZC\[I@)5'4P(K?8_Zk8e(Y:-E8Ag&a$3-[9%Lb$u>UJ5[@0c*h0Z/V^+T6E:K+&lO
QY\Wh_B@U@*A'Wt_Zf_o(E75/$nnHn#2!n4#_Qa/oTk)PiJ*/&lsGD^9t(Rb6)S;'
9Aqf<0Sj?-0;,nRlnh'[C:kk[2[tEJcs9Rh_[%'3(XmQS02)#tL4Up7K`7IL&5`<:
63"D&1^Uo&-N0jNJmnF??hPEE+N*]"5OR53]^7)"$NG8f9Kr(^J*in]%o3HGrA\Ws
hFVf1&1@G28VaB2(&t^o%I'PZ$,>;RD[E(]htm_7Fa=N=s1;!uH4:,:qb<diL3%u4
p@F3?BnhcnU7cj\5M/]+'o2]/m0:[?66I9O<!K+E&)B/;O@3b#D[\kZDeT>CK.Xcl
m5?$6"@3%$iJ7BFU_-Q0%H3*7gY,3"K6u7#9td>71C]?&L\VL.GbBZoH[f)NcqnT<
LQ7jB8k"8Lp)cr@"dt)a_gPa-XH3p79Ke0sDbDqh-R#$m(k!accrgo(Dn#Gpd`T*]
fR5?b/5p<nqJEnt3nruu/IL-ZRr:qm%JAK(f439Hl!]\58;[5lgZs$Hhm[o<ds-:Z
V7+j"e_AOGYC0W'DCt8-]e8'odr2D`\+][mgSFS?]7'QpUV-K<otHT9\(t9%;tg+c
I4,&@GLF15ph+^7GL@VA<PHip`GOnRnf[<2eMZ1Z8[nED/%m2ol6=W"mB="b[C>Oo
PQq$]62%bc]j#nDZu^0Zlb9(dOVnr5^A$6dL`RGLT=:r9-Mg<KDr:#p?aj=S05-^a
M1Y-lH@OfgCAknaomYBeJ+\9EDqh)Tp%qhXs4+g:J%ojnqcE1N^\_`'g\^4oj*T>:
qf_]3\m>'>YMSZ\rq1KdhgKY">CUsD:KqqEmM2t7ronC3?2rasqgI>($2qPEj)+.8
)b6IQFoPnK&lR2*I8'=]%"STNm84Q*V;:N9%"N;RpZdmpJ:t98^@nOCA.s1@SY_(c
XV#Z![;0K`5k,Qe>1t3:9(oB(,"JI,.GYqI8:rT6&0ec1f$[c09s(5"TA*N%@"tn6
X8?5PD*LauCMNgUm;5).D6.[Tebq^HgWn5#j8'"_]tFtj2.++*hXsOTp&D\l?oP4T
qH^l%qrrRI]m"G`QLO>,?+0K]G7Ld@h82Hd?.0,q.UbZB.S(s]-r?un-r?:-UC%`8
/1=>JE)<5n"9:[o~>

Q
Q
q
16.32 0.0 0.0 -11.16 311.22 462.08 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 272
/Height 186
/ImageMatrix [272.0 0.0 0.0 -186.0 0.0 186.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 272 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!aW`Ll.Vf63l4+jR%NIP7g`/F7*tPUQmJgVpDtFuuYlD32^[;&>qg[7JgQ/i;
rnN<2m?+gU_LL<9qlf_FqeQ2_Y1inl0?L6K?f/'c[(grrJ+f5tFMI3r^O0,]YMT`e
_Yr[OpcuT?$iU]En=T.Wrs4>aJ+/#=Hm$2\&17G9!rq21^V17,rTG'tK\uaCs8R#l
s0r%.^[:dqn*T=Gqn%=Mp@r"j&@$_&'48Hf0>C52\4qHm+1M:MhsLFCr_5ZIg:Pr4
I-a?]+Y"%V#!D.JpUc31C%N<nCNr)2?@h"fmR'%-m66=C"T>BH#*F-+q$gc9g@R[9
-fXkC:`B;rJb4H(,%1H0Z6U@'D[htns6[T#g0]98^Ma)M[(kGKhfQV[Bn($djO<M'
^5/_2l$WiL9BePlV.k>FYmGB/V=rk^IqcLneY'[]SM.E0QhO/OTYGe[gTS?.rn.5=
qu-!`qeuN5^UJ5u#DSiHmoOhlG>M`9e[K>+?Y\?&h:fKK%>Pn8'B)9^WsOK6$ORSM
;1JoPJ-l~>

Q
Q
n
238.56 339.68 m
298.26 365.96 l
357.96 339.68 l
298.26 313.34 l
238.56 339.68 l
0.9098 0.93333 0.96863 sc
eofill
n
238.56 339.68 m
298.26 365.96 l
357.96 339.68 l
298.26 313.34 l
238.56 339.68 l
h
0.0 0.0 0.0 sc
S
q
59.52 0.0 0.0 -7.92 259.2 351.32 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 992
/Height 132
/ImageMatrix [992.0 0.0 0.0 -132.0 0.0 132.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 992 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask 22XZ7\_/Au[g72o#hWm_k&q/2,\:L8(D)mkahh7agI*i@)qo6-BS4?A+rOT[p7H-/
&2.iD$8r@QhnIHBK\P6HPM>Y#]:coITLnPIGARNYC`lRSf@gW+cq$=7$22_Q[XfQJ
I\5'GC`nQu+8UDm([[lhT_A=KBn"bC%>Xq=*Xb6h"oE"$"s2XcD(jX0=l'4@l)St)
<d-g^\)EGGTa<U)rIok7rV!@iqcV`?8,.M8QgHadpA`jO?aYLss!:^s^M@9XpU+f2
iK91Ne(WF>_a++up94Gc,R0&G$,6A@f)K(])GcE35PsqYV=4-X?NqAs'T<:3?cY%i
J,!FF^VABui5=8u?JR:00_W9]+ptM'Bb<ja&%28jp:WM:*NSYt[Hb6u?Klgjp?VW`
fDAois8QF!]t1uY9=M=t:]K[+gA>+Rr@`EmFT;AI+83JLBJ.p*=8VEPYO,]scs@OU
ec5IR_YA'K9J?6i0=sgT++Ah2\@2;0J*8N%l`]7;&Ut1L9rn6^a<g5X^EGKrlMoh;
+P4['RW&5bU)=),^BprBaIW5cM1bA'cWhfgY>>*B6J(1j,0l"9ec*>G6N^d@O;^!N
)$*C#BIGd1T>1)_%[7gHNN]Mt[#euhKDX87U1>G)Lh6cbeq5qjmF2)i]rOGOX8P4N
#Xo&8g9_]DXm>u;7F,_t&%_H6C\Fk7*rGX0et1Eb_sd9uCL*nS9fM`kP8F#g[>*%:
j__H?W#tu@f%OQsqro:-q=jEs.=4@9X4?G\rh"sThRE?Xrk@?G)mB*,:da1@p%W>c
.iWe=?gIJq]kc'Ms'P+UIgKtAfC7W3mn7HpJ$ARScs'kBnS*7&fCZMd:=*>V4='oX
a7>MPQ1j^VGX6hR3EU3,@Hi5ms$RA+V+72kLp[]N-[dZ?'7'uah@dHI?g09:^UL'7
6%>GnK+7#tiJ3("q??lIH40Up6!`\-nka0^TO6Hj$[a)3_#nD,_Z&C'?P(!>U.!hA
YO19MDB'Jk[;Fq7loZCr_W!WdD>3PV&2"q=]1oa'rn[nq_lp>WO6tm-@_P8:71".l
YIB0P)m+VYD:dOY!jDR2gQ7nYp@*kbe.@?Ns4_L]qfj5YfDb+uVS:n!$aI.lrq>/*
pA#cKD1DG"_I7l+T4M'<pP.K]p@5T+rJ,JSgV'fhiO1r=+9,jW.e`<1p[9:X>IXY+
S,3s#nP/t9J,;t=L&^gqC&du\Q)FO1cJSZD.Vet7TRZ>Og2HBT+A^nDBtq9+?hW+K
oY8jh^UJL@Y[dF]O?=BhH[aT(@b9B.Q\IYQDen_u6gTO#rND!g?R]j(g5)ocp5!im
HW7,^ZpPrZ/fRgXG\K('aK#]WYmi4pBdVQr5_/gMCUUV"-reViej>N&e0n.^X(r$=
TV2Xe_]1"lKaOO<VP-=L_J,]sJmiAH0WM@G'GMsQ9I^Ab'J(RF!'gYo~>

Q
Q
q
18.72 0.0 0.0 -7.92 318.72 351.32 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 312
/Height 132
/ImageMatrix [312.0 0.0 0.0 -132.0 0.0 132.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 312 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask 4)fsdTSHoaqu-KnIrGAUp\Y!d&9_gg[g2lAJ)2:@nrj"0&,:'urV1lss6]j[s82ii
s8.<D2ZNLNqoAZ=q#CBb.Sp*Es8W-!s8W-!s8W-!s8W-!s8W-!s8W"cYQ#.5_uK6+
q[`^]*_C3t_npom_nuH+H@PG@&:]+`VssIii</*:H6JMQ^)2)\p"S*$_noZ;$#naW
AccBufQnZK9*qcXJT.(Fi<>-E0_>_+mH>`jG!3MAL%b-OIChcuDU:suiM:[+HOeCs
G2XR4mF"^Pi?4TX#q!9'OriC((N'jU@#*L4OTY5mM?tqXQYe"[Bc.85mZUqfCYDL+
dVHEgG3F@NgIo5,8F0XUdSIP`[845tgSOaJgIq"=[(b6eqQAPR4*=WQ8?;14</@D[
r?OH=P$1F-_E/GBUmeZBCM5&r0S4(V'3K4._Au`\=B;Z!!WX>M~>

Q
Q
q
59.52 0.0 0.0 -7.92 259.2 343.4 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 992
/Height 132
/ImageMatrix [992.0 0.0 0.0 -132.0 0.0 132.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 992 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8H0MpbL[\NhG=o0YtZ8(c:S8Z;Cq*AIKDg@=rAXB4Be*%N&Ti
&7sSMYg1@FPVBq.(dY'9m]bE"(h[8BiJ%nXgH.YU=kh.VYqRjK1tELVFpB!@_`L[5
7s%%P@68#H$M\%aGGmEo;R"VS@"[FBcK5JtJ`3s_)IY^8KBt;;`rgF9EXjA3ljuBt
'1ah9#6[C7YegY(L/n>Bm$(D0(iGcJLEYCT6Yg&5_$@=aBeZ?*m=[d(\)FQDg2<p0
RpclO9)B#>p7'bWg*#9f]s(:G2d>&[]J^?(Fa^,/<r`d4$3~>

Q
Q
q
18.72 0.0 0.0 -7.92 318.72 343.4 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 312
/Height 132
/ImageMatrix [312.0 0.0 0.0 -132.0 0.0 132.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 312 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8P0'L0%I8T_As+4>cc(:T'ku-c5J_6j`Mil(.T`o`*!Q4ZQ.5
1&CA?!"]J~>

Q
Q
q
9.12 0.0 0.0 -51.48 288.66 338.24 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 152
/Height 858
/ImageMatrix [152.0 0.0 0.0 -858.0 0.0 858.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 152 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s5_YH,c_Cc#7'5fs8V1)
qL;7)e*4r2>&XG=o`'DZs4cjh^Ye*<htR*hrnmGL\,F)#^[;&NmJh,"Du5%=?ap!K
iW$=`G^mKcMtcPhOTLl&f7_b/f;?'cg>i55r_N/VZE4[#),54ankpVD&>0m>fClte
rN>#/p\re<^Q8BO2darDiVa/\InSk4,CQcIgA>5mo\XHEs7^ElQ14!m7d*:hTVl4S
;?cH2]3_VIa8%FcIbV'?^Zs_Brk0iN8CW&55k)r+-)?eOW$AN#`<=]oeHFAE9iraH
9gtu\J-ZJ~>

Q
Q
q
0.48 0.0 0.0 -51.48 297.78 338.24 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 8
/Height 858
/ImageMatrix [8.0 0.0 0.0 -858.0 0.0 858.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_imagemask J3Vsg3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^72q+9~>

Q
Q
q
3.36 0.0 0.0 -39.96 299.58 337.64 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 56
/Height 666
/ImageMatrix [56.0 0.0 0.0 -666.0 0.0 666.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 56 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s72i@J^^:Vf6-!NrHmh[W+m/Hs-/DKp##b\s*+A;pYPAN
Ibh]l\%?hNgUFfLh<jWLh@P*>Vt]$!s*]CK@4o=Kp6Y34^M-p>V/7_s>=ue*_[%Z$
0.:9D2%11t#oEYm#RU~>

Q
Q
n
0.9098 0.93333 0.96863 sc
254.339996 384.380005 87.839996 33.359985 rectfill

n
254.34 384.38 m
254.34 384.38 87.84 33.36 re
0.0 0.0 0.0 sc
S
q
34.08 0.0 0.0 -13.68 278.88 405.92 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 568
/Height 228
/ImageMatrix [568.0 0.0 0.0 -228.0 0.0 228.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 568 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s73^+K0'`ZBMrW^_a*cM`<0PdaAp6RLN(<Ykoke6Se&'SK-6X62TfH`
E+$LE2OlI6?pSrSE+$LE0Z%d;K'fHE(d[,8'0@nAL'TrHWs0D+p)#-H0OYN0g5'PY
:)IBNEX7.'0Y7fgAN4+O6*k'E`O+TYLhZ3^gT3:F#+_(7FQ%rd%,HWl]<KZkXfC-&
L;F,']J.2+\)"D!D;0d`#cud)gB]3SIDZKqDf<7$-6IZR@0@EorNm5bD^#\9?&"OR
^MXP8#Vc"d\8^..]TV[Z_mYa>?eat@K6hD3I>VqLhhM"7L37eOrVK<^H4KnfdqF<k
SD`5sqb/i/"WK=JhdJF)=2"JsZ<.Zo#=2_+dr/q(qgCBrOAFiEVSh+QYM8r$814.n
k,GhsQ2=a%m3'.b6lt25-iI7f6!q^B9t-t6ddKI\rEF3DrGCeKdVZZ#s7Y3q^ZfV"
GPZ0i-iUlt^\$9,?hN1%s3kiL5P2D\^\`5Os/kq.lL!hclJ(R4qY-ddJ,M;%T`>#K
6,37lH;$R'D=lS4l[:*%rEHs>ne0RAoY^15VgToj5HWg;p(RCAl54//iLp4_o\'Q&
62`=I-I@Z9q#iSKrNq[qU7]2rg-L1i^7h*P*<kcCXgEm#"j$Rfl*c[+(:Nk)B`d7?
rO.:cKjDA=g-K5HrNSXq[eahD8l#EOg'J._mIb0@s&VK>[eam)f7)FDE#7u>BI9bL
mA/@C8[Or<mZV"(\4q1t["n*EV+Uc_ZEsG(g.6sN?hVoRhQE0Jh,hnh3jt04iP2*Z
>.U-fU)="`d\8-+8\1W6!9"Zp,IIOYBFsi0C=8ZLL<ZUm>?Y(9S*b&NOk:VDdC$C1
HY[?0l*[ppT%_/um<4ZACOZ!/Fn+9hp[nHOmB(0gCU_p_;C_NIF\%F_%nR=R>1dSQ
V=]r&$\V.TFLJQadRYil$UI\%L(IHg<l%\B&e5Zle01YU"\Ak)_LdAu,SgsLTE5*9$3~>

Q
Q
q
4.32 0.0 0.0 -13.68 312.96 405.92 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 72
/Height 228
/ImageMatrix [72.0 0.0 0.0 -228.0 0.0 228.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 72 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s7o[Y4?@TKe#*Q[_SJ2_JVKf<E]Hb^rVuots8Vm$G^^`is8W-!s2h2s
J,eRPTE"rks8W-!s8W-!s8W-!s8D_?RYI`T?F^=X[G("k]3Kjcs8W,iC'rh2HK5K!
CUMm`G.@SPs8W-!_qsnDe.3V..j=:`[;+3@^]XX&$3~>

Q
Q
n
0.9098 0.93333 0.96863 sc
254.339996 192.259995 87.839996 33.360001 rectfill

n
254.34 192.26 m
254.34 192.26 87.84 33.36 re
0.0 0.0 0.0 sc
S
q
11.04 0.0 0.0 -39.6 272.34 218.84 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 184
/Height 660
/ImageMatrix [184.0 0.0 0.0 -660.0 0.0 660.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 184 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!r.>/n?kr_;!sX>_%5;2m"UlNj[+D?Ss&Pcls8W-!s8W-!
s8W-!s8W,p'>OSIs8U^Ns8QH0s0'<;(WZRUs8S1t^VTpLJ%sn@s1eU6rr<#uq#CBo
s!G0CDu]h\GLuTcs8W,lrVjS3HN3qfYM7LWHM+sohA'*&$a)d9n6@Rj:q]D]0u>"9
kCE&3s*t@TJ-l~>

Q
Q
q
3.84 0.0 0.0 -24.84 284.34 219.14 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 64
/Height 414
/ImageMatrix [64.0 0.0 0.0 -414.0 0.0 414.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 64 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W+`LC)H%s53\Q
hJDE@E.c";St6mTVb->_]'o%7mF&_6]djSUL><"BkU@Vr6kMGX$qPmm$ksOTK7X=2
%RUIG`,L!p0<fCg$lgRtkpF<E]e-p7dSJHjhb*UEX`%VrC)Btg;9$BLs0(m,:t,J1":>~>

Q
Q
q
11.52 0.0 0.0 -39.6 288.84 218.84 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 192
/Height 660
/ImageMatrix [192.0 0.0 0.0 -660.0 0.0 660.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 192 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!r0i5J^app#Z]I@Nnct$e1Bs!N%uR#&0L:F')@V@4TYn"%
%>;WFOC1UBg_atgLXmF#_[ZRZ_gf/mJ%,<)\,1Zaqu5LIqgZBTqu;/\p\Xu?s1e=*
s8RTK^\@d.s8VurJ,fQKs8W-!s8W-!s8W-!s/#bqs8W,q?iU0+V>pSl?iQu&qHs9!
s8$*+p%i%!l$eu`I[B;JQg&r3r@ZSGXq47b0%:G9aD<19VMJi!&qh)g#Ugg(!X0pD
Y&Fm_JqhQ9p8R*[dbk0,+:8~>

Q
Q
q
3.84 0.0 0.0 -39.6 300.36 218.84 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 64
/Height 660
/ImageMatrix [64.0 0.0 0.0 -660.0 0.0 660.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_imagemask J3Vsg3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1mM9jS"!dTMT<$3[GQ$8#0$s<4ZX!SPQ1`C/m<k<ioH)<bk^H
j`WZbYRfZX!!S5bA@"P&0Mh`R$igCa_=mBsdd:kXg$^i"g]#B7^>JAr$mlJoA&.)C
\;X_Z)go]`YulBs;^%IK5i+MFrbjRocX=)ibmgRD"*!E\3VWNV7BX#%F,1j.Eo!@:
D=C:0eWS[%hf!>$.gH`;Ic0]TH%"g^F-hAoXZ\'Rdoj!Bk;sU\=*IfOc"T:Dbs#W+
Q,\*TI\1-WO6;#imq@3+e*$E!!WPBrbPUr2^ZZj:!2*u_*qQ!83q@M]80PeRTO\0J
J"OLZ-?);ro#V!O:s;!26W!r5#G<1~>

Q
Q
q
16.8 0.0 0.0 -27.36 304.92 220.34 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 280
/Height 456
/ImageMatrix [280.0 0.0 0.0 -456.0 0.0 456.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 280 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8OhW1V0R<&s5(;4<#I<
0^uo2@.;!bn6j*10ReS.nAF<__[lNNo^KcaLAH7F4>?X!o_/-.J(s5Ts*ih^]ta%)
^>Ak_s6l'TH[fu5hZ%uk5OIZn?2_GBqg'B017IUr^318@((D42aGAUN\,UmUhu1=e
J+ip$qtkm:s6\uW?hX7Zn%o$B^[:LQ^>JiPs7a#&n,MFd8,rT5n%\o&s8W-!s8W-!
s8W*@s8VXBqu?]rs8NW$NZ[J=$pW+RdO;k%&I,sI"/6$TQmgZ]Be?'`&:jo[>>d*M
f%7=W-G4McrN#mtrMJ3#Dt.c?rr6p1j4jJ)j<ior#jC/j<rKm/e\9jR^>(5Uq\<uA
p>5[qf&U-(drZ[YFS=.omnN8XS,7>Nm0)>&-ImH8f@rSLX2kuWrMN;d?',OE'LH-T
HJ<3!G14mKC?]$3FKN!@V05!*HZTu]F;-6CJqVt,<Gg\]DX^K)]*]6%N$\lG@5+o^
U;DEd!.YC~>

Q
Q
q
2.4 0.0 0.0 -27.36 321.72 220.34 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 40
/Height 456
/ImageMatrix [40.0 0.0 0.0 -456.0 0.0 456.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /LZWDecode filter dup 
] >>
pdf_imagemask J3Vsg3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^757;Rp>H
>q_R=AlC^cenm@9:1U"(huFi^!!h]ip_!Q,It99R&2sRn#4MZ/hZ.m?n/ha^#N1h<
D/oe]J^l;*9,2m^@'`,c&,TY@cYp3r/N5b&b3O&[>qOZt^$>!3^L&Z2ga3O@J&G\F
YPN>NO,eg%?pHb@#Rssg""aPs5iTq2ZIJ.4=,)m\i7$@](5<$%rd_1^i)I3,7epA?
cmVi?r<"Q>JZpn)%C?(-:UE;CccYkV.lr0q5Q~>

Q
Q
q
34.08 0.0 0.0 -13.68 278.7 207.26 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 568
/Height 228
/ImageMatrix [568.0 0.0 0.0 -228.0 0.0 228.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 568 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s7/#fr,uF&..H0R_;Ndt%/Rks%NI[&3,n_@L)JW+M(YF)eIkL+_[IlJ
+.D.Q@A^PA$o"`8qI-82?O_Z+fmqs'5gu=5)@r"HeBnn#iJ*/"Cds48:5Bqu^p_hb
0c_f!_X[9,d1!.Uh^J^P"X$(E_a)!6>A+iQX>Y\1n$'Y:s0]:eqtjT20E0P?6%AaK
Bn,ibcsQaRZkr`_[(lUrE`2r2)@5\Rn,I5M5m;B1p<l>CNIUkp/[Uj?rB7M#s8..W
*NTJAs5)R]rOoSLs0oG's8LI4rnd>6rOoSLs5)I9^Y@D?U=0)8WTeoAeNUb&h!HK&
0DjIY60Wm5e/^^hrVS^&?g[R^H40`FkWLTnn#+&&]mN#LW5!8]%9$)A@<_aLK+Ate
gZ1Zq0`AcT>EM1'Ic'VCn71+#hNdU-J%r`'g]$afX5V3D\,1Jdr&P(ls4q#e6k9Kb
Dt`j*iO#*SeusfH=8RF7iM>B1WF*!<;%A-Drnma2[,:V\hn>oer@c6ELU>t+laQB?
ec4p$nAEsup\k(.HVONdpW2Y)nRMSk\IDJ;_[l^\<r9d]s.s)]LVL*j^Na[G6!,V"
gkl70C*2#lIdso3cs)"eq%Oaqrnm_+JkQ+HrmR^QmtC#@K)b=I[@jSfkU6(kKWY9+
Dq]pF`o5qcrT@/84bBR.k`i'\(]2S^_5o*CYPfg+\#02$gb8Z`<.lK(`PVZT[.(Q]
6WD\2Xr!p_qb=s-hqG@8OGQ29^%TfWp5+I[r%*HH91f.g/T"^A]IR*nH`b09gOJ7G
CEcJihuDEbDgHo@Yi4b_rqEh0H3aEB]5L(JJ,\$S/MGu3gKI5,a)2Z9"sG*1Z<)Nn
]rsgJ`Vm$SY=&oGIr;s%ec!!af5#ii?Ita5#63?Q?i@_XpQGO5n+9'ZhtOeq4;S-L
^@[op\"qp\nt[E7(iRMT_nu,Nd+CH6Btm"(?IO@h$ei?g"mn83@fsd*Z4Qu/W#<?a
Zp=+5VeSM%4BkHn5tont/YfSeZe/u/*JPHHB4\suP)s>MlS;ZNp=<;pfPP'#$*S\O
n#!8uiAD-bg8i*#6[2Y^@7$np:f*io650e7$5O=(-iec'$3~>

Q
Q
q
5.28 0.0 0.0 -13.68 312.78 207.26 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 88
/Height 228
/ImageMatrix [88.0 0.0 0.0 -228.0 0.0 228.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 88 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8V00%gFnp%#Ujm?*;dp[G("k]3Kjcs84&GTTuHd;.\JKG.V%_f5$HI
nhp2,#Oh\G5N._o^]4?6s8W,&s8W,X&-!&q2?3^Vs8W-!s*jl1E/!Tb)&*C#]3VSk
CQJMqs+EZ,A*Zt4Wb]#rm<6*IY1IHMs8NIgcb,@a8s!isOB<F#i)5ZSC.8DtWsm)g
#4a/N8Our@#,C)X!$DU~>

Q
Q
n
238.56 265.94 m
298.26 292.28 l
357.96 265.94 l
298.26 239.66 l
238.56 265.94 l
0.9098 0.93333 0.96863 sc
eofill
n
238.56 265.94 m
298.26 292.28 l
357.96 265.94 l
298.26 239.66 l
238.56 265.94 l
h
0.0 0.0 0.0 sc
S
q
59.52 0.0 0.0 -7.92 254.22 270.86 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 992
/Height 132
/ImageMatrix [992.0 0.0 0.0 -132.0 0.0 132.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 992 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask 22XZ7\_/Au[g5PrW"e[Q5c8i<l3MR3+l<QL5_U>V+J`[6[>jcU]L2_d>=9MqkSes>
m99i4hZrWM[Bp_n2YYT%.=_BJcsPZQ5c=YUXe<FW&2".drN2a-^-SD>s7*OLrV6n+
^]3r8mmIn'r04tnBJ9?MOFR$)[(gN.^n^Q%mXkJ[Y\J[fm4\H-8+ciKfBrB/-ia3>
s3P,VrNs>S9E5$gqu(uYp+-0ks8U^Fp%n^BrVZouJ*[-_rI=;7rI82Os7@+uQs*ks
p\)9`0Dg7VO/LV0OD!5Gs1L)c?iQek^[9J<pSYn.nfXt0qpX!nhUh96_pDcbgA^^c
Qi?]nXZdR$g@jT)@OShHop%uFp:l<u_7bQ[p@c7T[=\u15PMS`/Z]e<httId(;dt<
htV]Rj+ADjrn%1*g](Wk(q^r/r%Ih-V"!J,g]%Z?n9c8t"5Eh`mt\fsd0%4\S,WkS
rZ3"M^[*SVr%QR6j4=7J8\b1Vf^"@j4#IT5%c@7!?#]M,s2&RKg2HfQK\%ED,,FcP
iU&T&&JfIVp:pMa[=?R4J>LOJ'H9jJL*"fndXrAks7!q[Du*;gs7<K'#4Z4!g<aI@
5Q=tBs6U"#^\boqrLh(.rsV'idgs4j_gCq]^eG"Ts1TD,ok6&ZrpdJ_78lq\s4d)m
229Idj_b$.[;Gs2D5JAHp5%;7"THsi9A0e;G_g$f5VH'p3q%i5hS#cT?a[CPL?l]J
]`e>dL;UmlLldLV*L2:$6(d))p:N*9]Ip\`\9Rt-Y7#,\o;Z[MnD4t8Ye#5qPrJYs
V8Cs?]b!:E_O^JVf,StI-K)TTGY@bD-K0Bc0C:]`+UH^TE5'6<rNFq"?:7tOn<`Nk
e\_=B')em)Rt^gS0?*mj+5r!.(]Ul"p@*[U!OM7K-51m`_@):_(4o^crn\2kJ`1R)
ZAi^*J(qgDP$iN/XBWI+4<RcU!m\7/rYr]XPu(QC>0)n3GQ#/c/=D6jm;9?2]HCA7
#%-b63.K]"+cVUG5WA.IDZ@1t"eF-Nn$Uo"gVP)&)*8BGp9rq0DZgG0:gNI*[Jd`^
(M)J(Nnc;Tni_QErOW!bc`oL`L#:VmqfqW1gTMQ?_=-d.rSJ.#D6LEr5PlNH/R-!i
Du17kGq\Rb@=P"*G5ne\oK_nN&cZT6foLGRs+U>r:&f#+b)h9!@DD40$eiAar%Dd!
p\Yi7htI)%p94@C_0\oVDp$[m[:CH\r=P9BVU5L]\5.%j"2RscMeRR8[f(['p5!im
l$EjmBSJc=c=Kfap3'[qiMGpgFbjaY?Ysj,5_!S%D/$-l9>YHf8HNWYX4hqJRbGKE
_J-#b*PuSd2'VAn4i;$=RVEN`Tj/bi#[oPDXfNkC2$t'd7>2'U(84&3_LfXY!"]/<~>

Q
Q
q
19.2 0.0 0.0 -7.92 313.74 270.86 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 320
/Height 132
/ImageMatrix [320.0 0.0 0.0 -132.0 0.0 132.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 320 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask 3f%r9&F?&srVumCTCbTWqB1#3'D0#*cH6;7JA:U*p:n#V2=5X;f7We01,n:9D0poo
j7n!C7$lj,4s0g`s8EQ/p](9n&c_n.q"YUpMC&<&YQ+Xu&8V=Gs8W-!s8W-!s8W-!
s8W-!rt5;2s8S3LLn\8Vs8W-!s8W-!s8W-!s8W-!s8W-!rZD)cs28:D^\.Vh2KeoU
2>cYTmtB;NiALO'fAo1N^Bq*m?\H;p23D+[XUpXkM!0RYCnIQr^18]$rNEX#ZX'cP
%=Sbi_`Rh#nCmmH5N2YBs8U.>s5ZoShu!=Yn,MGmZM$?X2[f,`^K/tF4>56mpfgV7
Z1n&-J%,IPqtpBmIrGAUmI9id\9MtpaID;M22)?jKaOq\=@0mA*%aDY!'gk~>

Q
Q
q
59.52 0.0 0.0 -7.92 254.22 262.94 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 992
/Height 132
/ImageMatrix [992.0 0.0 0.0 -132.0 0.0 132.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 992 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8OY/;;]E*q&MhTLI%,>aJq<.SVsF'iS1k]cu@s]Yg1?Y-C\g.
*'H9)cGdT3*Q(VnT4+:S%4H)2[.O6.Fb\C1$,bB'G(=,0\!tiO-c6A\^uL1+'2K"j
-@f18n>YA1fHBs+i@pi>[Ko(c4#IGSaA=_VXb$fHJqW\s)O_je@>5=X^C-bE;kaMK
Yf=Kjg=P`_l@jL#Ng6i)2&?52_/]+LKL7=AmHt;LP_,!KO<@l`+Q$qJr"oBJi<A\@
irB"N!WX>M~>

Q
Q
q
19.2 0.0 0.0 -7.92 313.74 262.94 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 320
/Height 132
/ImageMatrix [320.0 0.0 0.0 -132.0 0.0 132.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 320 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8P/[;m-]:G\B2rrK'[LLe2BZLh$SM_J+-cK[._o.Y,8A[D>#/
G<flrkB7c5?M;.AjtGHJ+!1=[5QhD~>

Q
Q
q
3.36 0.0 0.0 -39.96 334.32 269.9 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 56
/Height 666
/ImageMatrix [56.0 0.0 0.0 -666.0 0.0 666.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 56 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s72i@J^^:Vf6-!NrHmh[W+m/Hs-/DKp##b\s*+A;pYPAN
Ibh]l\%?hNgUFfLh<jWLh@P*>Vt]$!s*]CK@4o=Kp6Y34^M-p>V/7_s>=ue*_[%Z$
0.:9D2%11t#oEYm#RU~>

Q
Q
n
238.56 265.94 m
225.36 265.94 l
225.36 339.68 l
232.56 339.68 l
0.27451 0.46667 0.74902 sc
S
n
231.72 343.1 m
238.56 339.68 l
231.72 336.26 l
231.72 343.1 l
eofill
n
298.26 313.34 m
298.26 298.28 l
S
n
301.68 299.12 m
298.26 292.28 l
294.84 299.12 l
301.68 299.12 l
eofill
n
298.26 439.64 m
298.26 423.74 l
S
n
301.68 424.58 m
298.26 417.74 l
294.84 424.58 l
301.68 424.58 l
eofill
n
298.26 384.38 m
298.26 371.96 l
S
n
301.68 372.8 m
298.26 365.96 l
294.84 372.8 l
301.68 372.8 l
eofill
n
298.26 239.66 m
298.26 231.56 l
S
n
301.68 232.46 m
298.26 225.62 l
294.84 232.46 l
301.68 232.46 l
eofill
n
254.34 208.94 m
225.36 208.94 l
225.36 339.68 l
232.56 339.68 l
S
n
231.72 343.1 m
238.56 339.68 l
231.72 336.26 l
231.72 343.1 l
eofill
n
271.92 116.84 m
324.6 116.84 l
334.32 116.84 342.18 124.7 342.18 134.36 c
342.18 144.08 334.32 151.94 324.6 151.94 c
271.92 151.94 l
262.2 151.94 254.34 144.08 254.34 134.36 c
254.34 124.7 262.2 116.84 271.92 116.84 c
0.9098 0.93333 0.96863 sc
eofill
n
271.92 116.84 m
324.6 116.84 l
334.32 116.84 342.18 124.7 342.18 134.36 c
342.18 144.08 334.32 151.94 324.6 151.94 c
271.92 151.94 l
262.2 151.94 254.34 144.08 254.34 134.36 c
254.34 124.7 262.2 116.84 271.92 116.84 c
h
0.0 0.0 0.0 sc
S
q
42.24 0.0 0.0 -11.16 268.98 139.22 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 704
/Height 186
/ImageMatrix [704.0 0.0 0.0 -186.0 0.0 186.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 704 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!b2mdTm4'kGafbpRFrOlNCPi?+3-bk@ef)G\5o3,ALHH[UK-6X62Tg@8@)5'4
P(KJ`B4+#REi&u$@)5)")&#hTK)4FfL(#4'Ba03E(a/d!mL1e#qH]cQK*[*Ie9&+.
@=n@H$]VM50Z*Zk&8iIA_B@O:]d9>B#7NFV:La5E\o&KG&I+elh(OG4_[I_,]*mgT
WZ?hMASkM%]qE3Z@06';<()8T0Z""P"nYCf]sJ0qr0E(n@A&M&iBO'4$oSYnr=D9p
P#1+lJN)Njhm<mI$&@ICJ!2YtKFhSe5bIYW9q\!$dWe$\p;9IWhL]\CBHY4A_?GEc
g'PETkWBt`rNqr<_r4trcp>?%*l0f6MJifoGi/3.%-mI)4o_nC#GBFls(Si*nBPud
*o:mZBnhcnU7cj\5HpVJ.hDD>Zl:<B#_7"/:`>>[5Gm;c#`Sp\iJ6KpVV]`,M[!C4
&(@Dng-CH:(VDI##M[ru'gPUP(k3$bHV"s6DgN#AFPGM8'/8(q(k.+YKA4?J(d$LI
3k!msK5V/\:jQul.2Ds%fQmcq]`jgY)oI%D>ApU)%WtH.LS>5r>C'GN&NL9c0Z2kF
gNj5O"ASUZa?f]?l"++jCd#,?\m'J_VUc^(AH=6goX*q&F'E#1BNE%*+p3..]e(co
L?l=FY/]=fDbCLo&k#OO\m'T#dX0khoY%-kmH]0P[[Z+<mHJt!]6^p^gfrNN^$0^s
gNm`0hY-F*p$]?F-bV+dmJXNAhL49ul[:&QDmnrelCYQArP"Kq[e0$bHYr9,Xku[$
eQ2QqD<eh*+R]-A8N-S&FKY7u#H3PLhmRb+IrEqSDqh_tqEah`rNmZIDl35gD>r5n
g@(tgUddefD@Q?S]qdp_c34*Q&$<MlqFSG=&5bZA^?L+%L1StT9A1]q,%/$3g)WEH
Mm\#fp>8s=5I^Znp="KCA4WN`p%qhX\L7EXHaNfi^MWZ@=7*H^^\_`'gOHr$IQ+l]
GlHO4^Y>UBHYr*C]5P.Wolo!Ehd(C@gOFNo:Kq\a^UR=]g]$GV\6ZTDG['S6hQ@1`
[e5-0\$?Dk^Ra)$s'bpqPdK<):!E:X%"STNm;tbul$%JKd0tPEM>-<"*N06:5`>)F
l"srEGM9U]=DZ^=(IrgJCMC.@nJ(q-XeI_\YA(UQ8<N.$$_>\Q["pL=OTI&P]sY55
fC[eN954:X=kR2;Y^NS0[I#m$pJ%i,CA6Ihf$jB6D6.YoqcE_\C"r+OrqbC(m_=5N
hYX/+rVu>)>MK*/hsXq/g0_)QY3m=pD[u0_]5@"jG7LdT?/-\==BBU]KaO)!Ti;^U
817.[:n"V]TgE0S(rCu,$ORRk*#'et!<<Z<~>

Q
Q
q
16.32 0.0 0.0 -11.16 311.22 139.22 cm
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 272
/Height 186
/ImageMatrix [272.0 0.0 0.0 -186.0 0.0 186.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 272 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!cK[o-S:UD>LCP@F3'98HMY@PbrJ1;)s02NX*_BGcHMfJdT>M0GrJ-(*_peC!
$0,IX4r_?]@l>B\mGW(/<&!q\gX-G0HOgC5E;dHOqg&Y/L?K>?rn`7Ep@*[Mqg&VT
loIF?rOjU5rOi@=&)5H/E5(1n)trp$ZhF/jIr@qChO!!Fqg&Y;p%J$mH=(S`n(6=B
qg)V`^>>46rna!ab.TIGDm+-;9ACQ\-EDn2]lIlWpZR633;_-ZOQk?R;">#!\(2N:
![pJg?1e\@*iieLF/_KAf8VZ$H>@W8.fYE2f,0>:m"d,Z('"=6s8W-!b)?*?D,9dh
nDSknr@d5n6C]e.R]Wdf[Jom7qd8f-rU#*JV>lVRs53kVhu1=gs4dP?rt"W9Dhl'/
ndncV.(@(I\&-cu*t)k3/ZX;:CE8+;Gj+hoOU*2r&3L6N9n\k/]b7"GJB&\6[J%>d
gA>5jM4_`ua:(8!9:685;?B&6gA>5mm<u1Gp:`bT<IPtf+,+FKmgAQf$M=RV$OR7K
'O[R8!$DU~>

Q
Q
n
357.96 339.68 m
371.16 339.68 l
371.16 165.08 l
298.26 165.08 l
298.26 157.88 l
0.27451 0.46667 0.74902 sc
S
n
301.68 158.72 m
298.26 151.94 l
294.84 158.72 l
301.68 158.72 l
eofill
q
7.2 0.0 0.0 -39.6 387.9 283.7 cm
0.0 0.0 0.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 120
/Height 660
/ImageMatrix [120.0 0.0 0.0 -660.0 0.0 660.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 120 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!r/$$?nl?2R@%i9igA]_(s8W-!s8W-!s8W,&Vd7lFl]>Lu
8\4b9]dEC-H;3Y8qJMX#o\FgflK\#2f2hP"0!4F(oUFH5kr5cIlK\#2f2h-BT!q;+
d^n7Qh/9\.T]%`d#(qRG+ED3(j9RXCp],gM$3~>

Q
Q
q
7.68 0.0 0.0 -40.32 308.04 306.08 cm
0.0 0.0 0.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 128
/Height 672
/ImageMatrix [128.0 0.0 0.0 -672.0 0.0 672.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 128 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8P.sX#q<dfCPXo=>6$X95/_+qXq5/HN10T]mnY;?G1j9
!XJA3QdYa0^6d:E?VB_]qHln[I=@OKl$Y4gdf"SIV=_L:9D.qkQe1JM0A"YKr@b#>
^L'Y"oY-[?rI'-]de[<Dp%A/g9Bgo>^IuOlp&A@3HM.9(9;U'3]e5Ii\4JYN+Q/pq
P>GsCJZl7^!'gYo~>

Q
Q
q
7.2 0.0 0.0 -39.6 308.52 238.04 cm
0.0 0.0 0.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 120
/Height 660
/ImageMatrix [120.0 0.0 0.0 -660.0 0.0 660.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 120 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!r/$$?nl?2R@%i9igA]_(s8W-!s8W-!s8W,&Vd7lFl]>Lu
8\4b9]dEC-H;3Y8qJMX#o\FgflK\#2f2hP"0!4F(oUFH5kr5cIlK\#2f2h-BT!q;+
d^n7Qh/9\.T]%`d#(qRG+ED3(j9RXCp],gM$3~>

Q
Q
q
7.68 0.0 0.0 -40.32 221.22 303.62 cm
0.0 0.0 0.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 128
/Height 672
/ImageMatrix [128.0 0.0 0.0 -672.0 0.0 672.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 128 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8P.sX#q<dfCPXo=>6$X95/_+qXq5/HN10T]mnY;?G1j9
!XJA3QdYa0^6d:E?VB_]qHln[I=@OKl$Y4gdf"SIV=_L:9D.qkQe1JM0A"YKr@b#>
^L'Y"oY-[?rI'-]de[<Dp%A/g9Bgo>^IuOlp&A@3HM.9(9;U'3]e5Ii\4JYN+Q/pq
P>GsCJZl7^!'gYo~>

Q
Q
[/DeviceGray] cs 0.0 sc
%ADOBeginSubsetFont: YNNBAA+SimSun-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (YNNBAA+SimSun)
%%Title: (YNNBAA+SimSun Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /YNNBAA+SimSun def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 -141 996 855} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 22141 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /YNNBAA+SimSun-Identity-H /Identity-H 0 [/YNNBAA+SimSun] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N12 (YNNBAA+SimSun-Identity-H)
/N12 (YNNBAA+SimSun-Identity-H) /Identity-H [ (YNNBAA+SimSun) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
260.52 97.0403 m
%ADOBeginSubsetFont: YNNBAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
/YNNBAA+SimSun 1 GetGlyphDirectory
3282 <001C60D8A8C9B5EE310304ECB3A66AE79FD7A3E4846324694F9A8CA642
46605D361C2C0B09B7D4CF335BA36D07F8D126FE46DC2F6BA22177C42E7BC5F0
1202F5C6DA97EBD1C57E61C24ED5C43416B6872CB79A50F4DE042BAB91F766B5
971FCC77F87EB8573D30BE885D4338E4051D0205AC25144B25E32FBE7E92E4A7
3958E74CBFEA61861ABA63416BF83C77BDB18950F5BF38A94AE55BBC183955DC
74ABE87E464629240C66AD40489C6E126E82F43BBCDB07C2C1D77EC5A1FDC2C4
6F82359B0E40F8209D8FA13733C0305CA442E9F0B366E70E417E067ACD70B25B
B035E1C3869DA08C5EA6F2C973E5E5602C7C0A16ED717E01A0E9632D326A4296
B77B0811B4114B4323468DCF9EDD5BA9C687951D1B746C26CA06B9E6661FB563
5D16A52231803D037A3207676C> |
!
end
end end
%ADOEndSubsetFont
/N12 10.5 Tf
(\f\322) show
%ADOBeginSubsetFont: XOTBAA+Calibri Initial
ct_T42Dict begin
-0.473 -0.191 1.211 0.949
 256 array 0 1 255 {1 index exch /.notdef put} for  /XOTBAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f326c6872b8000000cc000000606376
7420af93b7f90000012c0000050a6670676df6f64d0c000006380000091a
676c79661902886b00005bac0000166268656164e227154000000f540000
0036686865610dae0b3c00000f8c00000024686d74782d65e0e800000fb0
000011846c6f6361003cc65600002134000011886d6178702801030d0000
32bc000000206e616d6541e77660000032dc000004c170726570ffeae6e0
000037a00000240b67646972000000000000000000000000000304070190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204a00002ef4000207b00000000000000004d53202000400020
fb040600fe0001c4079e02262000009f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
00004047645f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948474645
44434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411
100f0d0b0a090807060504030201002c4523466020b02660b00426234848
2d2c452346236120b02661b004262348482d2c45234660b0206120b04660
b004262348482d2c4523462361b0206020b02661b02061b004262348482d
2c45234660b0406120b06660b004262348482d2c4523462361b0406020b0
2661b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320
b8015a51582320b08d44235920b0ed51582320b04d44235920b004265158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560
442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b1
01283e01b0282370b10228453ab10200080d2d2c2045b00325456164b050
515845441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c
2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361
592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445
b02b23442d2c4b525845441b2121592d2c01b005251023208af500b00160
23edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500
edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b0
0743b006430b2d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c452345
6023456023456023766818b08062202d2cb00426b00426b00425b0042545
234520b003266062636820b0032661658a2344442d2c2045b0005458b040
442045b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b
5158b02f2370b01423421b2121592d2c4b515820b0032545695358441b21
21591b2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45
2320458a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333
0034005944442d2cb0164358b00326458a586466b01f601b64b020606620
581b21b04059b001615923586559b02923442310b029e01b212121212159
2d2cb0164358b004254564b020606620581b21b04059b0016123586559b0
292344b00425b00725082058021b0359b0052510b004252046b004252342
3cb0072510b006252046b00425b0016023423c2058011b0059b0052510b0
0425b029e0b0072510b00625b029e0b00425b00725082058021b0359b004
25b003254348b00625b00325b0016043481b2159212121212121212d2cb0
164358b004254564b020606620581b21b04059b0016123581b6559b02923
44b00525b00825082058021b0359b0042510b005252046b0042523423cb0
0425b0072508b0072510b006252046b00425b0016023423c2058011b0059
b0042510b00525b029e0b02920456544b0072510b00625b029e0b00525b0
0825082058021b0359b00525b003254348b00425b0072508b00625b00325
b0016043481b2159212121212121212d2c02b00425202046b004252342b0
052508b003254548212121212d2c02b0032520b0042508b0022543482121
212d2c452320451820b00050205823652359236820b040505821b0405923
5865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c208a08234b538a4b515a5823381b2121592d2c0020
b200400325b0062649618b3812342d2c014623466023466123201020468a
61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b2159
2d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b94000020063b80400885458b2024002436042595959
59592d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2c204569442d0000000100000001
051f248a3bd65f0f3cf50019080000000000bbeb7ccc00000000c1274845
fc31fe7309b6079e000000090002000100000000000100000600fe0001c4
0a4efc31fe8c09b6000100000000000000000000000000000461040e0000
000000000000000001cf000004a1002304a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a10023061bffcc
061bffcc045a00ac04440061044400610444006104440061044400610444
006104ec00ac04ec009704ff001b04ff001b03e800ac03e8004503e800ac
03e8004603e8004603e8006303e8005f03e8008103e800ac03e800ac03ad
00ac050c005b050c005b050c005b050c005b050c005b04fc00ac04fc00ac
05400020020400ac0204ff4a020400280204ff390204ff310204ff500204
ff4f0204ff7b0204001e02040027049200ac028d0007028dffa9042800ac
042800ac035d00ac035d0081036200ac035d00ac0370001c045e00ac06d7
00ac052a00ac052a00ac052a00ac052a00ac052a00ac050700ac054c0063
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054f0063054f006306ef0063042200ac042200ac05620063045800ac
045800ac04580053045800ac03ad004703ad004703ad001503ad001803ad
004703ad004703e6000f03e6000f03e6000f03e6000f052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa048a0022071e003d071e003d071e003d071e003d071e003d
0427003003e6001e03e6001e03e6001e03e6001e03e6001e03bf003b03bf
003b03bf001a03bf003b03f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f40010055cffe2055c
ffe2040400a103cb006d03cb006d03cb006d03cb006d03cb006d03cb006d
046500a10465006a0477003204770032038000a103800030038000a10380
0020038000200380002c0380002903800042038000a1038000a1035000a1
0482006c0482006c0482006c0482006c0482006c047800a10478008c049d
004001ec00a101ecff5801ec001901ecff4801ecff2701ecff5501ecff52
01ecff7101ec001101ec0018041b00a1023e0000023eff8c03c900a103c9
00a102e000a102e0008702e600a102e000a102f0003203d500a1060600a1
049100a1049100a10491009904910078049100a1046600a104aa006604aa
006604aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04ba006604ba00660606006603c500a103c500a104b1006603ed00a103ed
00a103ed004503ed00a1034f0049034f0049034ffff5034ffff6034f0049
034f00490359001c0359fffe0359001c0359001c048d009f048d009c048d
009f048d0097048d0075048d009f048d009f048d009f048d009f048d009f
048d009f03fd0021063e0037063e0037063e0037063e0037063e003703cc
003603830010038300100383001003830010038300100369004403690044
036900080369004403d5005c03d5005c03d5005c03d5005c03d5001e03d5
005c03d5005c03d5005c03d5005c03d5005c03d5005c062f005c062f005c
043400990362005a0362005a0362004e036200570362005a0362005a076f
005a06dd005a0601005a0601005a04340060048c0060046a006004340061
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d02710025069a002508d5002504ab0025069b0025
08d50025043c0025043c0025043c0025043c0025044f0025044f0025044f
0025044f0025043c0025043c002506760025067600250676002506760025
068900250689002506890025068900250676002506760025043c0025043c
0025067600250609002508430025043c0025043c002504830025043c0025
0676002504ed002504ed0025051300250728002503c4003503c4003503c4
003503c4003503c400350434006004340060043400600434006004340060
043400990434ffad0443fff901d6008501d6ff6e01d6000f01d6ff5a01d6
ff2001d6ff7201d6ff5801d6ff6701d6001101d6009903c00085041e0088
01eaffd501eaffd501eaff6303a3009903a3009903a3009901d6009901d6
002a021c009901d6004b01fb001c02fd0099066400990434009904340099
043400990434004e0434009904a2ff9d043400990438005a0438005a0438
005a0438005a0438004f0438005a0438005a0438005a0438005a043c005a
043c005a06cc005a04340099043400990434006002ca009902ca009902ca
fff902ca006e03210051032100510321fffe0321fffd0321005103210051
05ae005105ae00510438009901f1009902ae002102c4002102ae002102bc
002604e60021047500210475002104750021047500210475002104750021
0475002104750021047500210475002105130021074b002106d9002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d90021043400940434008e04340094043400860434004d043400890434
008604340094043400940434009404340094039d002205b8003505b80035
05b8003505b8003505b8003503770029039f0022039f0022039f0022039f
0022039f0022032900590329005903290007032900590338007203610064
0378005d02ac004402e5006c024e004402e5004802b8004701c100240297
002a02e9006c01630061016dffd80297006c015e006c0456006c02e6006c
02e6004502e5006c02e5004801f6006c0230004201e3002302e9006c0285
001f03ef002c027e00280286001f02370042025400000275000002940000
0000fd080000fce80256000002750000029400000000fd080000fce80329
0000035f0000039400000000fc9f0000fc6703290000035f000003940000
0000fc9d0000fc6901ff0000039a000003a2000003a800000000fc650000
fc600324000002f5000003460000036700000000fca00000fc7e03270000
03490000036a00000000fc9d0000fc7d030c0000030f0000031100000000
fcac0000fca9029100000298000002a000000000fce90000fce202cf0000
02c2000002b5000003c1000003e10000040000000000fc520000fc3101ce
000001d6000001ce000001ce00000000fd4d0000fd4d027500840000fd7a
027f00840000fd7601f700840231000004a1002304a1ff89045a00ac0353
00ac0484003a03e800ac03e8fec703bf003b04fc00ac04fcfe9e054c0063
020400ac0204feb20204ff52042800ac0495002406d700ac052a00ac03ef
0053054c0063054cff1604fc00ac042200ac03ab004603e6000f03e6001e
03e6fe6e03e6001e0613000004270030060000900550005e0550fef903f4
001003f4ff75040400a102fb00a103c90023038000a10380fed103690044
047800a10478fed404b4006601ec00a101ecfebd01ecff5403c900a103e1
0011060600a1049100a10387005e04aa006604aaff3b047800a103c500a1
035b004b0359001c038300100383fea2038300100552000003cc00360558
008704b1006604b1ff67048a0061048a0061044000990432006403920018
0430000003a5005903a5005902c8004e044c0099044c0099044100600478
0006023200940232ffec0232ff7a0232ff0f03a3009903b4000004660099
039700220302004d0303004d0438005a0438005a046c0028041200760441
00590349005c0319000304550090045500900455007d0455001605360055
053b00550369001205a900940592006405920064028900000000fd0a03f4
00000000fc360205009702050097020500970224004801ff006e01ff006e
04a10023044d00ad045a00ac037000ac037000ac037600ac0527000303e8
00ac03e8004503e800610668005503ca004b052200ac052200ac052200ac
020400ac0204ff50028d0007045800ac045800ac04e3000306fa000306d7
00ac04fc00ac070300ac054c0063054c006304f900ac042200ac04440061
03ad004703e6000f0438000f0438000f04b800220594000004270030051c
00ac04f500ac0472007406f200ac071e00ac04eb000f061800ac044000ac
0462005d04610062070800ac0471005304ff000f04f2000f0504000003f4
001003ee00a2040400a1031400a1031400a1032700a10480000e038000a1
038000300380002c0578004403800057048900a1048900960489009501ec
00a101ecff55023e000003ca00a103ca00a104320001060600a1047800a1
04aa006604a90066046a00a103c500a103cb006d034f00490359001c039d
001e039d001b042f0022050a000003cc0036048e00a1046900a103fa006d
062300a1064500a1045f0017058300a103e800a103e4006b03f000660632
00a103ff005c045f001f0463001f044d000006010001063200a103d5005c
044300000430000003d5009902c4009902c4009902d50099034900490477
00170434006003fb005d03fb005d03fb005d0583003e0362004b04530099
045300780453008801d6008501d6ff7201eaffd503b6009903b600990415
0016060200130569005f04470099062800990438005a0431005a042a0099
04340099043400990362005a032100510319000a06640099039f0022039f
001803d2002204fe005103770029045500990433009903c0004205d40099
05fe0099044a000a0554009903c20099038b004d038d005d05c6009903cb
00380453fff90443fff904270018036e0000036e0000036e00000000fca5
0000fca5029b010a029b00bf029b00bf03b5008503b5005e03b5005e03de
0064026000ed026000b10364007a0361005f01ff002a02240048022400bb
020500970586009601ff008c01ff002a01ff008c01ff002a035900880359
002b035900880359002b01ff002a0359002b02b6007402b600c002b60074
02b600c004190075041900ad04190075041900ad0317000102df001f03af
018a03fc01ae0317000b02df002d027300450273004503fcfff603fcfff6
073e0095073e0095073e0095073e009503fcfff903fc00c1020500970205
0097026d0085026d007a027400bf0274005a028400560284007502400084
0240007a024a00b0024a0067026d0085026d007a027400bf0274005a0284
00560284007503fc009e03fc007703fc007803fc007604b0006b043d006e
03fc006a03fc003d01c4008b0335008b057500000556000007f700000727
0000073c00000727000006ad00af06ad00af040e008005a4003f05ac004d
02b6000003fc003f04b30049040e002a03fc0057040e00600434005803fc
00b903fc004a040e005303fc006d0419002b040e003403f30035039f0061
03be005f039f0058039f002506210049083300ac03fc002406e300a10411
001d0494005f02cb002303ec006203ec00510455002203d700510436007e
03b20035043600630436005c040e0048040e00ae040e0072040e0067040e
0020040e0065040e006b040e0063040e0052040e005204430067028d0019
0381005c0373005903ac00260368006103b7006e0349002f03b5004b03bc
0052039f0050039f008d039f0065039f0062039f003a039f0067039f0061
039f005e039f0051039f00500494005f02cb002303ec006203ec00510428
002203d700510436007e03b20035043600630436005c040e0048040e00ae
040e0072040e0067040e0030040e0065040e006b040e0063040e0052040e
00520321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
00580321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
0058029d003801f500310252003c0249002d024a00140246003202510030
0238002202570025024d0023029d003801f500310252003c0249002d024a
001402460032025100300238002202570025024d002302b1ff4b03130044
055f0044056900440517004405690044052e00440553004405c9004e05c9
004e0567004705b7004705a2004705cd0027057d004505a20045052a0035
05b80048084e0048057d005c07c9005c03fc004603fc004c03fc006003fc
002b03fc005e03fc006003fc005903fc004503fc006503fc004c03fc0055
03fc005603fc003d05e9002c0405003506d300690443006102ed000703fc
00080484003a0550005e04660099066500660454005b0416004a073e009a
073e0096073e00c9073e00c9070e00af070e013a070e00af070e013a0a4e
009a0638009f046600280000000000000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
01420000014200000142000001420000014200000142000001420000023c
0000023c0000023c0000023c0000023c0000023c00000316000003160000
031600000316000003160000031600000316000003160000031600000316
00000316000003160000031600000316000003e8000003e8000003e80000
03e8000003e8000003e8000003e8000003e8000003e80000047e0000047e
0000047e0000047e0000047e0000047e0000047e0000047e0000047e0000
047e0000047e0000047e0000047e0000057c0000057c0000057c0000057c
0000057c0000057c0000057c0000057c000006d60000080c0000080c0000
080c0000080c0000080c0000080c0000080c0000080c0000080c0000080c
0000080c0000080c0000080c0000080c0000080c0000080c0000080c0000
080c000008fe000008fe000008fe000008fe000008fe000008fe000008fe
00000aa200000aa200000aa200000aa200000aa200000aa200000b700000
0b7000000b7000000b7000000b7000000b7000000b7000000b7000000b70
00000b7000000b7000000b7000000b7000000b7000000b7000000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000c5400000c5400000c5400000c5400000c5400000c5400000c540000
0c5400000c5400000c5400000c5400000c5400000c5400000c5400000c54
00000d4600000d4600000d4600000d4600000d4600000d4600000d460000
0d4600000d4600000d4600000d4600000d4600000d4600000d4600000d46
00000d4600000d4600000d4600000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc
00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc00000dcc0000
0dcc00000dcc00000e2e00000e2e00000ebe00000f0200000f0200000f02
00000f0200000f0200000f0200000f0200000f0200000f0200000f020000
0f0200000f0200000f0200000f0200000f0200000f0200000f0200000f02
00000f0200000f0200000f0200000f0200000f0200000f0200000f020000
0f0200000f0200000f0200000f0200000f0200000f0200000f0200000f02
00000f0200000f0200000f0200000f0200000f0200000f94000010340000
103400001034000010340000103400001034000010340000103400001034
000010340000103400001034000010340000103400001034000010ec0000
10ec000010ec000010ec000010ec000010ec000010ec000010ec000010ec
000010ec000010ec000010ec000010ec000010ec000010ec000010ec0000
10ec000010ec000010ec000010ec000010ec000010ec000010ec000010ec
000010ec000010ec000010ec000010ec000010ec000010ec000010ec0000
10ec000010ec000010ec000010ec000010ec000010ec000010ec000010ec
000010ec000010ec000010ec000010ec000010ec000010ec000010ec0000
10ec000010ec000010ec000010ec000010ec000010ec000010ec000010ec
000010ec000010ec000010ec000010ec000010ec000010ec000010ec0000
10ec000010ec000010ec000010ec000010ec000010ec000010ec000010ec
000010ec000010ec000010ec000010ec000010ec000010ec000010ec0000
10ec000010ec000010ec000010ec000010ec000010ec000010ec000010ec
000010ec000010ec000010ec000010ec000010ec000010ec000010ec0000
10ec000010ec000010ec000010ec0000125a0000139a0000139a00001524
000015240000152400001662000016620000166200001662000016620000
166200001662000016620000166200001662000016620000166200001662
000016620000166200001662000016620000166200001662000016620000
166200001662000016620000166200001662000016620000166200001662
000016620000166200001662000016620000166200001662000016620000
166200001662000016620000166200001662000016620000166200001662
000016620000166200001662000016620000166200001662000016620000
166200001662000016620000166200001662000016620000166200001662
000016620000166200001662000016620000166200001662000016620000
166200001662000016620000166200001662000016620000166200001662
000016620000166200001662000016620000166200001662000016620000
166200001662000016620000166200001662000016620000166200001662
000016620000166200001662000016620000166200001662000016620000
166200001662000016620000166200001662000016620000166200001662
000016620000166200001662000016620000166200001662000016620001
0000046100ad000700ac000700020010002f006500002318018200040001
0000000e00ae000000030000000000640000000000030000000700fa0064
00010000000000000032015e0001000000000003000e0190000100000000
0004000e019e0001000000000006000e01ac0001000000000007007d01ba
0003000104090000006402370003000104090001001c029b000300010409
0002000e02b70003000104090003001c02c50003000104090004001c02e1
0003000104090006001c02fd000300010409000700fa031900a900200032
0030003000360020004d006900630072006f0073006f0066007400200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e00430061006c0069006200720069002000690073002000650069
007400680065007200200061002000720065006700690073007400650072
00650064002000740072006100640065006d00610072006b0020006f0072
00200061002000740072006100640065006d00610072006b0020006f0066
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002ea92032303036204d6963726f736f6674
20436f72706f726174696f6e2e20416c6c20526967687473205265736572
7665642e4e4a4c4b47412b43616c696272694e4a4c4b47412b43616c6962
72694e4a4c4b47412b43616c6962726943616c6962726920697320656974
686572206120726567697374657265642074726164656d61726b206f7220
612074726164656d61726b206f66204d6963726f736f667420436f72706f
726174696f6e20696e2074686520556e697465642053746174657320616e
642f6f72206f7468657220636f756e74726965732e00a900200032003000
3000360020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e002e00200041006c006c002000
520069006700680074007300200052006500730065007200760065006400
2e004e004a004c004b00470041002b00430061006c006900620072006900
52006500670075006c00610072004e004a004c004b00470041002b004300
61006c0069006200720069004e004a004c004b00470041002b0043006100
6c0069006200720069004e004a004c004b00470041002b00430061006c00
6900620072006900430061006c0069006200720069002000690073002000
650069007400680065007200200061002000720065006700690073007400
65007200650064002000740072006100640065006d00610072006b002000
6f007200200061002000740072006100640065006d00610072006b002000
6f00660020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e00200069006e00200074006800
6500200055006e0069007400650064002000530074006100740065007300
200061006e0064002f006f00720020006f00740068006500720020006300
6f0075006e00740072006900650073002e000000b2090320b80284b40918
014a20b80283b40918014a20b80282b40918014a20b80281b40918014a20
b80280b40918014a20b8027fb40918014a20b8027eb40918014a20b8027d
b40918014a20b8027cb40918014a20b8027bb40918014a20b8027ab40918
014a20b80279b40918014a20b80278b40918014a20b80277b40918014a20
b80276b40918014a20b80275b40918014a20b80274b40918014a20b80273
b40918014a20b80271b40918014a20b80270b40918014a20b8026fb40918
014a20b8026eb40918014a20b8026db40918014a20b8026cb40918014a20
b8026bb40918014a20b8026ab40918014a20b80269b40918014a20b80268
b40918014a20b80267b40918014a20b80266b40918014a20b80265b40918
014a20b80264b40918014a20b80263b40918014a20b80262b40918014a20
b80261b40918014a20b80260b40918014a20b8025fb40918014a20b8025e
b40918014a20b8025db40918014a20b8025cb40918014a20b8025bb40918
014a20b8025ab40918014a20b80259b40918014a20b80258b40918014a20
b80257b40918014a20b80256b40918014a20b80255b40918014a20b80254
b40918014a20b80253b40918014a20b80252b40918014a20b80251b40918
014a20b80250b40918014a20b8024fb40918014a20b8024eb40918014a20
b8024db40918014a20b8024cb40918014a20b8024bb40918014a20b8024a
b40918014a20b80249b40918014a20b80248b40918014a20b80247b40918
014a20b80246b40918014a20b80245b40918014a20b80244b40918014a20
b80243b40918014a20b80242b40918014a20b80241b40918014a20b80240
b40918014a20b8023fb40918014a20b8023eb40918014a20b8023db40918
014a20b8023cb40918014a20b8023bb40918014a20b8023ab40918014a20
b80239b40918014a20b80238b40918014a20b80237b40918014a20b80236
b40918014a20b80235b40918014a20b80234b40918014a20b80233b40918
014a20b80232b40918014a20b80231b40918014a20b80230b40918014a20
b8022fb40918014a20b8022eb40918014a20b8022db40918014a20b8022c
b40918014a20b8022bb40918014a20b8022ab40918014a20b80229b40918
014a20b80228b40918014a20b80227b40918014a20b80226b40918014a20
b80225b40918014a20b80224b40918014a20b80223b40918014a20b80222
b40918014a20b80221b40918014a20b80220b40918014a20b8021fb40918
014a20b8021eb40918014a20b8021db40918014a20b8021cb40918014a20
b8021bb40918014a20b8021ab40918014a20b80219b40918014a20b80218
b40918014a20b80217b40918014a20b80216b40918014a20b80215b40918
014a20b80214b40918014a20b80213b40918014a20b80212b40918014a20
b80211b40918014a20b80210b40918014a20b8020fb40918014a20b8020e
b40918014a20b8020db40918014a20b8020cb40918014a20b8020bb40918
014a20b8020ab40918014a20b80209b40918014a20b80208b40918014a20
b80207b40918014a20b80206b40918014a20b80205b40918014a20b80204
b40918014a20b80203b40918014a20b80202b40918014a20b80201b40918
014a20b80200b40918014a20b801ffb40918014a20b801feb40918014a20
b801fdb40918014a20b801fcb40918014a20b801fbb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f5b40918014a20b801f4b40918014a20
b801f3b40918014a20b801f2b40918014a20b801f1b40918014a20b801f0
b40918014a20b801efb40918014a20b801eeb40918014a20b801edb40918
014a20b801ecb40918014a20b801ebb40918014a20b801eab40918014a20
b801e9b40918014a20b801e8b40918014a20b801e7b40918014a20b801e6
b40918014a20b801e5b40918014a20b801e4b40918014a20b801e3b40918
014a20b801e2b40918014a20b801e1b40918014a20b801e0b40918014a20
b801dfb40918014a20b801deb40918014a20b801ddb40918014a20b801dc
b40918014a20b801dbb40918014a20b801dab40918014a20b801d9b40918
014a20b801d8b40918014a20b801d7b40918014a20b801d6b40918014a20
b801d5b40918014a20b801d4b40918014a20b801d3b40918014a20b801d2
b40918014a20b801d1b40918014a20b801d0b40918014a20b801cfb40918
014a20b801ceb40918014a20b801cdb40918014a20b801ccb40918014a20
b801cbb40918014a20b801cab40918014a20b801c9b40918014a20b801c8
b40918014a20b801c7b40918014a20b801c6b40918014a20b801c5b40918
014a20b801c4b40918014a20b801c3b40918014a20b801c2b40918014a20
b801c1b40918014a20b801c0b40918014a20b801bfb40918014a20b801be
b40918014a20b801bdb40918014a20b801bcb40918014a20b801bbb40918
014a20b801bab40918014a20b801b9b40918014a20b801b8b40918014a20
b801b7b40918014a20b801b6b40918014a20b801b5b40918014a20b801b4
b40918014a20b801b3b40918014a20b801b2b40918014a20b801b1b40918
014a20b801b0b40918014a20b801afb40918014a20b801aeb40918014a20
b801adb40918014a20b801acb40918014a20b801abb40918014a20b801aa
b40918014a20b801a9b40918014a20b801a8b40918014a20b801a7b40918
014a20b801a6b40918014a20b801a5b40918014a20b801a4b40918014a20
b801a3b40918014a20b801a2b40918014a20b801a1b40918014a20b801a0
b40918014a20b8019fb40918014a20b8019eb40918014a20b8019db40918
014a20b8019cb40918014a20b8019bb40918014a20b8019ab40918014a20
b80199b40918014a20b80198b40918014a20b80197b40918014a20b80196
b40918014a20b80195b40918014a20b80194b40918014a20b80193b40918
014a20b80192b40918014a20b80191b40918014a20b80190b40918014a20
b8018fb40918014a20b8018eb40918014a20b8018db40918014a20b8018c
b40918014a20b8018bb40918014a20b8018ab40918014a20b80189b40918
014a20b80188b40918014a20b80187b40918014a20b80186b40918014a20
b80185b40918014a20b80184b40918014a20b80183b40918014a20b80182
b40918014a20b80181b40918014a20b80180b40918014a20b8017fb40918
014a20b8017eb40918014a20b8017db40918014a20b8017cb40918014a20
b8017bb40918014a20b8017ab40918014a20b80179b40918014a20b80178
b40918014a20b80177b40918014a20b80176b40918014a20b80175b40918
014a20b80174b40918014a20b80173b40918014a20b80172b40918014a20
b80171b40918014a20b80170b40918014a20b8016fb40918014a20b8016e
b40918014a20b8016db40918014a20b8016cb40918014a20b8016bb40918
014a20b8016ab40918014a20b80169b40918014a20b80168b40918014a20
b80167b40918014a20b80166b40918014a20b80165b40918014a20b80164
b40918014a20b80163b40918014a20b80162b40918014a20b80161b40918
014a20b80160b40918014a20b8015fb40918014a20b8015eb40918014a20
b8015db40918014a20b8015cb40918014a20b8015bb40918014a20b8015a
b40918014a20b80159b40918014a20b80158b40918014a20b80157b40918
014a20b80156b40918014a20b80155b40918014a20b80154b40918014a20
b80153b40918014a20b80152b40918014a20b80150b40918014a20b8014f
b40918014a20b8014eb40918014a20b8014cb40918014a20b8014bb40918
014a20b8014ab40918014a20b80149b40918014a20b80148b40918014a20
b80147b40918014a20b80146b40918014a20b80145b40918014a20b80144
b40918014a20b80143b30918014ab80284b21e3e1fb80283b21e151fb802
82b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb2
1e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e
1fb80279b21d411fb80278b21d431fb80277b21d431fb80276b21d431fb8
0275b21d411fb80274b21d431fb80273b21d431fb80272b21d411fb80271
b21d421fb80270b21d421fb8026fb21d421fb8026eb21d431fb8026db21d
431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb80269b21c451f
b80268b21c451fb80267b21c451fb80266b21c441fb80265b21c451fb802
64b21c451fb80263b21c451fb80262b21c451fb80261b21c451fb80260b2
1c451fb8025fb21c451fb8025eb21c441fb8025db21c451fb8025cb21c45
1fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c451fb8
0257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb80253
b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024fb21c
451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8024bb21c451f
b8024ab21b491fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb802
46b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b2
1b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a
1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb8
0239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235
b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b
4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1f
b8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb802
28b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb80224b2
1b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c
1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8
021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217
b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a
4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1f
b8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb802
0ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b2
19501fb80205b219511fb80204b219511fb80203b219501fb80202b21951
1fb80201b219511fb80200b219511fb801ffb219511fb801feb219501fb8
01fdb219511fb801fcb219511fb801fbb219511fb801fab219501fb801f9
b219511fb801f8b219511fb801f7b219511fb801f6b219511fb801f5b218
541fb801f4b218531fb801f3b218541fb801f2b218541fb801f1b218541f
b801f0b218531fb801efb218541fb801eeb218541fb801edb218541fb801
ecb218531fb801ebb218531fb801eab218541fb801e9b218541fb801e8b2
18541fb801e7b218541fb801e6b218531fb801e5b218541fb801e4b21853
1fb801e3b218541fb801e2b218541fb801e1b218541fb801e0b218531fb8
01dfb218531fb801deb218541fb801ddb218541fb801dcb218541fb801db
b218541fb801dab218531fb801d9b218541fb801d8b218541fb801d7b217
571fb801d6b217561fb801d5b217561fb801d4b217571fb801d3b217571f
b801d2b217571fb801d1b217571fb801d0b217561fb801cfb217561fb801
ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801cab2
17561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b21757
1fb801c5b217571fb801c4b217571fb801c3b217561fb801c2b217571fb8
01c1b217571fb801c0b217571fb801bfb217561fb801beb217561fb801bd
b217571fb801bcb217571fb801bbb217571fb801bab217571fb801b9b217
571fb801b8b217561fb801b7b217571fb801b6b217571fb801b5b217571f
b801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801
b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2
165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f
1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb8
01a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019f
b2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb216
5b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1f
b80196b2165b1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb801
92b2163f1fb80191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2
165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b
1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb80186b215611fb8
0185b215621fb80184b215621fb80183b215661fb80182b215661fb80181
b215551fb80180b215451fb8017fb215361fb8017eb215361fb8017db215
611fb8017cb215621fb8017bb215621fb8017ab215641fb80179b215661f
b80178b215661fb80177b215661fb80176b215661fb80175b215661fb801
74b215661fb80173b215451fb80172b215621fb80171b215621fb80170b2
15631fb8016fb215641fb8016eb215661fb8016db215661fb8016cb21566
1fb8016bb215661fb8016ab215661fb80169b215621fb80168b215621fb8
0167b215611fb80166b215641fb80165b215641fb80164b215661fb80163
b215661fb80162b215661fb80161b215661fb80160b215661fb8015fb215
661fb8015eb215551fb8015db215451fb8015cb215451fb8015bb215361f
b8015ab215611fb80159b215621fb80158b215621fb80157b215631fb801
56b215641fb80155b215661fb80154b215661fb80153b215661fb80152b2
15661fb80151b214401fb80150b214551fb8014fb214561fb8014eb21483
1fb8014db2142d1fb8014cb214401fb8014bb214401fb8014ab214411fb8
0149b214401fb80148b214401fb80147b214411fb80146b2147e1fb80145
b214871fb80144b2147f1fb80143b214801fb80142b212461fb80141b212
461fb80140b212461fb8013fb212461fb8013eb212441fb8013db212461f
b8013cb211591fb8013bb211591fb8013ab2115b1fb80139b2115b1fb801
38b211471fb80137b211581fb80136b2115a1fb80135b2115b1fb80134b2
115b1fb80133b2112c1fb80132b211471fb80131b211551fb80130b21157
1fb8012fb211571fb8012eb211581fb8012db211591fb8012cb211591fb8
012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127
b2115b1fb80126b2115b1fb80125b211561fb80124b211561fb80123b211
571fb80122b211581fb80121b211591fb80120b2115a1fb8011fb2115a1f
b8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb801
1ab2115b1fb80119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2
105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d
1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8
010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109
b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d1fb80105b210
5e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1f
b8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f
621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f621ff30f621f
f20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f
631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e681fe40e681f
e30e681fe20e681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e
681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1f
d40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d
6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681f
c50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311f
be0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c
711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c741fb00c741f
af0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b
7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1f
a00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b
7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f
910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403
381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b
7d7b7dab7ddb7d404d060a7c557a557bab7a557955775578ab775576ab75
5504751475747503f47501ab750144750130750102007510752075030c74
55725573ab7255007250728072b072043bb072e072020072010ab8ffc0b3
721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a03251f69
38675568ab67556638645565ab645563386255613860555f385d555eab5d
555c385a555bab5a55593858555703251f5638545555ab54555338515552
ab51554f384e554e03251f4d384b554cab4b554a38485549ab4855473846
554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b401b
e01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f197f19
8f19030f18cf18024018292c460f17cf17df17ef1704134017292e460016
101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546
b8ffc0404d162326460f15010f151f1502451f15010011e011f0110315bf
10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e0340
0e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054
460f0b1f0b02553f0b4f0b02400b3f4346400b2d30460003012001010001
100120010308b8ffc0b401151f4603bc01000100000500010190b154532b
2b4bb80800524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59b101024354b0144b515a58b101018e59858d8d001d42
4bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff5358b2
0300001d42592b5e7375732b2b745e732b2b5e73742b73742b7374745e73
01755e73742b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73
002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b5e73755e732b2b5e735f73737373742b2b2b2b2b5e73742b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb10002
43545841ff0284006402830064028200640281006402800064027f006402
7e0064027d0064027c0064027b0064027a00640279006402780064027700
64027600640275006402740064027300640271006402700064026f006402
6e0064026d0064026c0064026b0064026a00640269006402680064026700
640266006402650064026400640263006402620064026100640260006402
5f0064025e0064025d0064025c0064025b0064025a006402590064025800
640257006402560064025500640254006402530064025200640251006402
500064024f0064024e0064024d0064024c0064024b0064024a0064024900
640248006402470064024600640245006402440064024300640242006402
41006402400064023f0064023e0064023d0064023c0064023b0064023a00
640239006402380064023700640236006402350064023400640233006402
3200640231006402300064022f0064022e0064022d0064022c0064022b00
64022a006402290064022800640227006402260064022500640224006402
230064022200640221006402200064021f0064021e0064021d0064021c00
64021b0064021a0064021900640218006402170064021600640215006402
14006402130064021200640211006402100064020f0064020e0064020d00
64020c0064020b0064020a00640209006402080064020700640206006402
050064020441ff00640203006402020064020100640200006401ff006401
fe006401fd006401fc006401fb006401fa006401f9006401f8006401f700
6401f6006401f5006401f4006401f3006401f2006401f1006401f0006401
ef006401ee006401ed006401ec006401eb006401ea006401e9006401e800
6401e7006401e6006401e5006401e4006401e3006401e2006401e1006401
e0006401df006401de006401dd006401dc006401db006401da006401d900
6401d8006401d7006401d6006401d5006401d4006401d3006401d2006401
d1006401d0006401cf006401ce006401cd006401cc006401cb006401ca00
6401c9006401c8006401c7006401c6006401c5006401c4006401c3006401
c2006401c1006401c0006401bf006401be006401bd006401bc006401bb00
6401ba006401b9006401b8006401b7006401b6006401b5006401b4006401
b3006401b2006401b1006401b0006401af006401ae006401ad006401ac00
6401ab006401aa006401a9006401a8006401a7006401a6006401a5006401
a4006401a3006401a2006401a1006401a00064019f0064019e0064019d00
64019c0064019b0064019a00640199006401980064019700640196006401
9500640194006401930064019200640191006401900064018f0064018e00
64018d0064018c0064018b0064018a006401890064018800640187006401
860064018500644180018400640183006401820064018100640180006401
7f0064017e0064017d0064017c0064017b0064017a006401790064017800
640177006401760064017500640174006401730064017200640171006401
700064016f0064016e0064016d0064016c0064016b0064016a0064016900
640168006401670064016600640165006401640064016300640162006401
61006401600064015f0064015e0064015d0064015c0064015b0064015a00
640159006401580064015700640156006401550064015400640153006401
52006401500064014f0064014e0064014c0064014b0064014a0064014900
640148006401470064014600640145006401440064014300642b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b185f5e0000>
[5731 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>XOTBAA+Calibri AddT42Char 
XOTBAA+Calibri /CharStrings get begin
end
end
%ADOEndSubsetFont
[/N11/XOTBAA+Calibri 1 TZ
273.66 97.0403 m
%ADOBeginSubsetFont: XOTBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XOTBAA+Calibri gcheck setglobal} if
1 4698 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>XOTBAA+Calibri AddT42Char 
XOTBAA+Calibri /CharStrings get begin
/two 1006 def
end
XOTBAA+Calibri /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N11 10.5 Tf
(2) show
%ADOBeginSubsetFont: UIRBAA+Calibri-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (UIRBAA+Calibri)
%%Title: (UIRBAA+Calibri Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /UIRBAA+Calibri def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-476 -194 1214 952} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1121 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C6923342525
31335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77A
FB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99
AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AE
A3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816
818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F30
8DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA
0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981
B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A
380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6
BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA
965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885
D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11A
F573B17CF9F38> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /UIRBAA+Calibri-Identity-H /Identity-H 0 [/UIRBAA+Calibri] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N10 (UIRBAA+Calibri-Identity-H)
/N10 (UIRBAA+Calibri-Identity-H) /Identity-H [ (UIRBAA+Calibri) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
279.0 97.0403 m
%ADOBeginSubsetFont: UIRBAA+Calibri-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
/UIRBAA+Calibri 1 GetGlyphDirectory
882 <001C60D8A8C9B83844CBABF75256C23589A050D2F18EC6AAEA2DCAA879D
629F0698E85A7558DC3794B984219238EC694626573D368F005AA7EB3DEDB55C
E7021DF056336AEE3D77182F0055C3CB6954365C7523BFC42E70B7DCDE95A> |
!
end
end end
%ADOEndSubsetFont
/N10 10.5 Tf
(\003r) show
282.241 97.0403 m
%ADOBeginSubsetFont: XOTBAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XOTBAA+Calibri gcheck setglobal} if
1 5018 1008 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>XOTBAA+Calibri AddT42Char 
XOTBAA+Calibri /CharStrings get begin
/four 1008 def
end
XOTBAA+Calibri /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N11 10.5 Tf
(4) show
287.521 97.0403 m
%ADOBeginSubsetFont: UIRBAA+Calibri-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
/UIRBAA+Calibri 1 GetGlyphDirectory
3 <001C60D8A8C9B888C146> |
!
end
end end
%ADOEndSubsetFont
/N10 10.5 Tf
(\000\003) show
292.802 97.0403 m
%ADOBeginSubsetFont: YNNBAA+SimSun-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
/YNNBAA+SimSun 6 GetGlyphDirectory
7003 <001C60D8A8C9B5EE3102981787C60D8CF2CA2D704B5DE05A5C5AF9C1AE
85DB6E0F1A220F43E44F6A3DF278117D46D65698AC71CCAB01BB57F43E55B618
8ABE6DB08B1662968C3FA287796133EB95041F6A64995F4ADE264A57916D16FF
57CA96E86C41AC086E6BD9E74300D461D92B5C9B0F150A8262C1B3CF838013E5
0A8D43B86647E53A5BEB169CD97CA31B5903178DA595B9795FBEEB961ED4D328
4F3C0244B43BCC501767B3> |
7424 <001C60D8A8C9B5EE31029AB20B841C5A606751866C51EAC43C114A3BCC
3A4B08184FADAC6012B8A85E406A022EEC8E6975F300CEF0F1468AA2DD76A818
E442049FEAA63BE714C6D2A95592850B8590CD288E756F714C1CD763B1821A41
B9D0BFEC1A52F83925C62027029DC746292A9C84981B65CE162BB97EDAA2FD51
38A733C823CA4CE21E9DFBDADF580024BF7C1CD8D5A4A7675CCDA4BDF5E00747
46359B5B3AB3B637C3> |
17728 <001C60D8A8C9B5EE310D9D6FB7548233FA567C73BB4D44A4C06044D1D
4BDD192EFA5A3300B3699F8757BD487F305D405631B98468D694AB4EF224DE2B
DAD602C9767B3B15EA9EE91E9DF88CBAC430F1107D0B3EA4C8910DB9095B779B
6A9A1250C913EB4657251F45A2830D3D97741CC4D2F386A4CB2724543A1665DA
B5B7E896858AE20669350465B3D5DB685BC4C403F5FE22540E0995B1AF0E0699
5EDE1CBA1693CE96FF5D3D25E4C6F2771DBEAB1CBAAB622999C3327959779137
D7EF2179DFB61A052BB85E2D445EBD0E2AF855BB2C403C10064EFE7F8CCCDF5C
547714A7477BE587D4C951BC0AB852E3CD81F4823C8BBC683C0E5FB2505A8226
9DF4EFA19F0E78BBA234B278CC7E5FDB7533DF5BA2E92ED5475FDBECE5AD7372
2A6376B6B1BB88682AAEDD09314EB82B5B23490ABCCE5EA0B159CD62B6E565FD
235163BBB437DE714E875559E38689A6A9C81CBE1AE0BECCF6A8BEA79D17910A
2ABA975A4> |
2282 <001C60D8A8C9B5EE310D609F4D5190237C58515F08ED62CD3525EBC2AD
9A8C4296094DB9AC0BF54A1FD94C80CF247EB25306EF6F1AD62D5E1D19C78F3F
969D9C30201460B1C26F34E571062D9844CCAB27D2EF9A340248A8ECC03F91BD
E1ABE9E63DA45719FA34D0FF7047B724479788EA3C600B966B4B762A835D9784
230E6837CD69D790ED2D517E9E8E9BFB75BC832FDD52C7DD07B12AE348794D9F
B9D653257577D2E380CC036709BE1CFF3FADE429D7FE5FD3E6DE08D786AF7621
5A45BB9B3070DB824314E2EF7D3A7BC7819C> |
17819 <001C60D8A8C9B5EE31021357C0CCCF2A3A424518752C60A049C282D58
54C364A97551889764BD80282AB4DF3DB2BFF93AA642C10D8F3AB29F841F93BF
887C50CCC049610CD28FA6B2808D3C45118519D795AEA4ECC5241AF93AD60D6E
9C5589F27D28762C2615CFD7998318D28F7FB8F92C265B6C7512BB7E10F6F37C
E294660DDAB3A609615B8F3616A740624C77441BF0FFD78F8CD4E0171F9E5C4F
FE2215CF395B8C5DA35A7B92C1260E271BAA288C100141542078ABC6778DF31D
2285F7EA7CD30586E272EB1835C68D4F03551850A8FA7145A64CE0ECEAF29500
33D5392797FF2F2F36E5270ACFAC7F9A2B9E7A92D820282491EEB9E59335B52E
ADC363379D09E582F42E7AFA1FC32B063629F4DBD79B8EEAE831154B5A4EE76F
EF76B8AEF42E848454E51E127DF02C0B3D017964F49F661> |
12255 <001C60D8A8C9B5EE310245F8BBDC6444E898DCEDEFC721B7003AEDA74
DD9663E4AC72B6E605A3EB88D57BE426D7A3665E5F7541B670CC3D36D70EB86C
6C3CE2553052998F151327EF7D1063994B32D353E605B7C64A0D4D7A6B66A145
6DC0250400C1DC6C04699DEF99F197F77C4E96C29546896A5486E89D4C942EF5
428CC08855D70713A999783A622C8F43ED1B79E5A30062878FF678AB726E88DB
C47062CEAE641D482126280792F55B00B4D7C3B50FB1587839403F87AE367791
94C97F7ACA271C41C3D5DBF0A5EA314C6888D652AB53ED38B3F9C00159B661A5
BE0FEA8742ECFD2420004E1F0B72AEFD4A12768031BE8472026072F2DD754CC3
4FBEF8FA28FBAFD6D3E9B76A0C66BD55A4FB6B67F5787B51224F920AB8821A8E
06A3812DFAC50FBF579A76325F6B3BFB63F2570E59C18DB> |
!
end
end end
%ADOEndSubsetFont
/N12 10.5 Tf
(\033[\035\000E@\b\352E\233/\337)
[10.5 10.4401 10.5 10.5 10.5 10.5 ] pdfxs
355.742 97.0403 m
/N10 10.5 Tf
(\000\003) show
Q
/XOTBAA+Calibri /Font _pdfUndefineResource
/N11 /Font _pdfUndefineResource
/YNNBAA+SimSun /CIDFont _pdfUndefineResource
/YNNBAA+SimSun-Identity-H /Font _pdfUndefineResource
/N12 /Font _pdfUndefineResource
/UIRBAA+Calibri /CIDFont _pdfUndefineResource
/UIRBAA+Calibri-Identity-H /Font _pdfUndefineResource
/N10 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font ArialMT
%%+ font Arial-BoldMT
%%EOF
