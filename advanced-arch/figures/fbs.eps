%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Multi-Core Design Automation Challenges)
%%Version: 1 4
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 23:42:23 01/06/08
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 24 236 118
%%HiResBoundingBox: 0.0 24.2556 236.0 118.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3974 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2008-01-06T23:42:23+08:00</xap:CreateDate>
         <xap:ModifyDate>2008-01-06T23:42:23+08:00</xap:ModifyDate>
         <xap:MetadataDate>2008-01-06T23:42:23+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:C4FB2B9269BCDC119EC6FC57C2389DF2</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:C4FB2B9269BCDC119EC6FC57C2389DF2</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b09a110e-e08f-4d30-a76d-c7e7f6ac0737</stRef:instanceID>
            <stRef:documentID>uuid:C3FB2B9269BCDC119EC6FC57C2389DF2</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Keywords/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Multi-Core Design Automation Challenges</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li/>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">42.4</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 24.2556 236.0 93.7444 rectclip
/N11 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

q
0.0 24.2556 m
236.0 24.2556 l
236.0 118.0 l
0.0 118.0 l
h
W
n
n
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/E2535 exch /ColorSpace defineRes

cs 0.0 0.8 0.604 sc
212.755005 33.577999 21.278000 13.744999 rectfill

q
n
212.512 33.333 21.582 14.187 re
W
n
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
191.174 -37.346 19.12 -15.296 re
191.173 -52.641 m
h
0.0 0.0 0.0 sc
S
Q
Q
0.0 0.0 0.0 sc
%ADOBeginSubsetFont: MRXAAA+Times-Roman Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /MRXAAA+Times-Roman def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Roman) def
/ItalicAngle 0 def
/BaseFontName (Times-Roman) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-168 -218 1000 898} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 0 662 676 450 460 683 683] def
/OtherBlues [262 270 -218 -217] def
/StdHW [28] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 32 /space 36 /dollar 40 /parenleft/parenright 45 /hyphen/period
/slash 50 /two 65 /A/B/C/D
 73 /I 76 /L 82 /R/S 97 /a/b
/c 101 /e 103 /g 105 /i 107 /k/l
 110 /n/o/p 114 /r
/N10/MRXAAA+Times-Roman -1 TZ
214.64 42.415 m
%ADOBeginSubsetFont: MRXAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MRXAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDF88216CF024BDC8993EE8739690407CCCBA55622B1291
8D3D17B30491F1CA282D9D8970F0E7D82029935D97EFE881B4DF2886B228CE25
7D591CDE49A8CC4885CEC7CCEA8711A068478FEFD5A1AE8CBEE74FD6B5E9B442
15B429576C7C558160F2B347FA2DE19097A51D8DC5A07C69C381C16050A2C3C0
AD9429FE9FB016DE0AD2384D26D27090BAD9C5F245D7B3E6963711AFEDF85F48
C27AAA847C24C6F3FA2933FA01060CE313860904472963674DD2917A5A08E4BB
800FDC7A1B59EA97822D469C42B9DBE7574377B1FAE77CD254CC259CD40FF463
2AF735C694E1D1AE312C0A5D35FEE91AC0> |-
/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34A93F0BF7A993E
7B76B394E0DD4E0D515EE382B893A080E29B40A4402A4A406056947B5B2334F6
D5909CCB56B0284CEFC066661E9D6B7471673D105428B9DFDD7F> |-
/k <1C60D8A8C9B7A73DC549024AEE55A01279CB4203924BF82E56E4D40C586B
4DBB34E037DF16AE16A3164380DF29FA4B03490CDE63FDC7E2C91A499025C65B
916FEC6C317F9925AAA259F401DDE5C44522AD5839F5239C44CB07BA8FCAB4FD
7028F2F67BAA752C4D9C66EACFE1D2FF1E69C6B3CF3BA4E93D562F073508A0D4
708B3D39482859F0082F3BB584E49A55AE2BBB4BFBEEB8513153DB7A7395C754
B0B61F370A78212C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MRXAAA+Times-Roman findfont /Encoding get
dup 66 /B put
dup 111 /o put
dup 107 /k put
pop
end
%ADOEndSubsetFont
/N10 [5.0439 0.0 0.0 4.073 0.0 0.0] Tf
(Book)
[3.39761 2.55524 2.55524 2.55524 ] pdfxs
214.64 35.051 m
%ADOBeginSubsetFont: MRXAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MRXAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB40537D3B34E4D85733A582F
C4A35A139249CD52BC9F3D8702E5238EA1584552BB139B2FA8E8AF6ADB725AC9
88E8038C63CC98292FA274964F057DD3DD90F918CCDB06CF8FF9093CFB289906
8DCE9A23D07E1368> |-
/p <1C60D8A8C9B7A73DB581186A9391F1059D96F459FFDB82B44DD4DA245FA5
07D024F28401075285D307468CE0D757751AAB4F3490756973E462106B10BD76
63199C4B8A27D5695A680192DE86699DAAF1A89717FDB65265476969999FB7D7
847B55845008C66520A977913643311D83941F927D5B958DBE761028866277B0
1C9604CB3013C82C039B9AE8C95A3C2834B9ED8E05831C8156944A7F9B872094
AF1AB63EB96F8DF66A491A85E4F72D480F637D538DE8> |-
/i <1C60D8A8C9B854D08887A954377F4C214D4B21F7492A7553FF39CC630E80
1180DD16566EA992053D700F571C962E92EE02C6D82716C0473307AD723B6798
5001C64C2D995FF692007B5CA8DE93957C4672C9482F0FE971562A04ADA3ED80
642F55B1C8A3B339468512B3D5E6503179BCD4D2EA59F7619EF7B270C6D7B2B7
C08A6BA66CAC2847BEAAEF1753ED49A16028> |-
/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C634F1E9284F6FC7263
711D03C47F22A203EB41F88268C104BC4A61C7649DA42D5BE18FE7F731730EB4
D130993D14FEE046DD67E78C9CE5C5598D396AB18A5366D9E71D2D6A292A9108
9ACF40B09098B729C4807DB1C9D54B7EE1602D3D091D4525D3E7868AFA4B4D0D
EB009172C2D67F26ED44CA4931A6533F30AB34> |-
/g <1C60D8A8C9B7A73DB582976F6FA2EE84F51D64198201D65DA0379D449296
CB33756AB3A7AE8A175EF9BB7E6667E704AA36397D842A4683F771819C78135E
F0B455C13E311CBB866AEFE329B6F52B2221D0336B69FAD4E4E81CDD8998ABF0
669D384CC67DB6CFEB8A66595B4A650724AA273D9E1169E84F9C77F0A418C289
4C5B746841205D3436C2C1B587229CD290D09CA382D1C9529C9CE920A65F438C
38CAA9A135E87D56D7B983324F4ED251DA6E0357F756A1F213D1E3DE07A8846F
D3401EBD39FDF6B92DDF7A8C8A8C8CE90CF9E3A9AABD6ADA466E3F1401FE5B96
D08AC492AE33B92EB9535FDFE1F783249CAEF304B838754D41893E951AD187AF
837A28D1506CE6DEF32CA63A8C2A4B955AF6A40848A98B871F4F1B3FB62013F4
CC669689021E45B3B69D14EDD2B2A744D2C66B261120B6C5CEB8AB138BBF9004
CB2E94E80C216C86B72B469D0BFF2EF69EED7A76E895C3D4BEDBC1E5FA41C0EA
9459E41BB0704A8CFE47> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MRXAAA+Times-Roman findfont /Encoding get
dup 101 /e put
dup 112 /p put
dup 105 /i put
dup 110 /n put
dup 103 /g put
pop
end
%ADOEndSubsetFont
(keeping)
[2.51388 2.30708 2.23142 2.55423 1.39413 2.54919 2.51388 ] pdfxs
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
13.69 -111.912 m
13.69 -90.606 l
43.843 -90.606 l
43.843 -111.912 l
S
Q
n
0.0 0.8 0.604 sc
29.034000 78.175003 7.903000 1.620003 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
26.086 -86.973 7.102 -1.803 re
26.086 -88.775 m
h
0.0 0.0 0.0 sc
S
Q
n
29.030998 76.577003 7.902000 1.570999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
26.083 -85.195 7.101 -1.748 re
26.083 -86.943 m
h
0.0 0.0 0.0 sc
S
Q
n
38.875000 78.121002 7.902000 1.620003 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
34.929 -86.913 7.101 -1.803 re
34.929 -88.716 m
h
0.0 0.0 0.0 sc
S
Q
n
38.870998 76.524002 7.902000 1.570999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
34.925 -85.135 7.101 -1.748 re
34.925 -86.882 m
h
128.213 -112.553 m
128.213 -91.197 l
158.363 -91.197 l
158.363 -112.553 l
0.0 0.0 0.0 sc
S
Q
n
156.477997 78.803001 7.901001 1.570999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
140.604 -87.671 7.10001 -1.748 re
140.603 -89.419 m
h
0.0 0.0 0.0 sc
S
Q
n
156.468994 77.156998 7.901001 1.620003 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
140.596 -85.84 7.10001 -1.802 re
140.595 -87.642 m
h
0.0 0.0 0.0 sc
S
Q
n
166.304993 78.750000 7.901001 1.570999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
149.435 -87.611 7.10001 -1.747 re
149.435 -89.359 m
h
0.0 0.0 0.0 sc
S
Q
n
166.296005 77.103996 7.899994 1.619003 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
149.426 -85.78 7.10001 -1.802 re
149.426 -87.582 m
h
0.0 0.0 0.0 sc
S
Q
n
15.210999 55.681999 169.731995 3.189999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
13.666 -61.942 152.517 -3.55 re
13.666 -65.491 m
h
0.0 0.0 0.0 sc
S
Q
n
15.207993 49.276001 169.725006 3.189999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
13.663 -54.814 152.511 -3.549 re
13.663 -58.363 m
h
0.0 0.0 0.0 sc
S
Q
n
15.205002 42.823002 169.718002 3.238998 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
13.66 -47.632 152.504 -3.604 re
13.66 -51.236 m
h
0.0 0.0 0.0 sc
S
Q
n
15.201996 38.873001 169.710999 3.237999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
13.657 -43.236 152.498 -3.604 re
13.657 -46.84 m
h
0.0 0.0 0.0 sc
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
28.016 -84.897 m
28.016 -67.643 l
27.962 -67.588 l
27.907 -67.534 l
27.798 -67.534 l
27.689 -67.643 l
27.689 -84.951 l
27.743 -85.006 l
27.798 -85.061 l
27.907 -85.061 l
27.962 -85.006 l
28.016 -84.951 l
28.016 -84.897 l
h
29.217 -68.135 m
27.853 -65.404 l
26.488 -68.135 l
29.217 -68.135 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
38.664 -84.897 m
38.664 -39.196 l
38.61 -39.142 l
38.555 -39.088 l
38.446 -39.088 l
38.391 -39.142 l
38.336 -39.196 l
38.336 -84.951 l
38.446 -85.061 l
38.555 -85.061 l
38.61 -85.006 l
38.664 -84.951 l
38.664 -84.897 l
h
39.865 -39.742 m
38.5 -37.013 l
37.135 -39.742 l
39.865 -39.742 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
24.086 -58.306 m
24.086 -88.01 l
24.195 -88.118 l
24.359 -88.118 l
24.414 -88.064 l
24.414 -58.197 l
24.359 -58.142 l
24.195 -58.142 l
24.086 -58.252 l
24.086 -58.306 l
h
22.885 -87.518 m
24.25 -90.247 l
25.615 -87.518 l
22.885 -87.518 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
20.92 -90.247 m
20.92 -53.447 l
20.865 -53.393 l
20.81 -53.338 l
20.701 -53.338 l
20.646 -53.393 l
20.592 -53.447 l
20.592 -90.301 l
20.646 -90.356 l
20.701 -90.41 l
20.81 -90.41 l
20.865 -90.356 l
20.92 -90.301 l
20.92 -90.247 l
h
22.12 -53.938 m
20.756 -51.208 l
19.39 -53.938 l
22.12 -53.938 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
n
15.199005 32.273998 170.069000 2.452999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
13.655 -35.892 152.82 -2.729 re
13.655 -38.622 m
h
0.0 0.0 0.0 sc
S
Q
n
88.227997 60.361000 21.750999 4.759003 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
79.276 -67.148 19.545 -5.296 re
79.276 -72.444 m
h
40.239 -84.838 m
40.239 -68.895 l
0.0 0.0 0.0 sc
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
40.239 -69.059 m
77.037 -69.059 l
77.091 -69.004 l
77.146 -68.95 l
77.146 -68.84 l
77.091 -68.786 l
77.037 -68.731 l
40.185 -68.731 l
40.13 -68.786 l
40.076 -68.84 l
40.076 -68.95 l
40.185 -69.059 l
40.239 -69.059 l
h
76.545 -70.26 m
79.276 -68.895 l
76.545 -67.53 l
76.545 -70.26 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
81.077 -72.444 m
81.077 -86.585 l
0.0 0.0 0.0 sc
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
81.077 -86.421 m
44.225 -86.421 l
44.171 -86.476 l
44.116 -86.53 l
44.116 -86.64 l
44.171 -86.694 l
44.225 -86.749 l
81.132 -86.749 l
81.241 -86.64 l
81.241 -86.53 l
81.132 -86.421 l
81.077 -86.421 l
h
44.716 -85.219 m
41.987 -86.585 l
44.716 -87.95 l
44.716 -85.219 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
n
113.921005 60.334999 21.628998 4.759003 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
102.364 -67.119 19.436 -5.296 re
102.364 -72.415 m
h
29.59 -84.808 m
29.59 -75.909 l
105.857 -75.909 l
0.0 0.0 0.0 sc
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
106.021 -75.909 m
106.021 -74.543 l
105.966 -74.49 l
105.912 -74.435 l
105.803 -74.435 l
105.748 -74.49 l
105.693 -74.543 l
105.693 -75.964 l
105.803 -76.072 l
105.912 -76.072 l
106.021 -75.964 l
106.021 -75.909 l
h
107.222 -75.09 m
105.857 -72.415 l
104.492 -75.09 l
107.222 -75.09 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
116.504 -72.415 m
116.504 -81.259 l
31.391 -81.259 l
0.0 0.0 0.0 sc
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
31.173 -81.259 m
31.173 -82.514 l
31.228 -82.569 l
31.228 -82.624 l
31.282 -82.678 l
31.446 -82.678 l
31.501 -82.624 l
31.501 -82.569 l
31.555 -82.514 l
31.555 -81.259 l
31.501 -81.204 l
31.501 -81.15 l
31.446 -81.095 l
31.282 -81.095 l
31.228 -81.15 l
31.228 -81.204 l
31.173 -81.259 l
h
30.027 -82.078 m
31.391 -84.808 l
32.756 -82.078 l
30.027 -82.078 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
n
194.776001 61.879002 11.847000 1.570000 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
175.018 -68.836 10.646 -1.747 re
175.018 -70.584 m
h
0.0 0.0 0.0 sc
S
Q
n
194.766006 60.282001 11.847000 1.570000 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
175.008 -67.061 10.645 -1.747 re
175.008 -68.808 m
h
0.0 0.0 0.0 sc
S
Q
n
194.756012 58.638000 11.845993 1.618999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
174.999 -65.231 10.645 -1.802 re
174.999 -67.032 m
h
0.0 0.0 0.0 sc
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
166.048 -63.593 m
172.816 -66.323 l
172.924 -66.323 l
172.979 -66.268 l
173.033 -66.213 l
173.033 -66.104 l
172.924 -65.995 l
166.212 -63.265 l
166.048 -63.265 l
165.993 -63.32 l
165.993 -63.375 l
165.938 -63.429 l
165.938 -63.484 l
165.993 -63.539 l
166.048 -63.593 l
h
171.942 -67.25 m
174.999 -67.032 l
172.979 -64.739 l
171.942 -67.25 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
180.349 -70.526 m
180.349 -77.622 l
118.229 -77.622 l
0.0 0.0 0.0 sc
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
118.393 -77.622 m
118.393 -74.456 l
118.338 -74.402 l
118.284 -74.347 l
118.175 -74.347 l
118.12 -74.402 l
118.065 -74.456 l
118.065 -77.677 l
118.12 -77.731 l
118.175 -77.731 l
118.229 -77.786 l
118.284 -77.731 l
118.338 -77.731 l
118.393 -77.677 l
118.393 -77.622 l
h
119.594 -75.002 m
118.229 -72.327 l
116.864 -75.002 l
119.594 -75.002 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
176.854 -65.122 m
168.122 -59.28 l
168.067 -59.226 l
167.958 -59.226 l
167.903 -59.28 l
167.848 -59.335 l
167.848 -59.499 l
167.903 -59.554 l
176.637 -65.395 l
176.746 -65.449 l
176.801 -65.449 l
176.854 -65.395 l
176.909 -65.34 l
176.909 -65.176 l
176.854 -65.122 l
h
169.159 -58.517 m
166.102 -58.134 l
167.631 -60.809 l
169.159 -58.517 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
n
194.744995 49.046001 13.850006 1.570000 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
174.989 -54.556 12.446 -1.747 re
174.99 -56.304 m
h
0.0 0.0 0.0 sc
S
Q
n
194.735001 47.401001 13.850006 1.618999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
174.979 -52.727 12.445 -1.801 re
174.98 -54.529 m
h
0.0 0.0 0.0 sc
S
Q
n
194.723999 45.806000 13.848999 1.570000 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
174.97 -50.951 12.445 -1.746 re
174.971 -52.699 m
h
0.0 0.0 0.0 sc
S
Q
n
194.713989 44.161999 13.848007 1.618999 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
174.96 -49.123 12.444 -1.801 re
174.961 -50.924 m
h
0.0 0.0 0.0 sc
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
166.012 -49.287 m
172.778 -52.016 l
172.887 -52.016 l
172.942 -51.961 l
172.996 -51.907 l
172.996 -51.797 l
172.942 -51.743 l
172.887 -51.688 l
166.176 -48.96 l
166.012 -48.96 l
165.957 -49.014 l
165.957 -49.069 l
165.902 -49.124 l
165.902 -49.178 l
165.957 -49.233 l
166.012 -49.287 l
h
171.905 -52.944 m
174.961 -52.67 l
172.942 -50.379 l
171.905 -52.944 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
181.893 -56.218 m
181.893 -62.932 l
181.948 -62.986 l
182.002 -63.041 l
182.111 -63.041 l
182.221 -62.932 l
182.221 -56.164 l
182.166 -56.109 l
182.111 -56.055 l
182.002 -56.055 l
181.948 -56.109 l
181.893 -56.164 l
181.893 -56.218 l
h
180.692 -62.386 m
182.057 -65.115 l
183.422 -62.386 l
180.692 -62.386 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
187.46 -49.233 m
188.988 -48.523 l
189.042 -48.468 l
189.042 -48.304 l
188.988 -48.25 l
188.933 -48.196 l
188.825 -48.196 l
187.351 -48.96 l
187.242 -49.069 l
187.242 -49.178 l
187.351 -49.287 l
187.405 -49.287 l
187.46 -49.233 l
h
189.097 -49.778 m
190.953 -47.322 l
187.896 -47.322 l
189.097 -49.778 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
190.953 -47.158 m
168.631 -43.992 l
168.522 -43.992 l
168.468 -44.047 l
168.468 -44.266 l
168.522 -44.266 l
168.576 -44.32 l
190.899 -47.486 l
191.008 -47.486 l
191.181 -47.31 191.166 -47.381 190.953 -47.158 c
h
169.286 -42.847 m
166.393 -43.83 l
168.904 -45.576 l
169.286 -42.847 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
n
155.771 58.508 m
155.771 57.722 l
145.325 57.722 l
145.325 56.104 l
155.771 56.104 l
155.771 55.32 l
159.234 56.938 l
eofill
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
139.969 -65.086 m
139.969 -64.213 l
130.582 -64.213 l
130.582 -62.411 l
139.969 -62.411 l
139.969 -61.538 l
143.08 -63.34 l
h
S
Q
n
146.836 53.724 m
146.836 52.106 l
157.16 52.106 l
157.16 48.918 l
146.836 48.918 l
146.836 47.3 l
143.374 50.488 l
0.2 0.2 0.8 sc
eofill
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
131.939 -59.763 m
131.939 -57.962 l
141.217 -57.962 l
141.217 -54.415 l
131.939 -54.415 l
131.939 -52.613 l
128.828 -56.161 l
h
0.0 0.8 0.604 sc
S
Q
n
157.211 60.074 m
157.211 58.456 l
145.309 58.456 l
145.309 55.268 l
157.211 55.268 l
157.211 53.699 l
161.159 56.886 l
eofill
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
141.263 -66.829 m
141.263 -65.028 l
130.567 -65.028 l
130.567 -61.481 l
141.263 -61.481 l
141.263 -59.734 l
144.81 -63.282 l
h
0.0 0.8 0.604 sc
S
Q
n
148.701 44.208 m
148.701 42.345 l
157.81 42.345 l
157.81 38.667 l
148.701 38.667 l
148.701 36.853 l
145.665 40.53 l
eofill
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
133.615 -49.173 m
133.615 -47.1 l
141.801 -47.1 l
141.801 -43.007 l
133.615 -43.007 l
133.615 -40.989 l
130.887 -45.081 l
h
0.0 0.8 0.604 sc
S
Q
0.0 0.0 0.0 sc
3.6803 55.854 m
%ADOBeginSubsetFont: MRXAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MRXAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6079F1E48848039BAD53EF75083A15B245763DB78818AFF61
A16A1320ECEE497C9F16C5A9970A77459725DBE7EEF7A8AE2D746E7EA0C1C0AC
C147A074C8F2DEB3988A18E6A7A9C2578DBDC4E1780F7F0786FD35F2FF7C061A
95B7B4885D2CBFA83E65D83F5C9CA146E64E48829821EEDD25BB2D60224FB7D5
988513FD97346282ED82E86E786062> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MRXAAA+Times-Roman findfont /Encoding get
dup 65 /A put
pop
end
%ADOEndSubsetFont
/N10 [8.0736 0.0 0.0 6.5195 0.0 0.0] Tf
(AB)
[5.82914 5.38515 ] pdfxs
3.6803 49.4323 m
%ADOBeginSubsetFont: MRXAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MRXAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7EF32A193189DA2467EEF90BB4843AFCD07682C17FCB181C3
F70B0CA8436486C289ED34AE435D16FF1CB07A2B01CAD9573442FA519C68EF9A
198BFAE5C4A460021A5C56FEA9BD8D624F7DAF5F40358D4BEEF4C33B8CA9313A
0976CADAB3AF967336E068B5FDB3E208F4079D52BB0970F735315F1E256DFA87
D04984A8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MRXAAA+Times-Roman findfont /Encoding get
dup 83 /S put
pop
end
%ADOEndSubsetFont
(SB)
[4.49376 5.39 ] pdfxs
2.34008 39.2814 m
%ADOBeginSubsetFont: MRXAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MRXAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B64EDF88216CF039522D2CD16031C14F48AE18706656314B55
A44D32F713967A5EF8844C033ACCF3957E344151100D1C83334794F24CBE3A1B
9AF4A82F4D6C7CD452B51143B0C6F97C0FA861F03E4C420C96B9F0EC4B2245F8
CD654119EBE887016A0D90A29861BC0C36838B5464E1DB93F15F4476DA9E07D5
97F3D2EA5732F6E8BF74573804D1C1542747A58851CA05BA5FA2416A905DAF1E
03CC5FD0906576F6C98C075D633B8EC1BE9755F5EC40> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MRXAAA+Times-Roman findfont /Encoding get
dup 82 /R put
pop
end
%ADOEndSubsetFont
(RB)
[5.40453 5.40453 ] pdfxs
3.6803 28.7394 m
%ADOBeginSubsetFont: MRXAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MRXAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B6079F1E66B7565D0C0FE392D7D1AED8C6DCA6A1AA2DE51BB0
54073985C252F108C147E5B894B74E8DD41D4B29079CD8FEDF6FFB13221241AF
8820FB20A248B8E44058D948F8799185C6AB1FC88F91843001045D85F85BFF44
C0DE80EF9567CFF979CF6DFE9ADC683295CC56E28FAA9DD701C805DE88F6EEB7
4153DF11DEC18134D86E418F935794> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MRXAAA+Times-Roman findfont /Encoding get
dup 68 /D put
pop
end
%ADOEndSubsetFont
(DB)
[5.82914 5.38515 ] pdfxs
90.517 60.267 m
%ADOBeginSubsetFont: MRXAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MRXAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C3AED63678C15FF4B0D41EAF1ADF08534F78C6CF
D85> |-
/a <1C60D8A8C9B77FE2B8A4D222FB41F47F459CA0D95123D06ECF654AB05FF5
B6DC144FC9BBEC366E5ECC063C78F59640CE32DD9D219C4F4385FAEDBC60FF33
4CB1D3BF02D9F353F73914E29D9DD64FAA28B45E23265BD78A90B345EFEAD972
A0D93CE817026DBF17DB9E8E49AD8C2AF4FC6486D49F260206F186E614E3D16B
2F4AD46463A28F92ED5F2851044761192B9ADCF8B12C73A96A7E57C5841BD16A
930132DACDF469EE0C2A8F85A167570E289B5609FF9CB20DD38C9C84A9BB9FC8
A7014AC491483F6C> |-
/r <1C60D8A8C9B81F2C46F2EFD1B3B81533015C6076AEA2DF2F336244DA608D
0666A9C39147579BE5F84064BA5DCF6CD4C576D0177C42EAE7438D00AB1D6595
6107D443F0AD6F08A63F5306BE8A1920B3CB273D9CF24739F3E4740FB53EC981
D22501D5AF8E600BA9EEBFA742EC328561AB6E257A9B7C3C0B4F8CAC20D46ECD
F05FEB5C54162C09AD2C0169673C> |-
/b <1C60D8A8C9B7A73DCF483CC3D064C5FA06F86B27E7CBEBE08CFA613F8E3E
A9893E9C65934D70E8A1A61851D47333ADCCA9248EAAB11C24B5A5EC76B31DE7
9633624C03B00A1B759E4BC857F34EE18BC404270F1D65C409E75BC36F829006
ADE36154F16CBECC62624F16841A55A2ADA3EE50EABAAEFED663> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MRXAAA+Times-Roman findfont /Encoding get
dup 45 /hyphen put
dup 97 /a put
dup 114 /r put
dup 98 /b put
pop
end
%ADOEndSubsetFont
/N10 [6.556 0.0 0.0 5.294 0.0 0.0] Tf
(D-arbA-arb)
[4.73671 2.18638 2.91414 2.18638 13.666 4.73671 2.12737 2.91414 2.18638 3.28128 ] pdfxs
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
49.085 -97.054 m
49.14 -97.054 l
49.249 -96.946 l
49.249 -96.837 l
49.194 -96.782 l
49.14 -96.727 l
48.976 -96.727 l
48.921 -96.782 l
48.921 -96.837 l
48.867 -96.891 l
48.921 -96.946 l
48.921 -97.001 l
48.976 -97.054 l
49.085 -97.054 l
h
49.74 -97.054 m
49.794 -97.054 l
49.849 -97.001 l
49.904 -96.946 l
49.904 -96.837 l
49.794 -96.727 l
49.685 -96.727 l
49.63 -96.782 l
49.576 -96.837 l
49.576 -96.946 l
49.63 -97.001 l
49.685 -97.054 l
49.74 -97.054 l
h
50.449 -97.054 m
50.503 -97.054 l
50.613 -96.946 l
50.613 -96.837 l
50.503 -96.727 l
50.34 -96.727 l
50.286 -96.782 l
50.286 -97.001 l
50.34 -97.054 l
50.449 -97.054 l
h
51.104 -97.054 m
51.159 -97.054 l
51.267 -96.946 l
51.267 -96.837 l
51.213 -96.782 l
51.159 -96.727 l
51.05 -96.727 l
50.94 -96.837 l
50.94 -96.946 l
50.995 -97.001 l
51.05 -97.054 l
51.104 -97.054 l
h
51.814 -97.054 m
51.868 -97.054 l
51.923 -97.001 l
51.977 -96.946 l
51.977 -96.837 l
51.923 -96.782 l
51.868 -96.727 l
51.704 -96.727 l
51.65 -96.782 l
51.65 -97.001 l
51.704 -97.054 l
51.814 -97.054 l
h
52.468 -97.054 m
52.523 -97.054 l
52.577 -97.001 l
52.632 -96.946 l
52.632 -96.837 l
52.577 -96.782 l
52.523 -96.727 l
52.413 -96.727 l
52.359 -96.782 l
52.304 -96.837 l
52.304 -96.946 l
52.413 -97.054 l
52.468 -97.054 l
h
53.177 -97.054 m
53.232 -97.054 l
53.341 -96.946 l
53.341 -96.837 l
53.287 -96.782 l
53.232 -96.727 l
53.068 -96.727 l
53.013 -96.782 l
53.013 -97.001 l
53.068 -97.054 l
53.177 -97.054 l
h
53.832 -97.054 m
53.886 -97.054 l
53.941 -97.001 l
53.996 -96.946 l
53.996 -96.837 l
53.886 -96.727 l
53.778 -96.727 l
53.724 -96.782 l
53.669 -96.837 l
53.669 -96.946 l
53.778 -97.054 l
53.832 -97.054 l
h
54.542 -97.054 m
54.597 -97.054 l
54.651 -97.001 l
54.705 -96.946 l
54.705 -96.837 l
54.651 -96.782 l
54.597 -96.727 l
54.433 -96.727 l
54.378 -96.782 l
54.378 -97.001 l
54.433 -97.054 l
54.542 -97.054 l
h
55.197 -97.054 m
55.251 -97.054 l
55.36 -96.946 l
55.36 -96.837 l
55.306 -96.782 l
55.251 -96.727 l
55.142 -96.727 l
55.087 -96.782 l
55.033 -96.837 l
55.033 -96.946 l
55.142 -97.054 l
55.197 -97.054 l
h
55.906 -97.054 m
55.96 -97.054 l
56.07 -96.946 l
56.07 -96.837 l
55.96 -96.727 l
55.797 -96.727 l
55.742 -96.782 l
55.742 -97.001 l
55.797 -97.054 l
55.906 -97.054 l
h
56.56 -97.054 m
56.615 -97.054 l
56.724 -96.946 l
56.724 -96.837 l
56.67 -96.782 l
56.615 -96.727 l
56.506 -96.727 l
56.397 -96.837 l
56.397 -96.946 l
56.452 -97.001 l
56.506 -97.054 l
56.56 -97.054 l
h
57.271 -97.054 m
57.325 -97.054 l
57.379 -97.001 l
57.433 -96.946 l
57.433 -96.837 l
57.379 -96.782 l
57.325 -96.727 l
57.161 -96.727 l
57.107 -96.782 l
57.107 -97.001 l
57.161 -97.054 l
57.271 -97.054 l
h
57.925 -97.054 m
57.98 -97.054 l
58.089 -96.946 l
58.089 -96.837 l
58.034 -96.782 l
57.98 -96.727 l
57.87 -96.727 l
57.816 -96.782 l
57.761 -96.837 l
57.761 -96.946 l
57.816 -97.001 l
57.87 -97.054 l
57.925 -97.054 l
h
58.634 -97.054 m
58.689 -97.054 l
58.798 -96.946 l
58.798 -96.837 l
58.744 -96.782 l
58.689 -96.727 l
58.525 -96.727 l
58.47 -96.782 l
58.47 -97.001 l
58.525 -97.054 l
58.634 -97.054 l
h
59.289 -97.054 m
59.343 -97.054 l
59.398 -97.001 l
59.453 -96.946 l
59.453 -96.837 l
59.343 -96.727 l
59.234 -96.727 l
59.18 -96.782 l
59.125 -96.837 l
59.125 -96.946 l
59.18 -97.001 l
59.234 -97.054 l
59.289 -97.054 l
h
59.998 -97.054 m
60.053 -97.054 l
60.162 -96.946 l
60.162 -96.837 l
60.107 -96.782 l
60.053 -96.727 l
59.89 -96.727 l
59.835 -96.782 l
59.835 -97.001 l
59.89 -97.054 l
59.998 -97.054 l
h
60.654 -97.054 m
60.708 -97.054 l
60.763 -97.001 l
60.817 -96.946 l
60.817 -96.837 l
60.763 -96.782 l
60.708 -96.727 l
60.599 -96.727 l
60.544 -96.782 l
60.49 -96.837 l
60.49 -96.946 l
60.544 -97.001 l
60.599 -97.054 l
60.654 -97.054 l
h
61.363 -97.054 m
61.417 -97.054 l
61.472 -97.001 l
61.527 -96.946 l
61.527 -96.837 l
61.417 -96.727 l
61.253 -96.727 l
61.199 -96.782 l
61.199 -97.001 l
61.253 -97.054 l
61.363 -97.054 l
h
62.017 -97.054 m
62.072 -97.054 l
62.127 -97.001 l
62.181 -96.946 l
62.181 -96.837 l
62.127 -96.782 l
62.072 -96.727 l
61.963 -96.727 l
61.853 -96.837 l
61.853 -96.946 l
61.963 -97.054 l
62.017 -97.054 l
h
62.726 -97.054 m
62.781 -97.054 l
62.836 -97.001 l
62.89 -96.946 l
62.89 -96.837 l
62.836 -96.782 l
62.781 -96.727 l
62.617 -96.727 l
62.564 -96.782 l
62.564 -97.001 l
62.617 -97.054 l
62.726 -97.054 l
h
63.382 -97.054 m
63.437 -97.054 l
63.491 -97.001 l
63.545 -96.946 l
63.545 -96.837 l
63.491 -96.782 l
63.437 -96.727 l
63.327 -96.727 l
63.273 -96.782 l
63.218 -96.837 l
63.218 -96.946 l
63.327 -97.054 l
63.382 -97.054 l
h
64.091 -97.054 m
64.146 -97.054 l
64.255 -96.946 l
64.255 -96.837 l
64.2 -96.782 l
64.146 -96.727 l
64.037 -96.727 l
63.927 -96.837 l
63.927 -96.946 l
63.982 -97.001 l
64.037 -97.054 l
64.091 -97.054 l
h
64.746 -97.054 m
64.8 -97.054 l
64.91 -96.946 l
64.91 -96.837 l
64.8 -96.727 l
64.691 -96.727 l
64.637 -96.782 l
64.582 -96.837 l
64.582 -96.946 l
64.691 -97.054 l
64.746 -97.054 l
h
65.455 -97.054 m
65.51 -97.054 l
65.619 -96.946 l
65.619 -96.837 l
65.564 -96.782 l
65.51 -96.727 l
65.4 -96.727 l
65.346 -96.782 l
65.291 -96.837 l
65.291 -96.946 l
65.4 -97.054 l
65.455 -97.054 l
h
66.111 -97.054 m
66.164 -97.054 l
66.273 -96.946 l
66.273 -96.837 l
66.219 -96.782 l
66.164 -96.727 l
66.056 -96.727 l
66.001 -96.782 l
65.947 -96.837 l
65.947 -96.946 l
66.001 -97.001 l
66.056 -97.054 l
66.111 -97.054 l
h
66.82 -97.054 m
66.874 -97.054 l
66.929 -97.001 l
66.984 -96.946 l
66.984 -96.837 l
66.874 -96.727 l
66.765 -96.727 l
66.71 -96.782 l
66.656 -96.837 l
66.656 -96.946 l
66.71 -97.001 l
66.765 -97.054 l
66.82 -97.054 l
h
67.474 -97.054 m
67.529 -97.054 l
67.638 -96.946 l
67.638 -96.837 l
67.584 -96.782 l
67.529 -96.727 l
67.42 -96.727 l
67.31 -96.837 l
67.31 -96.946 l
67.42 -97.054 l
67.474 -97.054 l
h
68.183 -97.054 m
68.238 -97.054 l
68.347 -96.946 l
68.347 -96.837 l
68.293 -96.782 l
68.238 -96.727 l
68.129 -96.727 l
68.074 -96.782 l
68.02 -96.837 l
68.02 -96.946 l
68.129 -97.054 l
68.183 -97.054 l
h
68.838 -97.054 m
68.893 -97.054 l
68.947 -97.001 l
69.002 -96.946 l
69.002 -96.837 l
68.947 -96.782 l
68.893 -96.727 l
68.783 -96.727 l
68.73 -96.782 l
68.675 -96.837 l
68.675 -96.946 l
68.783 -97.054 l
68.838 -97.054 l
h
69.548 -97.054 m
69.603 -97.054 l
69.656 -97.001 l
69.711 -96.946 l
69.711 -96.837 l
69.656 -96.782 l
69.603 -96.727 l
69.358 -96.686 69.278 -97.024 69.548 -97.054 c
h
70.203 -97.054 m
70.257 -97.054 l
70.367 -96.946 l
70.367 -96.837 l
70.257 -96.727 l
70.148 -96.727 l
70.093 -96.782 l
70.039 -96.837 l
70.039 -96.946 l
70.148 -97.054 l
70.203 -97.054 l
h
70.912 -97.054 m
70.967 -97.054 l
71.076 -96.946 l
71.076 -96.837 l
71.021 -96.782 l
70.967 -96.727 l
70.857 -96.727 l
70.803 -96.782 l
70.748 -96.837 l
70.748 -96.946 l
70.857 -97.054 l
70.912 -97.054 l
h
71.566 -97.054 m
71.621 -97.054 l
71.676 -97.001 l
71.73 -96.946 l
71.73 -96.837 l
71.676 -96.782 l
71.621 -96.727 l
71.512 -96.727 l
71.457 -96.782 l
71.403 -96.837 l
71.403 -96.946 l
71.512 -97.054 l
71.566 -97.054 l
h
72.277 -97.054 m
72.33 -97.054 l
72.385 -97.001 l
72.44 -96.946 l
72.44 -96.837 l
72.33 -96.727 l
72.222 -96.727 l
72.167 -96.782 l
72.113 -96.837 l
72.113 -96.946 l
72.222 -97.054 l
72.277 -97.054 l
h
72.931 -97.054 m
72.986 -97.054 l
73.095 -96.946 l
73.095 -96.837 l
73.04 -96.782 l
72.986 -96.727 l
72.877 -96.727 l
72.767 -96.837 l
72.767 -96.946 l
72.877 -97.054 l
72.931 -97.054 l
h
73.639 -97.054 m
73.695 -97.054 l
73.804 -96.946 l
73.804 -96.837 l
73.75 -96.782 l
73.695 -96.727 l
73.586 -96.727 l
73.531 -96.782 l
73.477 -96.837 l
73.477 -96.946 l
73.531 -97.001 l
73.586 -97.054 l
73.639 -97.054 l
h
74.294 -97.054 m
74.349 -97.054 l
74.403 -97.001 l
74.458 -96.946 l
74.458 -96.837 l
74.403 -96.782 l
74.349 -96.727 l
74.239 -96.727 l
74.186 -96.782 l
74.13 -96.837 l
74.13 -96.946 l
74.239 -97.054 l
74.294 -97.054 l
h
75.003 -97.054 m
75.058 -97.054 l
75.167 -96.946 l
75.167 -96.837 l
75.112 -96.782 l
75.058 -96.727 l
74.949 -96.727 l
74.84 -96.837 l
74.84 -96.946 l
74.949 -97.054 l
75.003 -97.054 l
h
75.659 -97.054 m
75.713 -97.054 l
75.822 -96.946 l
75.822 -96.837 l
75.713 -96.727 l
75.604 -96.727 l
75.549 -96.782 l
75.495 -96.837 l
75.495 -96.946 l
75.549 -97.001 l
75.604 -97.054 l
75.659 -97.054 l
h
76.368 -97.054 m
76.423 -97.054 l
76.532 -96.946 l
76.532 -96.837 l
76.477 -96.782 l
76.423 -96.727 l
76.313 -96.727 l
76.259 -96.782 l
76.204 -96.837 l
76.204 -96.946 l
76.259 -97.001 l
76.313 -97.054 l
76.368 -97.054 l
h
77.022 -97.054 m
77.132 -97.054 l
77.186 -97.001 l
77.186 -96.946 l
77.241 -96.891 l
77.186 -96.837 l
77.186 -96.782 l
77.132 -96.727 l
76.968 -96.727 l
76.913 -96.782 l
76.913 -96.837 l
76.859 -96.891 l
76.913 -96.946 l
76.913 -97.001 l
76.968 -97.054 l
77.022 -97.054 l
h
77.732 -97.054 m
77.786 -97.054 l
77.896 -96.946 l
77.896 -96.837 l
77.786 -96.727 l
77.677 -96.727 l
77.622 -96.782 l
77.568 -96.837 l
77.568 -96.946 l
77.622 -97.001 l
77.677 -97.054 l
77.732 -97.054 l
h
78.387 -97.054 m
78.495 -97.054 l
78.55 -97.001 l
78.55 -96.946 l
78.605 -96.891 l
78.55 -96.837 l
78.55 -96.782 l
78.495 -96.727 l
78.333 -96.727 l
78.278 -96.782 l
78.278 -96.837 l
78.223 -96.891 l
78.278 -96.946 l
78.278 -97.001 l
78.333 -97.054 l
78.387 -97.054 l
h
79.096 -97.054 m
79.151 -97.054 l
79.206 -97.001 l
79.26 -96.946 l
79.26 -96.837 l
79.206 -96.782 l
79.151 -96.727 l
79.042 -96.727 l
78.932 -96.837 l
78.932 -96.946 l
79.042 -97.054 l
79.096 -97.054 l
h
79.751 -97.054 m
79.86 -97.054 l
79.915 -97.001 l
79.915 -96.946 l
79.969 -96.891 l
79.915 -96.837 l
79.915 -96.782 l
79.86 -96.727 l
79.696 -96.727 l
79.642 -96.782 l
79.642 -96.837 l
79.587 -96.891 l
79.642 -96.946 l
79.642 -97.001 l
79.696 -97.054 l
79.751 -97.054 l
h
80.46 -97.054 m
80.515 -97.054 l
80.569 -97.001 l
80.624 -96.946 l
80.624 -96.837 l
80.569 -96.782 l
80.515 -96.727 l
80.405 -96.727 l
80.351 -96.782 l
80.296 -96.837 l
80.296 -96.946 l
80.405 -97.054 l
80.46 -97.054 l
h
81.115 -97.054 m
81.224 -97.054 l
81.279 -97.001 l
81.279 -96.946 l
81.333 -96.891 l
81.279 -96.837 l
81.279 -96.782 l
81.224 -96.727 l
81.061 -96.727 l
81.006 -96.782 l
81.006 -96.837 l
80.952 -96.891 l
81.006 -96.946 l
81.006 -97.001 l
81.061 -97.054 l
81.115 -97.054 l
h
81.825 -97.054 m
81.879 -97.054 l
81.933 -97.001 l
81.988 -96.946 l
81.988 -96.837 l
81.879 -96.727 l
81.77 -96.727 l
81.716 -96.782 l
81.661 -96.837 l
81.661 -96.946 l
81.77 -97.054 l
81.825 -97.054 l
h
82.479 -97.054 m
82.589 -97.054 l
82.643 -97.001 l
82.643 -96.946 l
82.698 -96.891 l
82.643 -96.837 l
82.643 -96.782 l
82.589 -96.727 l
82.425 -96.727 l
82.37 -96.782 l
82.37 -96.837 l
82.316 -96.891 l
82.37 -96.946 l
82.37 -97.001 l
82.425 -97.054 l
82.479 -97.054 l
h
83.189 -97.054 m
83.243 -97.054 l
83.352 -96.946 l
83.352 -96.837 l
83.298 -96.782 l
83.243 -96.727 l
83.134 -96.727 l
83.079 -96.782 l
83.025 -96.837 l
83.025 -96.946 l
83.079 -97.001 l
83.134 -97.054 l
83.189 -97.054 l
h
83.843 -97.054 m
83.952 -97.054 l
84.007 -97.001 l
84.007 -96.946 l
84.062 -96.891 l
84.007 -96.837 l
84.007 -96.782 l
83.952 -96.727 l
83.788 -96.727 l
83.734 -96.782 l
83.734 -96.837 l
83.68 -96.891 l
83.734 -96.946 l
83.734 -97.001 l
83.788 -97.054 l
83.843 -97.054 l
h
84.553 -97.054 m
84.607 -97.054 l
84.716 -96.946 l
84.716 -96.837 l
84.662 -96.782 l
84.607 -96.727 l
84.499 -96.727 l
84.444 -96.782 l
84.389 -96.837 l
84.389 -96.946 l
84.499 -97.054 l
84.553 -97.054 l
h
85.208 -97.054 m
85.317 -97.054 l
85.372 -97.001 l
85.372 -96.946 l
85.426 -96.891 l
85.372 -96.837 l
85.372 -96.782 l
85.317 -96.727 l
85.153 -96.727 l
85.099 -96.782 l
85.099 -96.837 l
85.044 -96.891 l
85.099 -96.946 l
85.099 -97.001 l
85.153 -97.054 l
85.208 -97.054 l
h
85.917 -97.054 m
85.972 -97.054 l
86.026 -97.001 l
86.081 -96.946 l
86.081 -96.837 l
86.026 -96.782 l
85.972 -96.727 l
85.727 -96.685 85.648 -97.025 85.917 -97.054 c
h
86.572 -97.054 m
86.681 -97.054 l
86.736 -97.001 l
86.736 -96.946 l
86.79 -96.891 l
86.736 -96.837 l
86.736 -96.782 l
86.681 -96.727 l
86.517 -96.727 l
86.462 -96.782 l
86.462 -96.837 l
86.408 -96.891 l
86.462 -96.946 l
86.462 -97.001 l
86.517 -97.054 l
86.572 -97.054 l
h
87.281 -97.054 m
87.335 -97.054 l
87.445 -96.946 l
87.445 -96.837 l
87.335 -96.727 l
87.226 -96.727 l
87.173 -96.782 l
87.118 -96.837 l
87.118 -96.946 l
87.173 -97.001 l
87.226 -97.054 l
87.281 -97.054 l
h
87.936 -97.054 m
88.046 -97.054 l
88.099 -97.001 l
88.099 -96.946 l
88.154 -96.891 l
88.099 -96.837 l
88.099 -96.782 l
88.046 -96.727 l
87.882 -96.727 l
87.827 -96.782 l
87.827 -96.837 l
87.772 -96.891 l
87.827 -96.946 l
87.827 -97.001 l
87.882 -97.054 l
87.936 -97.054 l
h
88.646 -97.054 m
88.7 -97.054 l
88.755 -97.001 l
88.809 -96.946 l
88.809 -96.837 l
88.755 -96.782 l
88.7 -96.727 l
88.591 -96.727 l
88.536 -96.782 l
88.482 -96.837 l
88.482 -96.946 l
88.591 -97.054 l
88.646 -97.054 l
h
89.3 -97.054 m
89.409 -97.054 l
89.464 -97.001 l
89.464 -96.946 l
89.519 -96.891 l
89.464 -96.837 l
89.464 -96.782 l
89.409 -96.727 l
89.245 -96.727 l
89.191 -96.782 l
89.191 -96.837 l
89.136 -96.891 l
89.191 -96.946 l
89.191 -97.001 l
89.245 -97.054 l
89.3 -97.054 l
h
90.009 -97.054 m
90.064 -97.054 l
90.119 -97.001 l
90.173 -96.946 l
90.173 -96.837 l
90.119 -96.782 l
90.064 -96.727 l
89.955 -96.727 l
89.845 -96.837 l
89.845 -96.946 l
89.955 -97.054 l
90.009 -97.054 l
h
90.719 -97.054 m
90.773 -97.054 l
90.828 -97.001 l
90.828 -96.946 l
90.882 -96.891 l
90.828 -96.837 l
90.828 -96.782 l
90.773 -96.727 l
90.61 -96.727 l
90.556 -96.782 l
90.556 -96.837 l
90.501 -96.891 l
90.556 -96.946 l
90.556 -97.001 l
90.61 -97.054 l
90.719 -97.054 l
h
91.374 -97.054 m
91.429 -97.054 l
91.483 -97.001 l
91.538 -96.946 l
91.538 -96.837 l
91.483 -96.782 l
91.429 -96.727 l
91.319 -96.727 l
91.265 -96.782 l
91.21 -96.837 l
91.21 -96.946 l
91.319 -97.054 l
91.374 -97.054 l
h
92.083 -97.054 m
92.138 -97.054 l
92.192 -97.001 l
92.192 -96.946 l
92.247 -96.891 l
92.192 -96.837 l
92.192 -96.782 l
92.138 -96.727 l
91.974 -96.727 l
91.919 -96.782 l
91.919 -96.837 l
91.865 -96.891 l
91.919 -96.946 l
91.919 -97.001 l
91.974 -97.054 l
92.083 -97.054 l
h
92.738 -97.054 m
92.792 -97.054 l
92.902 -96.946 l
92.902 -96.837 l
92.847 -96.782 l
92.792 -96.727 l
92.683 -96.727 l
92.629 -96.782 l
92.574 -96.837 l
92.574 -96.946 l
92.629 -97.001 l
92.683 -97.054 l
92.738 -97.054 l
h
93.447 -97.054 m
93.502 -97.054 l
93.556 -97.001 l
93.556 -96.946 l
93.611 -96.891 l
93.556 -96.837 l
93.556 -96.782 l
93.502 -96.727 l
93.339 -96.727 l
93.284 -96.782 l
93.284 -96.837 l
93.229 -96.891 l
93.284 -96.946 l
93.284 -97.001 l
93.339 -97.054 l
93.447 -97.054 l
h
94.102 -97.054 m
94.157 -97.054 l
94.212 -97.001 l
94.265 -96.946 l
94.265 -96.837 l
94.212 -96.782 l
94.157 -96.727 l
94.048 -96.727 l
93.993 -96.782 l
93.939 -96.837 l
93.939 -96.946 l
94.048 -97.054 l
94.102 -97.054 l
h
94.812 -97.054 m
94.866 -97.054 l
94.921 -97.001 l
94.921 -96.946 l
94.976 -96.891 l
94.921 -96.837 l
94.921 -96.782 l
94.866 -96.727 l
94.702 -96.727 l
94.648 -96.782 l
94.648 -96.837 l
94.593 -96.891 l
94.648 -96.946 l
94.648 -97.001 l
94.702 -97.054 l
94.812 -97.054 l
h
95.466 -97.054 m
95.521 -97.054 l
95.63 -96.946 l
95.63 -96.837 l
95.576 -96.782 l
95.521 -96.727 l
95.412 -96.727 l
95.302 -96.837 l
95.302 -96.946 l
95.357 -97.001 l
95.412 -97.054 l
95.466 -97.054 l
h
96.175 -97.054 m
96.23 -97.054 l
96.285 -97.001 l
96.285 -96.946 l
96.339 -96.891 l
96.285 -96.837 l
96.285 -96.782 l
96.23 -96.727 l
96.066 -96.727 l
96.012 -96.782 l
96.012 -96.837 l
95.958 -96.891 l
96.012 -96.946 l
96.012 -97.001 l
96.066 -97.054 l
96.175 -97.054 l
h
96.831 -97.054 m
96.885 -97.054 l
96.994 -96.946 l
96.994 -96.837 l
96.939 -96.782 l
96.885 -96.727 l
96.776 -96.727 l
96.722 -96.782 l
96.667 -96.837 l
96.667 -96.946 l
96.722 -97.001 l
96.776 -97.054 l
96.831 -97.054 l
h
97.54 -97.054 m
97.595 -97.054 l
97.649 -97.001 l
97.649 -96.946 l
97.704 -96.891 l
97.649 -96.837 l
97.649 -96.782 l
97.595 -96.727 l
97.431 -96.727 l
97.376 -96.782 l
97.376 -96.837 l
97.322 -96.891 l
97.376 -96.946 l
97.376 -97.001 l
97.431 -97.054 l
97.54 -97.054 l
h
98.195 -97.054 m
98.249 -97.054 l
98.359 -96.946 l
98.359 -96.837 l
98.304 -96.782 l
98.249 -96.727 l
98.14 -96.727 l
98.085 -96.782 l
98.031 -96.837 l
98.031 -96.946 l
98.14 -97.054 l
98.195 -97.054 l
h
98.904 -97.054 m
98.959 -97.054 l
99.013 -97.001 l
99.013 -96.946 l
99.068 -96.891 l
99.013 -96.837 l
99.013 -96.782 l
98.959 -96.727 l
98.795 -96.727 l
98.74 -96.782 l
98.74 -96.837 l
98.685 -96.891 l
98.74 -96.946 l
98.74 -97.001 l
98.795 -97.054 l
98.904 -97.054 l
h
99.558 -97.054 m
99.613 -97.054 l
99.668 -97.001 l
99.722 -96.946 l
99.722 -96.837 l
99.668 -96.782 l
99.613 -96.727 l
99.505 -96.727 l
99.45 -96.782 l
99.396 -96.837 l
99.396 -96.946 l
99.505 -97.054 l
99.558 -97.054 l
h
100.269 -97.054 m
100.323 -97.054 l
100.378 -97.001 l
100.378 -96.946 l
100.432 -96.891 l
100.378 -96.837 l
100.378 -96.782 l
100.323 -96.727 l
100.159 -96.727 l
100.105 -96.782 l
100.105 -96.837 l
100.05 -96.891 l
100.105 -96.946 l
100.105 -97.001 l
100.159 -97.054 l
100.269 -97.054 l
h
100.923 -97.054 m
100.978 -97.054 l
101.087 -96.946 l
101.087 -96.837 l
101.032 -96.782 l
100.978 -96.727 l
100.869 -96.727 l
100.759 -96.837 l
100.759 -96.946 l
100.814 -97.001 l
100.869 -97.054 l
100.923 -97.054 l
h
101.632 -97.054 m
101.687 -97.054 l
101.742 -97.001 l
101.742 -96.946 l
101.796 -96.891 l
101.742 -96.837 l
101.742 -96.782 l
101.687 -96.727 l
101.523 -96.727 l
101.468 -96.782 l
101.468 -96.837 l
101.414 -96.891 l
101.468 -96.946 l
101.468 -97.001 l
101.523 -97.054 l
101.632 -97.054 l
h
102.287 -97.054 m
102.342 -97.054 l
102.451 -96.946 l
102.451 -96.837 l
102.396 -96.782 l
102.342 -96.727 l
102.232 -96.727 l
102.178 -96.782 l
102.124 -96.837 l
102.124 -96.946 l
102.232 -97.054 l
102.287 -97.054 l
h
102.997 -97.054 m
103.051 -97.054 l
103.105 -97.001 l
103.105 -96.946 l
103.16 -96.891 l
103.105 -96.837 l
103.105 -96.782 l
103.051 -96.727 l
102.888 -96.727 l
102.833 -96.782 l
102.833 -96.837 l
102.779 -96.891 l
102.833 -96.946 l
102.833 -97.001 l
102.888 -97.054 l
102.997 -97.054 l
h
103.652 -97.054 m
103.706 -97.054 l
103.816 -96.946 l
103.816 -96.837 l
103.761 -96.782 l
103.706 -96.727 l
103.597 -96.727 l
103.542 -96.782 l
103.488 -96.837 l
103.488 -96.946 l
103.597 -97.054 l
103.652 -97.054 l
h
104.361 -97.054 m
104.415 -97.054 l
104.47 -97.001 l
104.525 -96.946 l
104.525 -96.837 l
104.415 -96.727 l
104.252 -96.727 l
104.197 -96.782 l
104.197 -97.001 l
104.252 -97.054 l
104.361 -97.054 l
h
105.015 -97.054 m
105.07 -97.054 l
105.179 -96.946 l
105.179 -96.837 l
105.125 -96.782 l
105.07 -96.727 l
104.961 -96.727 l
104.906 -96.782 l
104.852 -96.837 l
104.852 -96.946 l
104.961 -97.054 l
105.015 -97.054 l
h
105.725 -97.054 m
105.779 -97.054 l
105.888 -96.946 l
105.888 -96.837 l
105.834 -96.782 l
105.779 -96.727 l
105.616 -96.727 l
105.562 -96.782 l
105.562 -97.001 l
105.616 -97.054 l
105.725 -97.054 l
h
106.38 -97.054 m
106.435 -97.054 l
106.544 -96.946 l
106.544 -96.837 l
106.489 -96.782 l
106.435 -96.727 l
106.326 -96.727 l
106.271 -96.782 l
106.216 -96.837 l
106.216 -96.946 l
106.326 -97.054 l
106.38 -97.054 l
h
107.089 -97.054 m
107.144 -97.054 l
107.253 -96.946 l
107.253 -96.837 l
107.199 -96.782 l
107.144 -96.727 l
106.98 -96.727 l
106.925 -96.782 l
106.925 -97.001 l
106.98 -97.054 l
107.089 -97.054 l
h
107.744 -97.054 m
107.799 -97.054 l
107.853 -97.001 l
107.908 -96.946 l
107.908 -96.837 l
107.853 -96.782 l
107.799 -96.727 l
107.689 -96.727 l
107.635 -96.782 l
107.58 -96.837 l
107.58 -96.946 l
107.689 -97.054 l
107.744 -97.054 l
h
108.453 -97.054 m
108.508 -97.054 l
108.617 -96.946 l
108.617 -96.837 l
108.562 -96.782 l
108.508 -96.727 l
108.344 -96.727 l
108.29 -96.782 l
108.29 -97.001 l
108.344 -97.054 l
108.453 -97.054 l
h
109.109 -97.054 m
109.163 -97.054 l
109.272 -96.946 l
109.272 -96.837 l
109.217 -96.782 l
109.163 -96.727 l
109.054 -96.727 l
108.999 -96.782 l
108.945 -96.837 l
108.945 -96.946 l
108.999 -97.001 l
109.054 -97.054 l
109.109 -97.054 l
h
109.818 -97.054 m
109.872 -97.054 l
109.982 -96.946 l
109.982 -96.837 l
109.872 -96.727 l
109.709 -96.727 l
109.654 -96.782 l
109.654 -97.001 l
109.709 -97.054 l
109.818 -97.054 l
h
110.418 -97.054 m
110.472 -97.054 l
110.582 -96.946 l
110.582 -96.837 l
110.472 -96.727 l
110.363 -96.727 l
110.308 -96.782 l
110.308 -97.001 l
110.363 -97.054 l
110.418 -97.054 l
h
111.127 -97.054 m
111.182 -97.054 l
111.291 -96.946 l
111.291 -96.837 l
111.236 -96.782 l
111.182 -96.727 l
111.018 -96.727 l
110.963 -96.782 l
110.963 -97.001 l
111.018 -97.054 l
111.127 -97.054 l
h
111.782 -97.054 m
111.836 -97.054 l
111.891 -97.001 l
111.945 -96.946 l
111.945 -96.837 l
111.891 -96.782 l
111.836 -96.727 l
111.728 -96.727 l
111.673 -96.782 l
111.619 -96.837 l
111.619 -96.946 l
111.728 -97.054 l
111.782 -97.054 l
h
112.492 -97.054 m
112.546 -97.054 l
112.601 -97.001 l
112.656 -96.946 l
112.656 -96.837 l
112.546 -96.727 l
112.382 -96.727 l
112.328 -96.782 l
112.328 -97.001 l
112.382 -97.054 l
112.492 -97.054 l
h
113.146 -97.054 m
113.201 -97.054 l
113.31 -96.946 l
113.31 -96.837 l
113.255 -96.782 l
113.201 -96.727 l
113.092 -96.727 l
113.037 -96.782 l
112.982 -96.837 l
112.982 -96.946 l
113.037 -97.001 l
113.092 -97.054 l
113.146 -97.054 l
h
113.855 -97.054 m
113.91 -97.054 l
114.019 -96.946 l
114.019 -96.837 l
113.965 -96.782 l
113.91 -96.727 l
113.746 -96.727 l
113.692 -96.782 l
113.692 -97.001 l
113.746 -97.054 l
113.855 -97.054 l
h
114.51 -97.054 m
114.565 -97.054 l
114.674 -96.946 l
114.674 -96.837 l
114.619 -96.782 l
114.565 -96.727 l
114.455 -96.727 l
114.402 -96.782 l
114.347 -96.837 l
114.347 -96.946 l
114.455 -97.054 l
114.51 -97.054 l
h
115.22 -97.054 m
115.275 -97.054 l
115.383 -96.946 l
115.383 -96.837 l
115.329 -96.782 l
115.275 -96.727 l
115.111 -96.727 l
115.056 -96.782 l
115.056 -97.001 l
115.111 -97.054 l
115.22 -97.054 l
h
115.875 -97.054 m
115.929 -97.054 l
116.039 -96.946 l
116.039 -96.837 l
115.984 -96.782 l
115.929 -96.727 l
115.82 -96.727 l
115.765 -96.782 l
115.711 -96.837 l
115.711 -96.946 l
115.82 -97.054 l
115.875 -97.054 l
h
116.584 -97.054 m
116.639 -97.054 l
116.693 -97.001 l
116.748 -96.946 l
116.748 -96.837 l
116.693 -96.782 l
116.639 -96.727 l
116.475 -96.727 l
116.42 -96.782 l
116.42 -97.001 l
116.475 -97.054 l
116.584 -97.054 l
h
117.238 -97.054 m
117.293 -97.054 l
117.348 -97.001 l
117.402 -96.946 l
117.402 -96.837 l
117.348 -96.782 l
117.293 -96.727 l
117.184 -96.727 l
117.129 -96.782 l
117.076 -96.837 l
117.076 -96.946 l
117.184 -97.054 l
117.238 -97.054 l
h
117.949 -97.054 m
118.002 -97.054 l
118.112 -96.946 l
118.112 -96.837 l
118.057 -96.782 l
118.002 -96.727 l
117.894 -96.727 l
117.839 -96.782 l
117.785 -96.837 l
117.785 -96.946 l
117.839 -97.001 l
117.894 -97.054 l
117.949 -97.054 l
h
118.603 -97.054 m
118.658 -97.054 l
118.767 -96.946 l
118.767 -96.837 l
118.712 -96.782 l
118.658 -96.727 l
118.549 -96.727 l
118.439 -96.837 l
118.439 -96.946 l
118.549 -97.054 l
118.603 -97.054 l
h
119.312 -97.054 m
119.367 -97.054 l
119.476 -96.946 l
119.476 -96.837 l
119.422 -96.782 l
119.367 -96.727 l
119.258 -96.727 l
119.203 -96.782 l
119.148 -96.837 l
119.148 -96.946 l
119.258 -97.054 l
119.312 -97.054 l
h
q
f
Q
S
Q
27.9062 87.7489 m
%ADOBeginSubsetFont: MRXAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MRXAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7D8BE6A6D10833A58E10E35AAF0D74F28161F1E96F93676A5
2EBF6FCEE08B05D51DFE1BD2EFD8FE31E833B04038E5209D135E90602B995882
2BEE873A5B716CE4B0D4C4CE99D22EE07BF362C2> |-
/two <1C60D8A8C9B7A73DC5046156A965F0B3A5C5C92B949F09859351B7460B
BC2BE41737489572FD61CF5BD3DA796B955EB550353EDF2F8C07B4F538413169
7035B0D3184C9331276BD170AD13B7E6187EA056B38F406A362F0A077FD8459E
E186F67C0C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MRXAAA+Times-Roman findfont /Encoding get
dup 76 /L put
dup 50 /two put
pop
end
%ADOEndSubsetFont
/N10 [8.0732 0.0 0.0 6.5192 0.0 0.0] Tf
(L2)
[4.91813 4.02207 ] pdfxs
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
13.615 -111.812 m
43.624 -111.812 l
S
Q
n
1.0 1.0 1.0 sc
18.188002 105.373001 24.288000 12.258003 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
16.34 -117.237 21.825 -13.64 re
16.34 -130.878 m
h
0.0 0.0 0.0 sc
S
Q
0.0 0.0 0.0 sc
22.4348 110.983 m
%ADOBeginSubsetFont: MRXAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MRXAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDF7E182276F33FE64591D35477734F1BEC23C2AC3C7BB2
4FE587EAFC58752906FDF803B7EE08CC0EEA6D4DF528ED9A25AEB8763A1E0F33
51E8367C0E0AF3723CBF0E47B6C61A46C0C9B9B14422A38EEC6A11432287BB1A
AA047F2C2F93CA4A999D93CAB432079751D1C3EA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MRXAAA+Times-Roman findfont /Encoding get
dup 67 /C put
pop
end
%ADOEndSubsetFont
/N10 [8.0726 0.0 0.0 6.5187 0.0 0.0] Tf
(Core)
[5.38852 4.04034 2.69215 3.58827 ] pdfxs
20.2489 106.326 m
%ADOBeginSubsetFont: MRXAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MRXAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C34DD536D1360D89197E7FA43CD15762B1F48
F10FBDCF9BC2C750CDE4A2E91649CF8859E337C2E166D3734F3568F45FDC414D
6EEB6B611B8690C7C03C> |-
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD79216DBC0D30C20B
16F949C4DACB51911E080D5D4FADB2A127C4AB23B312E9F7A5637B3EC7B4773B
C0766D726EA37C47D694AC7AB179CE3808B7676EB5FACDCFB9AD7CA33EE2035E
44EEDC76FECE036837984D9A> |-
/l <1C60D8A8C9B854D08887A955FDB583C10487D3666DB50B4DADE0EC1137BB
795306205027EDAC983BD177C55444B622C3F9984AD7B008877068E438C454AC
8927C615E0E8B502F68753A1A9> |-
/period <1C60D8A8C9B8707CBED44D23D303116EA29D4409ABB37494AFAFCCA
FB9A7D6323F579FF803D5A8B3A108FB2DAB2600F06F9F1ECA49E6BCC3A1E7896
A> |-
/space <1C60D8A8C9B8707C25> |-
/I <1C60D8A8C9B81F2C46F6291E6BC656A33181A7CEBA53BA35C0D637783657
13E4937D45432C22967EB42DF6DA1495947FD682A87B83F3472A9AC53AFF202C
ED526C6E0626B1> |-
/dollar <1C60D8A8C9B7A73DC574B147EF03E7A9C0470A43CB6130D4911F276
12E94637EB18AC2DA7068530EBE5FA117CCFF2CDC75964DEA3B52C69CDCD6DB3
69BA1963B37A26FAB9369F80C5DE3B4C57E0B81686CD2D0ED2C5AE6403C2E904
926B503A1B002F46267F1B40FF7A93C53C13B5225479F62CD9717BA94C85BFAA
2536D861F4CC92FAEF29465D4D6B19B2A34837B9CBCB0C6FE8FB920703295B05
432625D29949F8AF6F5E591235513830A018D62A54279D4427201EBA4BD10896
9EA92D6B3CFFD8B837BF7AD3A930ED663FA34F40204F07D10BEFA70DF7F07FF4
8377A2071614E887CB68D81A9211B92E26B6F> |-
/slash <1C60D8A8C9B854D091294BA916DE103B530ED44B0658EDFA9AE5572B
AD53C85F2BB138> |-
/parenright <1C60D8A8C9B81F2C34DD536D5F91D4C3DAE454AEB0D09D2D77A
B7A4947777BB664E613196BC679C0FA303967174C88DFCCFA0D154A8957EC684
FC25A36D2507079F0D08A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MRXAAA+Times-Roman findfont /Encoding get
dup 40 /parenleft put
dup 99 /c put
dup 108 /l put
dup 46 /period put
dup 32 /space put
dup 73 /I put
dup 36 /dollar put
dup 47 /slash put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
/N10 [4.0667 0.0 0.0 3.2839 0.0 0.0] Tf
(\(incl. I$/D$\))
[1.32571 1.15494 2.00488 1.82188 1.10208 1.03294 1.03213 1.21591 2.06588 1.15494 2.91582 
2.06588 1.32571 ] pdfxs
n
31.846 105.345 m
33.364 104.364 l
32.575 104.364 l
32.575 101.423 l
33.364 101.423 l
31.846 100.442 l
30.328 101.423 l
31.057 101.423 l
31.057 104.364 l
30.328 104.364 l
1.0 1.0 1.0 sc
eofill
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
28.612 -117.206 m
29.977 -116.115 l
29.267 -116.115 l
29.267 -112.841 l
29.977 -112.841 l
28.612 -111.75 l
27.248 -112.841 l
27.903 -112.841 l
27.903 -116.115 l
27.248 -116.115 l
h
0.0 0.0 0.0 sc
S
Q
n
156.976 46.533 m
156.976 45.307 l
145.623 45.307 l
145.623 42.855 l
156.976 42.855 l
156.976 41.63 l
160.802 44.081 l
0.2 0.2 0.8 sc
eofill
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
141.052 -51.76 m
141.052 -50.396 l
130.85 -50.396 l
130.85 -47.669 l
141.052 -47.669 l
141.052 -46.304 l
144.489 -49.032 l
h
0.0 0.8 0.604 sc
S
Q
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.055 w
1 j
1 J
n
16.116 -46.304 m
16.116 -87.606 l
16.17 -87.658 l
16.17 -87.713 l
16.225 -87.768 l
16.389 -87.768 l
16.444 -87.713 l
16.444 -87.658 l
16.498 -87.606 l
16.498 -46.304 l
16.444 -46.249 l
16.444 -46.195 l
16.389 -46.141 l
16.225 -46.141 l
16.17 -46.195 l
16.17 -46.249 l
16.116 -46.304 l
h
14.971 -87.168 m
16.334 -89.895 l
17.698 -87.168 l
14.971 -87.168 l
h
0.0 0.0 0.0 sc
q
f
Q
S
Q
n
0.0 0.8 0.604 sc
15.141998 26.112000 169.570007 3.236000 rectfill

q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
13.604 -29.037 152.372 -3.601 re
13.604 -32.639 m
h
0.0 0.0 0.0 sc
S
Q
n
149.37 31.775 m
149.37 29.911 l
160.784 29.911 l
160.784 26.234 l
149.37 26.234 l
149.37 24.421 l
145.606 28.098 l
0.2 0.2 0.8 sc
eofill
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
134.217 -35.338 m
134.217 -33.265 l
144.473 -33.265 l
144.473 -29.174 l
134.217 -29.174 l
134.217 -27.155 l
130.835 -31.247 l
h
0.0 0.8 0.604 sc
S
Q
n
156.95 36.652 m
156.95 34.788 l
145.598 34.788 l
145.598 31.112 l
156.95 31.112 l
156.95 29.298 l
160.775 32.975 l
eofill
q
1.11281 0.0 0.0 -0.898621 0.0 0.0 cm
0.326 w
1 j
1 J
n
141.029 -40.765 m
141.029 -38.692 l
130.827 -38.692 l
130.827 -34.601 l
141.029 -34.601 l
141.029 -32.583 l
144.465 -36.675 l
h
0.0 0.8 0.604 sc
S
Q
Q
/MRXAAA+Times-Roman /Font _pdfUndefineResource
/N10 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
