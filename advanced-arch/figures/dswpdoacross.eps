%!PS-Adobe-3.0 EPSF-3.0
%%Title: (untitled)
%%Version: 1 3
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 00:23:01 01/07/08
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 297 606 545 720
%%HiResBoundingBox: 297.0 606.0 545.1 720.0
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3746 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2008-01-07T00:23:01+08:00</xap:CreateDate>
         <xap:ModifyDate>2008-01-07T00:23:01+08:00</xap:ModifyDate>
         <xap:MetadataDate>2008-01-07T00:23:01+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:F501BDB86EBCDC119EC6FC57C2389DF2</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:F501BDB86EBCDC119EC6FC57C2389DF2</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:documentName>uuid:048fdc18-ced2-4653-ba87-51cb2fba2114</stRef:documentName>
            <stRef:instanceID>uuid:63b4f5a4-a6a6-4170-b512-0b3cd226428d</stRef:instanceID>
            <stRef:documentID>uuid:ef99482f-2663-4588-aec2-52d10ec6e3c6</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">untitled</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li/>
            </rdf:Seq>
         </dc:creator>
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
297.0 606.0 248.1 114.0 rectclip
q
297.0 606.0 m
545.1 606.0 l
545.1 720.0 l
297.0 720.0 l
h
W
n
[/DeviceGray] cs 0.0 sc
%ADOBeginSubsetFont: YNGAAA+Times-Roman Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /YNGAAA+Times-Roman def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1993, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Roman) def
/ItalicAngle 0 def
/BaseFontName (Times-Roman) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 44710 def
/FontBBox {-168 -218 1000 898} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 0 662 676 450 460 683 683] def
/OtherBlues [262 270 -218 -217] def
/FamilyBlues [-14 0 662 676 450 460 683 683] def
/FamilyOtherBlues [262 270 -218 -217] def
/StdHW [28] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[/N149/YNGAAA+Times-Roman 0 TZ
50.112 710.037 m
%ADOBeginSubsetFont: YNGAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/YNGAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B7A73DB581186A9391F1059D96F459FFDB82B44DD4DA245FA5
07D024F28401075285D307468CE0D757751AAB4F3490756973E462106B10BD76
63199C4B8A27D5695A680192DE86699DAAF1A89717FDB65265476969999FB7D7
847B55845008C66520A977913643311D83941F927D5B958DBE761028866277B0
1C9604CB3013C82C039B9AE8C95A3C2834B9ED8E05831C8156944A7F9B872094
AF1AB63EB96F8DF66A491A85E4F72D480F637D538DE8> |-
/r <1C60D8A8C9B81F2C46F2EFD1B3B81533015C6076AEA2DF2F336244DA608D
0666A9C39147579BE5F84064BA5DCF6CD4C576D0177C42EAE7438D00AB1D6595
6107D443F0AD6F08A63F5306BE8A1920B3CB273D9CF24739F3E4740FB53EC981
D22501D5AF8E600BA9EEBFA742EC328561AB6E257A9B7C3C0B4F8CAC20D46ECD
F05FEB5C54162C09AD2C0169673C> |-
/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34A93F0BF7A993E
7B76B394E0DD4E0D515EE382B893A080E29B40A4402A4A406056947B5B2334F6
D5909CCB56B0284CEFC066661E9D6B7471673D105428B9DFDD7F> |-
/v <1C60D8A8C9B7A73DDC2846ECA263561BB4F0CB265FF24368623DA96FEDE7
6204DF8B0EC0AB4F60A8D28FCF9D21B445814A1976831A796C43EF58C4605ABE
CE010A1D9BF2BAF6904BAEB3609ABABD10A6FCE3E7F2ADCCAEF32E1C3FE17F0B
E1D1C97B832631C8537D1E3A59FB6CACD0B1> |-
/i <1C60D8A8C9B854D08887A954377F4C214D4B21F7492A7553FF39CC630E80
1180DD16566EA992053D700F571C962E92EE02C6D82716C0473307AD723B6798
5001C64C2D995FF692007B5CA8DE93957C4672C9482F0FE971562A04ADA3ED80
642F55B1C8A3B339468512B3D5E6503179BCD4D2EA59F7619EF7B270C6D7B2B7
C08A6BA66CAC2847BEAAEF1753ED49A16028> |-
/d <1C60D8A8C9B7A73DCF5C5F7CCFE122477E3699B91C9B1BF29D2B29542C32
F7957B9A8BE8AC2B124B6CFCCBF5CAA8053FE5EA68FA8C64E7237CD261CCDDAD
B6D7FE4A869CB865CDAB26C9E25B04203D9519C9A0E3B458DF8C27C1A70ADB26
C064A218CE82BCD5D2FC0C1FDCB4C5FDBE129BAE009D93CB3A2E1658182C849C
FAAD3BA41F93AACECEE631F2C69A450B43D2C8C15D7392E295E980870E88E6B6
5FC1A9979C708236D29F594B8B1E64A91089505067AF3C5832B555B52E514000
C9178DE5B54C5CB0A780A1EDF140C9393071EFB526E9CFE69ED135D6131CD3B2
E5BD02061FCF> |-
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB40537D3B34E4D85733A582F
C4A35A139249CD52BC9F3D8702E5238EA1584552BB139B2FA8E8AF6ADB725AC9
88E8038C63CC98292FA274964F057DD3DD90F918CCDB06CF8FF9093CFB289906
8DCE9A23D07E1368> |-
/s <1C60D8A8C9B7361F743FE5C092782516B89C667F24852F2833C914D37274
1C204CB19829CF798EC00B6F60FD56301EF9B4136E1F422FAA9773C81ADFC08A
FD24624819F92289BABB5D2A560D29B4C37B5C72F295B1A8757B2DDC4F96A3A7
A76D5B8850E9D3B3108E173E7C2AC94ED9F5B4EBB2AC4F74997A581EAA1D8190
963213A6DBA3FD99B4DDDF91DEB606EB29DAC3E030DB9A2BEA3B60C98F55A0A9
B8097DA00FD849056413A4E04E950801ED2DEBB675BE1B554F9631E4585ABC48
35BC41F89E63D8392C1A8342285EAC8F2B8B58557F824903B620AFE0715F546D
0AE70512AC27F8B194275175C4707F> |-
/g <1C60D8A8C9B7A73DB582976F6FA2EE84F51D64198201D65DA0379D449296
CB33756AB3A7AE8A175EF9BB7E6667E704AA36397D842A4683F771819C78135E
F0B455C13E311CBB866AEFE329B6F52B2221D0336B69FAD4E4E81CDD8998ABF0
669D384CC67DB6CFEB8A66595B4A650724AA273D9E1169E84F9C77F0A418C289
4C5B746841205D3436C2C1B587229CD290D09CA382D1C9529C9CE920A65F438C
38CAA9A135E87D56D7B983324F4ED251DA6E0357F756A1F213D1E3DE07A8846F
D3401EBD39FDF6B92DDF7A8C8A8C8CE90CF9E3A9AABD6ADA466E3F1401FE5B96
D08AC492AE33B92EB9535FDFE1F783249CAEF304B838754D41893E951AD187AF
837A28D1506CE6DEF32CA63A8C2A4B955AF6A40848A98B871F4F1B3FB62013F4
CC669689021E45B3B69D14EDD2B2A744D2C66B261120B6C5CEB8AB138BBF9004
CB2E94E80C216C86B72B469D0BFF2EF69EED7A76E895C3D4BEDBC1E5FA41C0EA
9459E41BB0704A8CFE47> |-
/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C634F1E9284F6FC7263
711D03C47F22A203EB41F88268C104BC4A61C7649DA42D5BE18FE7F731730EB4
D130993D14FEE046DD67E78C9CE5C5598D396AB18A5366D9E71D2D6A292A9108
9ACF40B09098B729C4807DB1C9D54B7EE1602D3D091D4525D3E7868AFA4B4D0D
EB009172C2D67F26ED44CA4931A6533F30AB34> |-
/fi <1C60D8A8C9B7EF32570AFF8232948072BEC4C50248C1208A69B28B65AAD
BCA92759C919FA1E9FEED9805553A4DA719E642BF818FA1F207BFFFA261F4684
EEDEC74D5FA21E60ACFC86CCDCCAB1F34855657DE53C09E74BC643E809747A44
90D6E2D525AF43CE58C800D0193B9010CC02486234A64211423A04A884D1A18E
2C4C799E4031868F5F8929D448A1458DE6A58EBDC3E769B78B56AD6F3C689089
3155C869249FD7E103355818BDC9562338D8C46D29D2BAEBD26F54A3F04BFF5A
B47412AADC6504439861AF13C368549AA61> |-
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD79216DBC0D30C20B
16F949C4DACB51911E080D5D4FADB2A127C4AB23B312E9F7A5637B3EC7B4773B
C0766D726EA37C47D694AC7AB179CE3808B7676EB5FACDCFB9AD7CA33EE2035E
44EEDC76FECE036837984D9A> |-
/a <1C60D8A8C9B77FE2B8A4D222FB41F47F459CA0D95123D06ECF654AB05FF5
B6DC144FC9BBEC366E5ECC063C78F59640CE32DD9D219C4F4385FAEDBC60FF33
4CB1D3BF02D9F353F73914E29D9DD64FAA28B45E23265BD78A90B345EFEAD972
A0D93CE817026DBF17DB9E8E49AD8C2AF4FC6486D49F260206F186E614E3D16B
2F4AD46463A28F92ED5F2851044761192B9ADCF8B12C73A96A7E57C5841BD16A
930132DACDF469EE0C2A8F85A167570E289B5609FF9CB20DD38C9C84A9BB9FC8
A7014AC491483F6C> |-
/t <1C60D8A8C9B854D082F829CADA24029904B667043F82AAF5798ADB1AF637
87A08D89C04AC22E998B93D82023FC776DB3B03794FD10AD1A9169D67270B70C
C8030C1164B605608F8ED713A3CC4AFDDB0825DD3A8B4DD78D9148075B5FF6> |-
/l <1C60D8A8C9B854D08887A955FDB583C10487D3666DB50B4DADE0EC1137BB
795306205027EDAC983BD177C55444B622C3F9984AD7B008877068E438C454AC
8927C615E0E8B502F68753A1A9> |-
/y <1C60D8A8C9B7A73DB5828C8EB66C86A2CEEEF3783234CAB54F02AC5BECA9
34F0E54EE049003BCF650B53AA60CE3C1FC3324A198AF5C696C635AF1EFC791A
C2523D47F44774A48D59303008A1053C5CB2DAD5B133EDCB1E48E70376A7DB04
454D5230427D6DDAC185975C09ABA410729BD10E3744A64B8EFC756B11797041
22075D4CADAF9C4847E4D34B855DA858244A6F5937B4501BF18364D96FE6327D
DF36BD79063A030A289F> |-
/comma <1C60D8A8C9B8707CB516A860815AB2EC26918885F713E4ED7939803E
0A8E0EE12DBD595F7B4FC46C96E99C7C244F8EE37F7C691D6FF966A57DBB357A
175F54A977790792A86A701245F8E3A81974A3254E3CFE0117AA8FEF> |-
/m <1C60D8A8C9B6FF86E3B590DB9FE94810D7AFBFE7B946F15ADC4969344E90
E1A3F6BB0EC423A0839831AD6C986649A08BE59C9A3AF60608A974950B299379
DB00149450A78653D6D4B9B18966FB51AC5B75CCA0334B3300F064709EE52494
90C1CB7C6E6F7A3DBD6837889932B38C16FA553F6A7BD9185FFB760601FDDBFD
7930E4AC7BECAE9AD6791ABDBA39315D352FD8AE963BAD63A90DE0C2123010B0
EF3ACFE5CCCEC98020275A13F5F8B62B6D0E664AECDA682DD1C094376DEC7143
68E6A9D4562381E06E9FE97A9B56> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/YNGAAA+Times-Roman findfont /Encoding get
dup 112 /p put
dup 114 /r put
dup 111 /o put
dup 118 /v put
dup 105 /i put
dup 100 /d put
dup 101 /e put
dup 115 /s put
dup 103 /g put
dup 110 /n put
dup 222 /fi put
dup 99 /c put
dup 97 /a put
dup 116 /t put
dup 108 /l put
dup 121 /y put
dup 44 /comma put
dup 109 /m put
pop
end
%ADOEndSubsetFont
/N149 9.963 Tf
(providesigni\336cantlatencytolerance,mitigatingdesign)
[4.9804 3.31651 4.83196 4.9804 2.76862 4.9804 10.2319 3.87459 2.76862 4.9804 4.9804 
2.76862 5.53833 4.42248 4.42248 4.9804 8.58801 2.76862 4.42248 2.76862 4.42248 4.9804 
4.27403 10.7898 2.76862 4.9804 2.76862 4.42248 3.31651 4.42248 4.9804 4.42248 4.42248 
9.13597 7.75012 2.76862 2.76862 2.76862 4.9804 4.42248 2.76862 2.76862 4.9804 10.7998 
4.9804 4.42248 3.87459 2.76862 4.9804 4.9804 ] pdfxs
50.112 698.082 m
%ADOBeginSubsetFont: YNGAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/YNGAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/x <1C60D8A8C9B7A73DC5490245197C6A10ADDC3E0FA58392059EC7D8F6B66F
B0930B38EB119ACB6A2A3F634D77F5CF7C8D99C62501D6684A6FD07A49AFFC3C
8D4A82B3CF26A1008A17EB4D755FF3A3C27A9298224B64119007CCAAEA399519
8EBFE01F45BC69C30B7E1A4D982888B5DD81639A4A2DA136A3E428D0A595B9A5
8BF3FC51A3D02FBDD4C35B31565C699ACE47B45837740F69CAEE1F4B878D92AB
00A1811AED685024318EDFFD47C767258EBCB2EDBAA901AFCBC7FA> |-
/b <1C60D8A8C9B7A73DCF483CC3D064C5FA06F86B27E7CBEBE08CFA613F8E3E
A9893E9C65934D70E8A1A61851D47333ADCCA9248EAAB11C24B5A5EC76B31DE7
9633624C03B00A1B759E4BC857F34EE18BC404270F1D65C409E75BC36F829006
ADE36154F16CBECC62624F16841A55A2ADA3EE50EABAAEFED663> |-
/u <1C60D8A8C9B7A73DE1FEDB8466C8FCD68C94DEDB7A49373DBA7AD7E63A97
0C3B208E3AB4A4837E607B9FCF6B636DEA9BD6E8D310F39A07E9AFC7A410B6CE
2643E48310171B013730181752B4F94CBE287A21257250C8927597ABC032F774
7C37D6009F7506536975F7E321770E4A6D755164CD3FE654E25AF8379D3F51FF
B00A4CB6CB067C165846A83DCF9EED5DCEAE219CAE16C5C42DCE> |-
/hyphen <1C60D8A8C9B81F2C3AED63678C15FF4B0D41EAF1ADF08534F78C6CF
D85> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/YNGAAA+Times-Roman findfont /Encoding get
dup 120 /x put
dup 98 /b put
dup 117 /u put
dup 45 /hyphen put
pop
end
%ADOEndSubsetFont
(complexitybyreducinginter-corecommunicationandper-)
[4.42357 4.9815 7.75121 4.9815 2.76971 4.27413 4.9815 2.76971 2.76971 7.65158 4.9815 
7.64162 3.31761 4.42357 4.9815 4.9815 4.42357 2.76971 4.9815 7.65158 2.76971 4.9815 
2.76971 4.42357 3.11834 3.31761 4.42357 4.9815 3.31761 7.09366 4.42357 4.9815 7.75121 
7.75121 4.9815 4.9815 2.76971 4.42357 4.42357 2.76971 2.76971 4.9815 7.65158 4.42357 
4.9815 7.65158 4.9815 4.42357 3.11834 3.31761 ] pdfxs
50.112 686.128 m
%ADOBeginSubsetFont: YNGAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/YNGAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/q <1C60D8A8C9B7A73DB5811938DD329AF571F14FFDE692A057FCB729720A5B
ED4D1F9C0C23BDB1CB452F40EB6D848BE0932F4C760F5C2503004914FFB4B676
82FA186AE228665B2BFEA6ACC885BEC05363FF79301DC87EB9E5C026E33B1707
B560B235E300E90D1225B3F5646ADDE05DCB20F259A4A8F9EE35B417CA23FCC3
15BAD2FB6734C0B8BCA0E27A3A137C64206716203345A864EDB66059A017842F
1314A9089CC31918917957F569> |-
/period <1C60D8A8C9B8707CBED44D23D303116EA29D4409ABB37494AFAFCCA
FB9A7D6323F579FF803D5A8B3A108FB2DAB2600F06F9F1ECA49E6BCC3A1E7896
A> |-
/U <1C60D8A8C9B6079FE80F64D637F1516D9E8985E20DE1E4A504B71DC250CC
94F8454FA963469B35C9D4B7E46C018A2F3902FA466C96536C754E001D7B60F1
C628148C766518D0DC4CFB4FCBBE135C4BE555811EB0F5DE32774AE040CA6449
20E9C9E4CEC38A967DCB11773942911928CF14258BA4> |-
/f <1C60D8A8C9B81F2C46F2EFDEFE0CB59F321E43BFD6E82BCAAF0597468DCF
77C72CE9F4FF44E681C46DF934E6F13477EDB282AE0A0AEB3C1EAE1FE7BD0F6D
E854793C6EBB102BA640EE2A1937B205F1275AE2A18BEEEA6F56A75ACE6F8742
D16A82839984> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/YNGAAA+Times-Roman findfont /Encoding get
dup 113 /q put
dup 46 /period put
dup 85 /U put
dup 102 /f put
pop
end
%ADOEndSubsetFont
(coreresourcerequirements.Usingourinitialfullyauto-)
[4.42357 4.9815 3.31761 8.37889 3.31761 4.42357 3.87568 4.9815 4.9815 3.31761 4.42357 
8.37889 3.31761 4.42357 4.9815 4.9815 2.76971 3.31761 4.42357 7.75121 4.42357 4.9815 
2.76971 3.87568 9.97296 7.19329 3.87568 2.76971 4.9815 8.94677 4.9815 4.9815 7.27292 
2.76971 4.9815 2.76971 2.76971 2.76971 4.42357 6.72502 3.31761 4.9815 2.76971 2.76971 
8.93681 4.42357 4.9815 2.76971 4.9815 3.31761 ] pdfxs
50.112 674.173 m
(maticcompilerimplementationandavalidatedprocessor)
[7.75121 4.42357 2.76971 2.76971 8.2394 4.42357 4.9815 7.75121 4.9815 2.76971 2.76971 
4.42357 7.13343 2.76971 7.75121 4.9815 2.76971 4.42357 7.75121 4.42357 4.9815 2.76971 
4.42357 2.76971 2.76971 4.9815 8.79733 4.42357 4.9815 8.79733 8.2394 4.73243 4.42357 
2.76971 2.76971 4.9815 4.42357 2.76971 4.42357 8.79733 4.9815 3.31761 4.9815 4.42357 
4.42357 3.87568 3.87568 4.9815 3.31761 ] pdfxs
50.112 662.219 m
%ADOBeginSubsetFont: YNGAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/YNGAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B6079F073CF9E9FD4DD755103DBBF988710B5D17B2B563BA02
0398379B9EA64AD12B2EBF3E9336297D4DC7942BDD2ED7A81841FAE3A98EF0AD
ECD629375C7360CF109001710C30DF247AD3244FF4010A1882D415ED3B8ADF02
B2F7CC586D54D6A497D381F446772855FF9D6FFC5EB3894EF5F2C44BF0911045
344D047DCB15BBF9C7BA622C59922CA227CC2D19B27261C628CE9D4DF54E6980
757FD6EA6D73B184040D371D30C463725B41E923> |-
/h <1C60D8A8C9B7A73DC549024A8346FEB28CD77E49559D8456BC7F56C74F69
AD962623AE6AA482974A2FC5BE4274401EAE893ECBF63A067D3E183A5EBAC19C
C09C28C750891E617DC3D529C37DF06145163A44EEAAAC4367F8838138088ECC
F09E85CF0F0F6FFA9C2DC0E54E1832571C6381AB709722BBE7F7030325E1E6D6
7C1A94C5CA1EFFFB01A6516680CA551539> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/YNGAAA+Times-Roman findfont /Encoding get
dup 119 /w put
dup 104 /h put
pop
end
%ADOEndSubsetFont
(model,weprovetheconceptbydemonstratingsigni\336cant)
[7.75121 4.9815 4.9815 4.42357 2.76971 5.9778 7.19329 7.71137 4.9815 3.31761 4.83206 
4.83206 7.71137 2.76971 4.9815 7.71137 4.42357 4.9815 4.9815 4.42357 4.42357 4.9815 
6.0575 4.9815 8.26929 4.9815 4.42357 7.75121 4.9815 4.9815 3.87568 2.76971 3.31761 
4.42357 2.76971 2.76971 4.9815 8.26929 3.87568 2.76971 4.9815 4.9815 2.76971 5.53943 
4.42357 4.42357 4.9815 2.76971 ] pdfxs
50.112 650.264 m
(gainsforadual-corechipmultiprocessorrunningavariety)
[4.9804 4.42248 2.76862 4.9804 6.67519 3.31651 4.9804 6.11711 7.22308 4.9804 4.9804 
4.42248 2.76862 3.31651 4.42248 4.9804 3.31651 7.22308 4.42248 4.9804 2.76862 7.781 
7.75012 4.9804 2.76862 2.76862 2.76862 4.9804 3.31651 4.9804 4.42248 4.42248 3.87459 
3.87459 4.9804 6.11711 3.31651 4.9804 4.9804 4.9804 2.76862 4.9804 7.781 7.22308 
4.73233 4.42248 3.31651 2.76862 4.42248 2.76862 4.9804 ] pdfxs
50.112 638.309 m
%ADOBeginSubsetFont: YNGAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/YNGAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B5D6EF203CFD756D7886AF6B4D72C64D102C090DCB22144820
3777D2E989B6D8CA925BB9F09D7635344AF6D8790947E90846C84B446FB182C3
996E65588B4EF39CA64E9AA4A2538A99AEC5E70DD161115FCC191730E44A5160
C7EBB966FEAD56B4266D4ED0E97F83EAE10EF75598B7026B0E0ED910894D7349
EA66916DB3296E3DE243335ECE5E71481776A2FBC35A47D081BF28D90FFAD9C1
A655BA98EE0A1A28> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/YNGAAA+Times-Roman findfont /Encoding get
dup 87 /W put
pop
end
%ADOEndSubsetFont
(ofcodes.Wealsoexploresimpleopportunitiesmissedby)
[4.9815 6.47588 4.42357 4.9815 4.9815 4.42357 3.87568 7.57188 8.60804 7.58185 4.42357 
2.76971 3.87568 8.12981 4.27413 4.9815 4.9815 2.76971 4.9815 3.31761 7.58185 3.87568 
2.76971 7.75121 4.9815 2.76971 7.58185 4.9815 4.9815 4.9815 4.9815 3.31761 2.76971 
4.9815 4.9815 2.76971 2.76971 2.76971 4.42357 7.03395 7.75121 2.76971 3.87568 3.87568 
4.42357 8.13977 4.9815 4.9815 ] pdfxs
50.112 626.355 m
(ourinitialcompilerimplementation,whichsuggestavery)
[4.9815 4.9815 6.58547 2.76971 4.9815 2.76971 2.76971 2.76971 4.42357 6.02761 4.42357 
4.9815 7.75121 4.9815 2.76971 2.76971 4.42357 6.58547 2.76971 7.75121 4.9815 2.76971 
4.42357 7.75121 4.42357 4.9815 2.76971 4.42357 2.76971 2.76971 4.9815 4.9815 5.94791 
7.19329 4.9815 2.76971 4.42357 8.2394 3.87568 4.9815 4.9815 4.9815 4.42357 3.87568 
6.03758 7.69144 4.83206 4.42357 3.31761 4.9815 ] pdfxs
62.0666 602.446 m
%ADOBeginSubsetFont: YNGAAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/YNGAAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7D8BE7EA0B64700DC8E438573301CAC4344B7D410E182F881
F58CB0EE6C7200F45451BF195D6B4EC9CF9C8B176B767CF2064CDC4BF9C3DA0B
6A6FF54C56F67DE1F05535B028AE5A1E7C736084EB09A8A00FEB9607E1E016> |-
/D <1C60D8A8C9B6079F1E66B7565D0C0FE392D7D1AED8C6DCA6A1AA2DE51BB0
54073985C252F108C147E5B894B74E8DD41D4B29079CD8FEDF6FFB13221241AF
8820FB20A248B8E44058D948F8799185C6AB1FC88F91843001045D85F85BFF44
C0DE80EF9567CFF979CF6DFE9ADC683295CC56E28FAA9DD701C805DE88F6EEB7
4153DF11DEC18134D86E418F935794> |-
/S <1C60D8A8C9B7EF32A193189DA2467EEF90BB4843AFCD07682C17FCB181C3
F70B0CA8436486C289ED34AE435D16FF1CB07A2B01CAD9573442FA519C68EF9A
198BFAE5C4A460021A5C56FEA9BD8D624F7DAF5F40358D4BEEF4C33B8CA9313A
0976CADAB3AF967336E068B5FDB3E208F4079D52BB0970F735315F1E256DFA87
D04984A8> |-
/P <1C60D8A8C9B7EF32570E39CC82D8FC3971C64FFF40AB84806AE53A80D003
59C85B6AFD0D4E4516E6F925E114CB5694CA3C3BB5BD1D3AACEA6F4D4E17877A
A50A9AB3B90A72FF729470C063D06BEEAA5184A0D925F90DCE26119419701EB2
53AFCA84A1D0339652DC6259CB60A6C47C07B17E94492CCC7FA176E9C4175D61
D356F93D23B513D5121081D0F8AD8E04BD4C29CCCFFE386A44> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/YNGAAA+Times-Roman findfont /Encoding get
dup 84 /T put
dup 68 /D put
dup 83 /S put
dup 80 /P put
pop
end
%ADOEndSubsetFont
(Thispaper\336rstpresentsthedetailsoftheDSWPalgo-)
[6.08732 4.9815 2.76971 7.15351 4.9815 4.42357 4.9815 4.42357 6.59543 5.53943 3.31761 
3.87568 6.04754 4.9815 3.31761 4.42357 3.87568 4.42357 4.9815 2.76971 7.15351 2.76971 
4.9815 7.7014 4.9815 4.42357 2.76971 4.42357 2.76971 2.76971 7.15351 4.9815 6.59543 
2.76971 4.9815 7.7014 7.19329 5.53943 9.40508 8.81725 4.42357 2.76971 4.9815 4.9815 
3.31761 ] pdfxs
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
0.125 w
n
338.843 663.23 9.99359 9.99359 re
338.843 643.243 9.99359 9.99359 re
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
343.09 652.987 m
344.589 652.987 l
344.589 655.418 l
343.84 653.42 l
343.09 655.418 l
eoclip
n
0.125 w
n
343.84 663.23 m
343.84 653.236 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
343.09 655.418 m
343.84 653.42 l
344.589 655.418 l
343.09 655.418 l
eofill
0.125 w
n
343.09 655.418 m
343.84 653.42 l
344.589 655.418 l
343.09 655.418 l
h
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
343.773 672.441 m
344.356 673.823 l
342.107 674.756 l
343.673 673.29 l
341.524 673.374 l
eoclip
n
0.5 w
2 j
n
343.84 663.23 m
343.79 663.213 l
343.706 663.163 l
343.54 663.097 l
343.273 662.997 l
342.924 662.864 l
342.507 662.697 l
342.007 662.514 l
341.474 662.314 l
340.908 662.114 l
340.342 661.931 l
339.776 661.764 l
339.226 661.631 l
338.71 661.515 l
338.243 661.431 l
337.81 661.381 l
337.41 661.381 l
337.044 661.415 l
336.727 661.465 l
336.428 661.581 l
336.161 661.714 l
335.928 661.898 l
335.711 662.131 l
335.512 662.397 l
335.345 662.68 l
335.178 662.997 l
335.045 663.33 l
334.912 663.713 l
334.779 664.13 l
334.679 664.563 l
334.579 665.029 l
334.496 665.529 l
334.429 666.028 l
334.379 666.561 l
334.346 667.111 l
334.312 667.661 l
334.312 668.793 l
334.346 669.343 l
334.379 669.892 l
334.429 670.425 l
334.496 670.925 l
334.579 671.425 l
334.679 671.891 l
334.779 672.324 l
334.912 672.741 l
335.045 673.124 l
335.178 673.457 l
335.345 673.773 l
335.512 674.057 l
335.711 674.323 l
335.928 674.556 l
336.161 674.739 l
336.428 674.873 l
336.727 674.989 l
337.044 675.039 l
337.41 675.073 l
337.81 675.073 l
338.243 675.023 l
338.71 674.939 l
339.226 674.823 l
339.776 674.689 l
340.342 674.523 l
340.908 674.34 l
341.474 674.14 l
342.007 673.94 l
342.507 673.757 l
342.924 673.59 l
343.273 673.457 l
343.84 673.224 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
341.524 673.374 m
343.673 673.29 l
342.107 674.756 l
341.524 673.374 l
eofill
0.125 w
n
341.524 673.374 m
343.673 673.29 l
342.107 674.756 l
341.524 673.374 l
h
S
%ADOBeginSubsetFont: DBFBAA+Times-Roman Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /DBFBAA+Times-Roman def
/FontInfo 7 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002; Numero, infinity and Omega made by Dmitry 40in (C) 2001) def
/ItalicAngle 0 def
/BaseFontName (Times-Roman) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5020931 def
/FontBBox {-168 -281 1031 924} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 450 470 662 682] def
/StdHW [30] def
/StdVW [85] def
/StemSnapH [30 38] def
/StemSnapV [85 103] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 32 /space 37 /percent 40 /parenleft/parenright/asterisk/plus
/comma/hyphen/period/slash/zero/one
/two/three/four/five/six/seven
/eight/nine/colon/semicolon 61 /equal/greater
 65 /A/B/C/D/E/F
/G/H/I/J/K/L
/M/N/O/P 82 /R/S
/T/U 87 /W/X 91 /bracketleft 93 /bracketright
 97 /a/b/c/d/e/f
/g/h/i/j/k/l
/m/n/o/p/q/r
/s/t/u/v/w/x
/y/z/braceleft 125 /braceright 138 /minus 144 /quoteright
/N73/DBFBAA+Times-Roman -1 TZ
340.509 666.978 m
%ADOBeginSubsetFont: DBFBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/DBFBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7D8BE6A6D10833A58E102E626790EF1BEB7AD8837C7A1CDBD
E9D464E09C53AEF900054BE1A0FC0D10E9D0CBE863F3DBA5CB8E18E838178B61
268679874001ECA568FACEB334A9C8CC6F55D0D555A2287C249BBE9B3DFEF84D
4A339BEC52929C7F4DE2A8ECC521D68317BDA6> |-
/D <1C60D8A8C9B6079F1E48848E88AD51CC495AB30F7DF7054AE6A553D58F18
F22AABCDE567F9EDA417B3180A0ABFC32401BF447EADEA9BB23793AE6361FF4E
6CBE3CF2B9646242A4D04B060A68CC4759264AB321BB09A737683B6FDB268214
ED9223284D62D4385F7A4EE7C405B5C690C0AC10C6D2F83C551074A1E720F0B8
1393CA0C7B0E6ED8295FD6526FCEBBF40B28052E129E9C2D63E5E4E9BBB2FC53
95B3BB1F6FD8C86415783D7678477B88C13A665FF0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DBFBAA+Times-Roman findfont /Encoding get
dup 76 /L put
dup 68 /D put
pop
end
%ADOEndSubsetFont
/N73 4.9968 Tf
(LD)
[3.05301 3.60769 ] pdfxs
342.036 646.991 m
%ADOBeginSubsetFont: DBFBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/DBFBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/X <1C60D8A8C9B6079F1E48848E88AD51D6840D00ED95A069DC16528DC18F64
98E5D924D3E711873B2BE1F47615DA05F6418DCB515B20ACE26D1D996A239B18
EC6E064B5227FA36C5676168F2DF01AA9215E9EAC454860B9F181178A082E85F
96E3F9A2512AA58B69FCBE036927055FD5EEBB32757C74132503116DDB3AB0D6
8DF8699A7BC06A0FDE5F430ACE2AE2115238AC7C31D296A3805BC26497CD7E64
C2AEBD26898332D1F49DD9D080F74D615511552A833605E2699540CAC562D556
5E618F9B5BDB9AAA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DBFBAA+Times-Roman findfont /Encoding get
dup 88 /X put
pop
end
%ADOEndSubsetFont
(X) show
308.862 683.217 m
%ADOBeginSubsetFont: DBFBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/DBFBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/braceright <1C60D8A8C9B75BE5086EF4B1F9363AF5BAC3B121CF0BF3D5092
84A4F422DC996F498B734BF22303E2FA2054A25B492B56DB0E0088810890468B
306E2D63DEEF7729FDE7C0D93E4F2D4A28BDA73CD0DF4AC33948D4A83919EBFA
C9B22D7BAA04531A7A8ABD24A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DBFBAA+Times-Roman findfont /Encoding get
dup 125 /braceright put
pop
end
%ADOEndSubsetFont
/N73 6.9955 Tf
(}) show
308.862 703.204 m
%ADOBeginSubsetFont: DBFBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/DBFBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B6079F6DCEA23647EFB791CDC764E84E981383B3CAA1C57658
085645C159DFD8563F150210B20F18301E76245BE7E7995710B3B35A7AC4BBE2
CE400D7E4B737242F3F440EC08733475986CAA912E03E55D18A800D4D1E750AC
DD7515C35EAA73DBF357BF238F1657E30FB471A39A003A70C8FA36CBBD0B5776
B5FB1F1B172060E5DA1775C76EC574469344D9D31975C6AB30CA38CA98045762
B3C1694506181D37CCD05520> |-
/h <1C60D8A8C9B7A73DC549024A8346FE80E9210DEA275FB5F668C648718AD7
BCC436358C0FD8CD2D8DE4DE9BD45614624CC21269D544C027EA1CC7C22188D9
350CD64A3DD9650F9E40FB3327D714A63BB74F7D8456D55A89D3A552C029F272
C80BCE577AECBF18FEEE83914AB829F9A48825DB28FF25801D0AB0AABF6691FC
05E7FDC2861A5862> |-
/i <1C60D8A8C9B854D08887A954F0E7BE85D0887C16182FA4FD6652938ACB64
0FE8795B00C8E45E8722401765F5E0001866B8AB0832BD37ED7FC52D3BFADAAE
11171C3A9873A6D6A0C71A62957AEFE027C7816ABB156AC38104B61B769FBC6B
943F6634> |-
/l <1C60D8A8C9B854D08887A9764B8831D9E97335BDD3DC0940B3C080344753
ED316D960891B71FC70303950E52CD3C0CB8AEFDB1B0147D84FCF1D2FE90597D
57EEA52A4135E57D88> |-
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB4598F87C338598C4F359D15
4701105B91D71789866B8BBDD17C51AE2B80B6E9F47C5014A178B7C760E089E4
D6B50937639285A177B2DF2F9CD9B293DCADC3AA4DBEC7EDEC1EDE937DA59145
B9D8A5509D89ABB6F024A66CDE0F535E3C7B64> |-
/space <1C60D8A8C9B8707C25> |-
/parenleft <1C60D8A8C9B81F2C468947AE620DBD301F0E6084B3B21953998F
049683F9258FDD1704F846A9ADCA7BFFB7B37F99CD7499DB6D2D9B330A222AAF
36F8D92C9EE1E074963D1F79FC715305862DFD085B> |-
/p <1C60D8A8C9B7A73DB581186A9391F1059D96F45EF76B7E6156F758C5B752
4C517A6BFB78A7BA0B5DD242ECD3D793F3CF11407281DE650034FA85182F1108
09A5070E33824FDD144E3084847EA250147A33E28ACB0D54A87727ED47B6ED7A
19230A8A5051D01628138A35FF63EC81065BEDC8F3B8183A910E056C81DBE3DB
0C522257BED90783C1EF924ACE8BE45B75F6C54FAD617855AA0372E3D92348F9
991A1BF6A2095B5234B4759AABEFBE7B649DB7E0> |-
/t <1C60D8A8C9B854D082F829CADA24028C80D846E2AB3236B17CAAE9D6D83E
2118A50E9B4A0DF7A975441BD0BC11A4F1C659AD57632E786B7EB401A5594688
3894CB08B6ACFA409E354487501CF0FBE51DCD32A9BEF083FF0E4413EAB18351
45D655A20480> |-
/r <1C60D8A8C9B81F2C46F2EFD1B3B8153696500DA95A35B43C56C63744853F
4A59F216C7E7DB9E92EFE8BA3085092041198370F2930948A7C7F613BE21015A
71249ABFFBE2A092D1910ADCE80906AEC5C7B8AF2DAD56B1D470A076953AA20B
465F80693D9623170A07F536D978820509> |-
/equal <1C60D8A8C9B7E7C1AFEDC39B6E53EDA7DE049158B9DBB3320563009C
1FAE91F6E6C9650795D3E24EF22BE2> |-
/minus <1C60D8A8C9B7E7C1AF911262F751279C37210F4BC872232DB232> |-
/greater <1C60D8A8C9B7E7C1FFE265DCFA85FDCA5C0AA4FECA3A42613972D9
050EEBBD555BD88ADAA7> |-
/n <1C60D8A8C9B7A73DC549024A80DEC08E763D6ECCF404DD3E863A525A142B
0F1CC6C11750BEE4BF102B4259B10CC54AC3FA8B4A00764C5F5300C8F56385D0
B0A9244BA24135528C87634FD99FB05B93BCB7F5CA1B8BCF5DCA2F22A2CF717D
AB03E60B6354EF61948CB413071EE165BF3D7797DE1D84BF15FA1105E742862B
D3A4A27F> |-
/x <1C60D8A8C9B7A73DC549024AEE55A01C267BE7535ADEB970EDB07A73DA22
21D1A8AE1158F2B7D8953BCEA0B19CC5ECEC1855158D435D5C5C09DE58859906
6B8470EE1510DBC77D586430AD2B8797624E5AC9501A45152AF0862CE273E2C8
52811AB8C4683227AD9D14B265283271F88672D21F87AE19B99EAA0145B81FB5
8F05F66CC9D659279921FC888BFD9D9B5EEC0425DE32EEB21C812079B626FA7C
3B10F1E848A98AAB> |-
/parenright <1C60D8A8C9B81F2C3A852C511B2EDD6D7C9F5151A01B6DCBFFD
B11B72015067AB463EE5857EA0D2651F87A101A1ABA3ED2454E3881C2FE7E7FD
9A05FB9D1E468CA208C9F44040F01B4D266AB284064> |-
/braceleft <1C60D8A8C9B75BE50E4720CDAD819897C4F802AC65A774E89997
288B396A800D9020CD9458EB892921D87BCB769C9039AB0A3DC2AF734CA951A7
A5E915AF2C6E9F78BED0E72EC8461B30BD970BDA72614BB281BEDAF230F4F137
61FF9FB0F9CDB3801B777F30> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DBFBAA+Times-Roman findfont /Encoding get
dup 119 /w put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 101 /e put
dup 32 /space put
dup 40 /parenleft put
dup 112 /p put
dup 116 /t put
dup 114 /r put
dup 61 /equal put
dup 138 /minus put
dup 62 /greater put
dup 110 /n put
dup 120 /x put
dup 41 /parenright put
dup 123 /braceleft put
pop
end
%ADOEndSubsetFont
(while \(ptr = ptr\212>next\) {)
[5.05075 3.49775 1.94475 1.94475 3.106 1.74888 2.32945 3.49775 1.94475 2.32945 1.74888 
3.94543 1.74888 3.49775 1.94475 2.32945 3.94543 3.94543 3.49775 3.106 3.49775 1.94475 
2.32945 1.74888 3.35781 ] pdfxs
311.36 693.21 m
%ADOBeginSubsetFont: DBFBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/DBFBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B7A73DB6FD8624184F2427FE4C13B4B36F553CD0D55662E4C1
7B97AE4389BB398EABA6F9F3944230C8C1E65768EF2962ADEAAD5D518AB099EF
AEEAACC96CD3FE82D6176FD312E386294390F847ABD6AD7600C8E885C3636D47
A8B8BEF6E5984ABDD2AD10EB6B55C32F63A0> |-
/a <1C60D8A8C9B77FE2B8A5A0E626F00BBDDFD535ECDF18C7B94406F78FDA1F
4EE639BB325BE7472C068AF06A1CDB435FCE802FB46880386BB23168D9241876
EC3D14F6F8DF52EDC3969978B165844C3D2005B6339E892DD8CFFC0B6C023F4D
5266AB1127801B2EB64EE572D8A0EFB41C3E2E35C2070F0112E7D3142E2D6804
8008FCF0B0C8935DA710342C92A5D38275F8BEF0351F38A486657650BDD1D47D
A50755010691616DAF1EF3460DC9DF42FB01710CCD5D3A537C2EA9D4C75A7B4A
755C85FA22332920E57B6A897E0ABD> |-
/plus <1C60D8A8C9B7E7C1D348B97AC3C0CEA30D7FD44CBB7EF7803FCFDE420
7B3F0065C33A1C912098317DD5E81ABACE2ABDC4A415F37C8F239> |-
/one <1C60D8A8C9B7A73DC5490243E557DFE60F0C9ABF86356A13CECD6B76D5
F7B86DD1350730FDAF7BFC2C76F5E1AB330C22AF1584A1BC1A34914B738C6024
4637D494560D57E5BBF61F3063EC63B77F7815> |-
/semicolon <1C60D8A8C9B854D086778DF97FA826DF6CFA266B53394C0A8274
5EC8291254DFAFC06E797927FA594D47EF00CD20BA9C13B7D341F7BE606A9693
CB9B0FEFFEBD49FDA08A5AAADC665B6149E3DFA39CE64FD1A6D7D28E4C779DB2
11ED64513B0C> |-
/slash <1C60D8A8C9B854D07EAD443135D9875A2B74E17EB0AFE6B6A9C048B1
85E174> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DBFBAA+Times-Roman findfont /Encoding get
dup 118 /v put
dup 97 /a put
dup 43 /plus put
dup 49 /one put
dup 59 /semicolon put
dup 47 /slash put
pop
end
%ADOEndSubsetFont
(  ptr\212>val = ptr\212>val + 1; // X)
[1.74888 1.74888 3.49775 1.94475 2.32945 3.94543 3.94543 3.49775 3.106 1.94475 1.74888 
3.94543 1.74888 3.49775 1.94475 2.32945 3.94543 3.94543 3.49775 3.106 1.94475 1.74888 
3.94543 1.74888 3.49775 1.94475 1.74888 1.94475 1.94475 1.74888 5.05075 ] pdfxs
n
408.798 694.46 9.99359 9.99359 re
408.798 674.473 9.99359 9.99353 re
433.782 674.473 9.99359 9.99353 re
433.782 654.486 9.99359 9.99359 re
408.798 654.486 9.99359 9.99359 re
408.798 634.498 9.99359 9.99359 re
433.782 634.498 9.99359 9.99359 re
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
413.045 684.217 m
414.544 684.217 l
414.544 686.648 l
413.795 684.65 l
413.045 686.648 l
eoclip
n
0.125 w
n
413.795 694.46 m
413.795 684.466 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
413.045 686.648 m
413.795 684.65 l
414.544 686.648 l
413.045 686.648 l
eofill
0.125 w
n
413.045 686.648 m
413.795 684.65 l
414.544 686.648 l
413.045 686.648 l
h
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
413.045 644.242 m
414.544 644.242 l
414.544 646.674 l
413.795 644.675 l
413.045 646.674 l
eoclip
n
0.125 w
n
413.795 654.486 m
413.795 644.492 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
413.045 646.674 m
413.795 644.675 l
414.544 646.674 l
413.045 646.674 l
eofill
0.125 w
n
413.045 646.674 m
413.795 644.675 l
414.544 646.674 l
413.045 646.674 l
h
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
438.029 664.229 m
439.528 664.229 l
439.528 666.661 l
438.779 664.662 l
438.029 666.661 l
eoclip
n
0.125 w
n
438.779 674.473 m
438.779 664.479 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
438.029 666.661 m
438.779 664.662 l
439.528 666.661 l
438.029 666.661 l
eofill
0.125 w
n
438.029 666.661 m
438.779 664.662 l
439.528 666.661 l
438.029 666.661 l
h
438.779 634.498 m
438.779 629.502 l
406.3 671.974 14.99 34.978 re
406.3 632.0 14.99 34.978 re
431.284 651.987 14.99 34.978 re
431.284 629.502 m
431.284 646.99 l
446.274 646.99 l
446.274 629.502 l
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
438.729 643.709 m
439.278 645.108 l
437.03 646.008 l
438.612 644.559 l
436.464 644.609 l
eoclip
n
0.5 w
n
413.795 654.486 m
438.779 644.492 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
436.464 644.609 m
438.612 644.559 l
437.03 646.008 l
436.464 644.609 l
eofill
0.125 w
n
436.464 644.609 m
438.612 644.559 l
437.03 646.008 l
436.464 644.609 l
h
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
413.278 665.096 m
413.828 663.696 l
416.093 664.596 l
413.961 664.546 l
415.527 665.995 l
eoclip
n
0.5 w
n
438.779 674.473 m
413.795 664.479 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
415.527 665.995 m
413.961 664.546 l
416.093 664.596 l
415.527 665.995 l
eofill
0.125 w
n
415.527 665.995 m
413.961 664.546 l
416.093 664.596 l
415.527 665.995 l
h
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
438.729 683.684 m
439.278 685.083 l
437.03 685.982 l
438.612 684.533 l
436.464 684.583 l
eoclip
n
0.5 w
n
413.795 694.46 m
438.779 684.466 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
436.464 684.583 m
438.612 684.533 l
437.03 685.982 l
436.464 684.583 l
eofill
0.125 w
n
436.464 684.583 m
438.612 684.533 l
437.03 685.982 l
436.464 684.583 l
h
S
0.5 w
[1.9987 ] 0.0 d
n
426.287 719.444 m
426.287 624.505 l
S
[] 0.0 d
n
438.779 634.498 m
426.287 629.502 l
S
0.125 w
n
501.239 694.46 9.99359 9.99359 re
501.239 674.473 9.99359 9.99353 re
526.223 674.473 9.99359 9.99353 re
526.223 654.486 9.99359 9.99359 re
501.239 654.486 9.99359 9.99359 re
501.239 634.498 9.99359 9.99359 re
526.223 634.498 9.99359 9.99359 re
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
531.17 683.684 m
531.719 685.083 l
529.471 685.982 l
531.053 684.533 l
528.904 684.583 l
eoclip
n
0.125 w
n
506.236 694.46 m
531.22 684.466 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
528.904 684.583 m
531.053 684.533 l
529.471 685.982 l
528.904 684.583 l
eofill
0.125 w
n
528.904 684.583 m
531.053 684.533 l
529.471 685.982 l
528.904 684.583 l
h
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
531.17 643.709 m
531.719 645.108 l
529.471 646.008 l
531.053 644.559 l
528.904 644.609 l
eoclip
n
0.125 w
n
506.236 654.486 m
531.22 644.492 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
528.904 644.609 m
531.053 644.559 l
529.471 646.008 l
528.904 644.609 l
eofill
0.125 w
n
528.904 644.609 m
531.053 644.559 l
529.471 646.008 l
528.904 644.609 l
h
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
531.17 663.696 m
531.719 665.096 l
529.471 665.995 l
531.053 664.546 l
528.904 664.596 l
eoclip
n
0.125 w
n
506.236 674.473 m
531.22 664.479 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
528.904 664.596 m
531.053 664.546 l
529.471 665.995 l
528.904 664.596 l
eofill
0.125 w
n
528.904 664.596 m
531.053 664.546 l
529.471 665.995 l
528.904 664.596 l
h
506.236 634.498 m
518.728 629.502 l
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
505.486 684.217 m
506.985 684.217 l
506.985 686.648 l
506.236 684.65 l
505.486 686.648 l
eoclip
n
0.5 w
n
506.236 694.46 m
506.236 684.466 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
505.486 686.648 m
506.236 684.65 l
506.985 686.648 l
505.486 686.648 l
eofill
0.125 w
n
505.486 686.648 m
506.236 684.65 l
506.985 686.648 l
505.486 686.648 l
h
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
505.486 664.229 m
506.985 664.229 l
506.985 666.661 l
506.236 664.662 l
505.486 666.661 l
eoclip
n
0.5 w
n
506.236 674.473 m
506.236 664.479 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
505.486 666.661 m
506.236 664.662 l
506.985 666.661 l
505.486 666.661 l
eofill
0.125 w
n
505.486 666.661 m
506.236 664.662 l
506.985 666.661 l
505.486 666.661 l
h
S
Q
q
n
545.1 719.999 -236.238 -112.983 re
308.862 719.999 m
h
505.486 644.242 m
506.985 644.242 l
506.985 646.674 l
506.236 644.675 l
505.486 646.674 l
eoclip
n
0.5 w
n
506.236 654.486 m
506.236 644.492 l
S
Q
q
n
308.862 607.016 m
545.1 607.016 l
545.1 719.999 l
308.862 719.999 l
W
n
n
505.486 646.674 m
506.236 644.675 l
506.985 646.674 l
505.486 646.674 l
eofill
0.125 w
n
505.486 646.674 m
506.236 644.675 l
506.985 646.674 l
505.486 646.674 l
h
S
0.5 w
n
506.236 634.498 m
506.236 629.502 l
S
[1.9987 ] 0.0 d
n
518.728 719.444 m
518.728 624.505 l
S
411.991 678.221 m
/N73 4.9968 Tf
(XLD)
[23.4575 3.05301 23.4575 ] pdfxs
436.975 658.233 m
(XLD)
[-26.5105 3.05301 3.60769 ] pdfxs
411.991 638.246 m
(XLD)
[23.4575 3.05301 23.4575 ] pdfxs
428.785 714.447 m
%ADOBeginSubsetFont: DBFBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/DBFBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64EDF7E182277E7D914EF388A0973AF4ACC3C8D9A7570DF64
E80D273B6968DBD393FE70E2B4BD003131FF44DF8BD18A7C359B3BBF5371845D
CFAAE496BDDCE3E45320D437B135518528F963075D3189EC7DF80BFD1A875C18
2CE72A2888F426CD88574ADA07FE2BF9117349FC40E0E399B75EB873F63060B7
F484F93EC29581EDAE0B67F2D6B4A6> |-
/o <1C60D8A8C9B7A73DCF4402F5174BF7FE61CD45614EAD7180D8EC36014C37
53C9F848BB1C436DD73E21DD56EF62F895187DA5F0B9D638DBE19B9CF182A9D6
E2C5119E6F48047F539135F156E6DF6AD7573A01E8121ACAFADAB43A152B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DBFBAA+Times-Roman findfont /Encoding get
dup 67 /C put
dup 111 /o put
pop
end
%ADOEndSubsetFont
/N73 7.4952 Tf
(Core 1)
[4.99935 3.7476 2.49585 3.32787 1.8738 3.7476 ] pdfxs
502.905 698.208 m
/N73 4.9968 Tf
(LD)
[3.05301 3.60769 ] pdfxs
529.416 658.233 m
(XLD)
[-26.5105 3.05301 3.60769 ] pdfxs
502.905 678.22 m
(LDX)
[3.05301 23.4575 3.60769 ] pdfxs
502.905 638.246 m
(LDX)
[3.05301 23.4575 3.60769 ] pdfxs
496.037 714.447 m
%ADOBeginSubsetFont: DBFBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/DBFBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7A73D33BD7C9339964DF833CB86D5FEF88216AD9F1AB7D
A4D1D62F21CA3C813D6E68DA3F8FDEB523CD1537E9A0D29629423D3A5F8EBE17
93E6FD9E2BE0B916EAB3DBAE19A4B5154E63E7B27828F79DFA4ED2A80B59FBB1
4A575CF36CF93B9F8270F39B2161B41DEAE8E8389AFC8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DBFBAA+Times-Roman findfont /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/N73 7.4952 Tf
(Core 0Core 1Core 0)
[4.99935 3.7476 2.49585 3.32787 1.8738 8.7439 4.99935 3.7476 2.49585 3.32787 1.8738 
-134.073 4.99935 3.7476 2.49585 3.32787 1.8738 3.7476 ] pdfxs
410.464 698.208 m
/N73 4.9968 Tf
(LD)
[3.05301 3.60769 ] pdfxs
372.054 618.259 m
%ADOBeginSubsetFont: DBFBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/DBFBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B81F2C46F6291E6BC656B8D489931DEA87823FA4A63131214F
16D7A45EAC6B8C328C11B08456E1309F55695DA8CFEC8C13A9C4DB6299C133A5
37E25577105BD7B4> |-
/s <1C60D8A8C9B7361F743FE5C0927B8EA82C2C1294641C12F4462F8ED898BB
BBEE1BA1B56D4FEA6FE50ED9B9BC5B5C6391919BFFAE74CEBE224839B23F5C57
9037AFAEED7B8EEE8B439C21D94E9E1F8080860C671F2A5D447DEE3E541CEBB3
8DEC371C2578A669782FAF3F6C378CC52B76AB431BA6F02B21F42E49D470A86E
4425DB8B297FAC7C8635DBE4D20B7C6C79DE7BE798FEB0BE02957B3928947094
5437FBEDB04E9517E052C8D27F5D232276FCC24DFD7A4296050CC948AA090F82
57B640FE40D68134BEE9E798C817922024DD0A03B7E732151B7784D5AAFC> |-
/asterisk <1C60D8A8C9B7A73DB965C42F61DD124049B1C448B0E24AD696A9A
3CF5C9D9C94396C7081E07947F8DCA2F1326430D96BA8A73D06D533D4F46DA91
A23D402F46DAD421BD90365482906FE050CE8B83E81D6C06AE44AD6493D5A513
4428DDEB90B3FF9821BC6C60FB4BE6705FFE786BB47BFB8A39673363E9A98C87
CFD925C591781E75C922B22D5D3C61B0E6D7A3DBB93E0C1D5043637EEB218E90
B6DA269681229805BCA55A185786DF5612150DDF77582FE94BDFF50E31D3362A
2A30254C2BDE9EEFB760D71502128BCFF4C88DD27F60953B4B260AD09D533875
5BF312DE9DAA3C436EB364A844CFF35F6F34D646FBB675071BCC09254C39A780
BA3DFA64C> |-
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE02B44469F89EA4BAEF4FC763523FA63A
4F8FC208256A6214359EDE74F6C4BBA1B6F1EEFD7C27EA9C57EAFE42BDDEC6F7
207D49512F90BB41E64CB64ED13D88C535F983F9198183DC5A65815F9989E7B5
1C15033E9FF326B6DE1B48> |-
/y <1C60D8A8C9B7A73DB582A24DD1B3BC5A4A7008353519B1F8F3FDF00AF134
F3FB6C772D7285D9452DF22BBFABC7E114B04A90F7F244187DE14019FC93B665
AB3C11B81DC96191082155D9C7281591E7BB925319D6F886180B47D2AF409CD5
9ED774A3983C8B0B16DF7B9DA5C32337940DC73C1E748CBE98E7956FE2102ACF
E2D78F8255846560B343F1AE3D66DE97809DE237C9A59F02241F77> |-
/m <1C60D8A8C9B6FF8689426298A5A57BB771B81EAFF34BA1FFF812AE4D7EC3
DA49B3C2CC3EAFBD6584E0EEFD27A43C5EA29E99EC3AF6A25762D887F2B521BB
4D3210CB1662F29715DDDE59A77EF22BB8DAF88BC57A30FCC907D2DE070AAB78
D243915712989993E95E677A07F3E306D7F69A4923A40F80C4F98F39C48DDEE3
BA3A6CD273C7B98B9B31FF541189ED71A5B5DC40CDDD002666AD42DE1B7B7779
12DD334C09208F1A279FE8B4D1BA519D05CCCDFA8E721601E271ED39163B4D91
BDFF200FCC504914> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DBFBAA+Times-Roman findfont /Encoding get
dup 73 /I put
dup 115 /s put
dup 42 /asterisk put
dup 99 /c put
dup 121 /y put
dup 109 /m put
pop
end
%ADOEndSubsetFont
/N73 6.9955 Tf
(Iters * \(LD Latency + Comm Latency\)Iters * LD Latency)
[2.32945 1.94475 3.106 2.32945 2.7213 1.74888 3.49775 1.74888 2.32945 4.2742 5.05075 
1.74888 4.2742 3.106 1.94475 3.106 3.49775 3.106 3.49775 1.74888 3.94543 1.74888 
4.66605 3.49775 5.4425 5.4425 1.74888 4.2742 3.106 1.94475 3.106 3.49775 3.106 
3.49775 14.0203 2.32945 1.94475 3.106 2.32945 2.7213 1.74888 3.49775 1.74888 4.2742 
5.05075 1.74888 4.2742 3.106 1.94475 3.106 3.49775 3.106 3.49775 ] pdfxs
508.316 607.016 m
%ADOBeginSubsetFont: DBFBAA+Times-Roman AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
/DBFBAA+Times-Roman findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7EF32A2AA3EDC3AEBF2A2F195768D50EB6A69C0BC3186BCF4
C5854B30EE9195310654143CD530BA3C056115DBC7362EBF3F7BD46708F381A7
6677D4087D4D84B3E7C9EBE45F9A15C986C7C5EE994007E413F8933D886969D0
C04C16A7CE5C45568875C662781D19527A94F5A210A0162A7228AF63FC1A45E3
8FF82631EF1F8065CAF9986F2522473951C8E71F81023828EF4CC1E7DE649D08
E7AFBC854E881A89E9A11AF728E7490F419ECFF95ADD429C5F59602A4759DE02
EEB622FB6D7ED87A7ECFC0E5E55EFC0741DEE785DB2AA5041DD1> |-
/W <1C60D8A8C9B5D6EF3599A55361F1151112E2F93E219FC62105E6CEC64AA1
C45D0FDA0691756064A76EDE1A6D39D789F3B1D2680E1D581562D972A7ABAEB9
59798F8D10A33BD9C819F3711A67793F93B3FC3506909E04DE00ABC64E4E16B3
6A80F6FD8F2BA3C890634A26FF2EB40C7ECFA3BFA719DBD630CE7F3BEA51454D
FCD018CBD43E73A882544A9F9DC39916BB67508716E3DCBE9DEF2D7EC28B98D0
87C52ECD> |-
/P <1C60D8A8C9B7EF32570E39CC82D8FC3963BE693DE92AC3AD61D95B7511F8
C6F6E5E12ABA04C8D8668ADA681726E226B3FDBCF9700D58E5680D01396BE4FC
8E3B7EBB4637864DBBDEBC5688EBF36EDC3E3CC5614FC48022CCF5422C10DF1B
6C644F13AA7020B0387DB9B85813AE5A265D2AE269986B68206DFEE0542CD367
1D0713264AE5B937EBFD5B6E361FDB48443AF19001B170A726AF42B8E813C95E
8378A56277D2BA896EBBED4362805DF086> |-
/O <1C60D8A8C9B6079FE817D875D2CBFF937E88E84A108C387DCEAEE99AD800
47F466370F02D43072A5575C4EEA8BBF14FA4CEB51CD2F0C1FB7E918D543C7D0
E1FE61074596C3F36862415B504DB2EEEF125497A8A34A8FF8A20AA05DD253C8
E455278E7A33FA98F1A31E33655EAA826DF85BCA8576DF27F4D5E5D2DC886449
E094646833D7D88D398C65914AC4C4B09905BB> |-
/A <1C60D8A8C9B6079F1E48848039BAD53EE39881B4B3F26C99EF9FE1522DFF
6F26943C1ECA24C164AF5F61B2C92DFAD07FA0C8B1B904B41F6CF6DDF9C07D4A
1CF222F4352E2EA60050F34CA043EEEB5AF553D582858BCF9E068F5065DBCBB4
5B5119EB0191891F126AB93C9835C0B66D0D57B60965> |-
/R <1C60D8A8C9B64EDF88216CFE5F8DFCAB15B9D2E54F689E54EC7EA94BBAEB
FD014907B5553EECF7E84E7533E7746CA4A8046D79BBA6D3551BD6D211F21DFA
89662C5D38249B8F851C81991FC577296C62AA1A433037884FE5B7C25A778CA7
5BC75A2358C972F7D81D6DB14597E6C8079B6C900B93FD17F6C74C2D00FB9373
A02696A5C145E22EF23DA43F75D1EED3233CA26C1046FDCBB064C808C19769B2
49CCF604E3A7184B8A2418D568AE343DBA10C6AF7C83C6C60DFBDBA8AA9F6CB3
263A80337277E4D1F3D10D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/DBFBAA+Times-Roman findfont /Encoding get
dup 83 /S put
dup 87 /W put
dup 80 /P put
dup 79 /O put
dup 65 /A put
dup 82 /R put
pop
end
%ADOEndSubsetFont
/N73 7.4952 Tf
(DSWPDOACROSS)
[5.41154 4.16733 7.07547 -118.674 5.41154 5.41154 5.41154 4.99935 4.99935 5.41154 4.16733 
4.16733 ] pdfxs
Q
q
65.9893 0.0 0.0 50.8715 528.011 5.0 cm
Q
Q
/YNGAAA+Times-Roman /Font _pdfUndefineResource
/N149 /Font _pdfUndefineResource
/DBFBAA+Times-Roman /Font _pdfUndefineResource
/N73 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
